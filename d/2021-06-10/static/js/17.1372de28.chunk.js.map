{"version":3,"sources":["../../src/SGFParser/SGFSyntaxError.ts","../../src/SGFParser/SGFParser.ts","../../src/types.ts","../../src/BoardBase/BoardObject.ts","../../src/BoardBase/FieldObject.ts","../../src/BoardBase/BoardMarkupObject.ts","../../src/BoardBase/BoardLabelObject.ts","../../src/BoardBase/BoardLineObject.ts","../../src/utils/EventEmitter.ts","../../src/utils/makeConfig.ts","../../src/BoardBase/defaultConfig.ts","../../src/BoardBase/BoardBase.ts","../../src/CanvasBoard/CanvasLayer.ts","../../src/CanvasBoard/ShadowLayer.ts","../../src/CanvasBoard/GridLayer.ts","../../src/CanvasBoard/drawHandlers/DrawHandler.ts","../../src/CanvasBoard/drawHandlers/Stone.ts","../../src/CanvasBoard/drawHandlers/ShellStoneBlack.ts","../../src/CanvasBoard/drawHandlers/ShellStoneWhite.ts","../../src/CanvasBoard/drawHandlers/GlassStoneBlack.ts","../../src/CanvasBoard/drawHandlers/GlassStoneWhite.ts","../../src/CanvasBoard/drawHandlers/PaintedStoneBlack.ts","../../src/CanvasBoard/drawHandlers/PaintedStoneWhite.ts","../../src/CanvasBoard/drawHandlers/SimpleStone.ts","../../src/CanvasBoard/drawHandlers/RealisticStone.ts","../../src/CanvasBoard/drawHandlers/MarkupDrawHandler.ts","../../src/CanvasBoard/drawHandlers/ShapeMarkup.ts","../../src/CanvasBoard/drawHandlers/Circle.ts","../../src/CanvasBoard/drawHandlers/Square.ts","../../src/CanvasBoard/drawHandlers/Triangle.ts","../../src/CanvasBoard/drawHandlers/Label.ts","../../src/CanvasBoard/drawHandlers/Dot.ts","../../src/CanvasBoard/drawHandlers/XMark.ts","../../src/CanvasBoard/drawHandlers/Line.ts","../../src/CanvasBoard/drawHandlers/Arrow.ts","../../src/CanvasBoard/drawHandlers/Dim.ts","../../src/CanvasBoard/themes/baseTheme.ts","../../src/CanvasBoard/themes/realisticTheme.ts","../../src/CanvasBoard/themes/modernTheme.ts","../../src/CanvasBoard/CanvasBoard.ts","../../src/kifu/propertyValueTypes.ts","../../src/kifu/KifuNode.ts","../../src/Game/rules.ts","../../src/Game/Position.ts","../../src/SGFParser/sgfTypes.ts","../../src/Game/Game.ts","../../src/PlayerBase/basePropertyListeners.ts","../../src/PlayerBase/PlayerBase.ts","../../src/PlayerDOM/PlayerDOM.ts","../../src/SVGBoard/types.ts","../../src/SVGBoard/svgDrawHandlers/Arrow.ts","../../src/SVGBoard/svgDrawHandlers/SVGFieldDrawHandler.ts","../../src/SVGBoard/svgDrawHandlers/SVGMarkupDrawHandler.ts","../../src/SVGBoard/svgDrawHandlers/Circle.ts","../../src/SVGBoard/svgDrawHandlers/Dim.ts","../../src/SVGBoard/svgDrawHandlers/Dot.ts","../../src/SVGBoard/generateId.ts","../../src/SVGBoard/svgDrawHandlers/SVGStoneDrawHandler.ts","../../src/SVGBoard/svgDrawHandlers/GlassStoneBlack.ts","../../src/SVGBoard/svgDrawHandlers/GlassStoneWhite.ts","../../src/SVGBoard/svgDrawHandlers/Label.ts","../../src/SVGBoard/svgDrawHandlers/Line.ts","../../src/SVGBoard/svgDrawHandlers/ModernStoneBlack.ts","../../src/SVGBoard/svgDrawHandlers/ModernStoneWhite.ts","../../src/SVGBoard/svgDrawHandlers/RealisticStone.ts","../../src/SVGBoard/svgDrawHandlers/SimpleStone.ts","../../src/SVGBoard/svgDrawHandlers/Square.ts","../../src/SVGBoard/svgDrawHandlers/Triangle.ts","../../src/SVGBoard/svgDrawHandlers/XMark.ts","../../src/SVGBoard/createGrid.ts","../../src/SVGBoard/createCoordinates.ts","../../src/SVGBoard/defaultSVGTheme.ts","../../src/SVGBoard/SVGBoard.ts","../../src/SVGBoard/SVGCustomFieldObject.ts","../../src/SVGBoard/SVGCustomLabelObject.ts","../../src/PlayerDOM/components/SVGBoardComponent.ts","../../src/PlayerDOM/components/CommentsBox.ts","../../src/PlayerDOM/components/GameInfoBox.ts","../../src/PlayerBase/plugins/EditMode.ts","../../src/PlayerDOM/components/Container.ts","../../src/PlayerDOM/components/ControlPanel.ts","../../src/PlayerDOM/components/ResponsiveComponent.ts","../../src/PlayerDOM/components/PlayerTag.ts","../../src/SimplePlayer/SimplePlayer.ts"],"names":["message","parser","__proto__","prototype","name","lineNo","charNo","sgfString","split","Array","join","Error","CODE_A","charCodeAt","CODE_Z","CODE_WHITE_CHAR","isCharUCLetter","char","charCode","Color","sgf","position","this","currentChar","nextChar","processChar","SGFSyntaxError","parsePropertyValue","optional","value","parsePropertyIdent","ident","parsePropertyValues","values","push","parseProperty","parseNode","property","properties","parseSequence","sequence","parseGameTree","children","parseCollection","gameTrees","type","zIndex","opacity","x","y","scaleX","scaleY","rotate","setPosition","setScale","factor","BoardObject","variation","E","FieldObject","text","BoardMarkupObject","start","end","_events","on","evName","callback","off","filter","fn","emit","forEach","args","makeConfig","defaults","config","mergedConfig","defaultKeys","Object","keys","key","val","defVal","constructor","isArray","undefined","indexOf","defaultBoardBaseTheme","stoneSize","marginSize","font","backgroundColor","backgroundImage","markupBlackColor","markupWhiteColor","markupNoneColor","markupLineWidth","shadowColor","shadowTransparentColor","shadowBlur","shadowOffsetX","shadowOffsetY","grid","linesWidth","linesColor","starColor","starSize","coordinates","color","bold","defaultBoardBaseConfig","size","width","height","starPoints","5","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","viewport","top","right","bottom","left","coordinateLabelsX","coordinateLabelsY","theme","element","objects","resize","redraw","addObject","boardObject","i","length","hasObject","updateObject","removeObject","objectPos","splice","removeObjectsAt","obj","removeAllObjects","setWidth","setHeight","setDimensions","getViewport","setViewport","getSize","setSize","getCoordinates","setCoordinates","EventEmitter","board","init","document","createElement","style","context","getContext","scale","pixelRatio","save","boardElement","appendChild","linesShift","transform","draw","drawFunction","leftOffset","getX","topOffset","getY","fieldSize","globalAlpha","res","restore","then","err","console","error","clear","clearRect","CanvasLayer","drawGrid","tmp","params","beginPath","lineWidth","strokeStyle","tx","Math","round","ty","bw","bh","strokeRect","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","drawCoordinates","t","textBaseline","textAlign","xRight","xLeft","yTop","yBottom","coordinatesX","coordinatesY","fillText","shadow","canvasCtx","boardConfig","stoneRadius","blur","startRadius","max","stopRadius","gradient","createRadialGradient","addColorStop","DrawHandler","stone","radGrad","Stone","shellSeed","ceil","random","z","angle","drawShell","ctx","radius","lines","thickness","arg","fromAngle","toAngle","drawShellLine","r","startAngle","endAngle","m","diffX","diffY","x1","cos","y1","sin","x2","y2","atan","c","bx1","by1","bx2","by2","bezierCurveTo","lw","paths","fallback","randSeed","images","loadImage","path","Promise","resolve","reject","image","Image","onload","onerror","src","count","idx","catch","p","drawImage","getColor","B","W","drawShape","fillColor","MarkupDrawHandler","ShapeMarkup","rect","closePath","fontSize","sqrt","getLineX","getLineY","triangleLen","getBaseLineX","getBaseLineY","circleLen","fillRect","baseTheme","snapToGrid","drawHandlers","drawHandlers.SimpleStone","CR","drawHandlers.Circle","SQ","drawHandlers.Square","LB","drawHandlers.Label","TR","drawHandlers.Triangle","MA","drawHandlers.XMark","SL","drawHandlers.Dot","LN","drawHandlers.Line","AR","drawHandlers.Arrow","DD","drawHandlers.Dim","realisticTheme","drawHandlers.RealisticStone","drawHandlers.GlassStoneBlack","drawHandlers.GlassStoneWhite","modernTheme","drawHandlers.ShellStoneBlack","drawHandlers.ShellStoneWhite","canvasBoardDefaultConfig","zIndexSorter","obj1","obj2","elem","wrapperElement","className","margin","layers","GridLayer","ShadowLayer","window","devicePixelRatio","countX","countY","rightOffset","bottomOffset","min","resizeCallback","removeEventListener","offsetWidth","addEventListener","floor","boardWidth","boardHeight","layer","redrawScheduled","requestAnimationFrame","sort","object","handler","bind","TypeError","registerBoardListener","evt","layerX","pos","getRelativeCoordinates","layerY","absoluteX","absoluteY","BoardBase","NONE","read","str","write","NUMBER","parseFloat","toString","TEXT","COLOR","WHITE","BLACK","POINT","String","fromCharCode","LABEL","substr","VECTOR","propertyValueTypes","_default","transformer","multiple","notEmpty","KO","MN","AB","AW","AE","PL","C","N","DM","GB","GW","HO","UC","V","BM","TE","DO","IT","TB","TW","AP","CA","FF","GM","ST","SZ","AN","BR","BT","CP","DT","EV","GN","GC","ON","OT","PB","PC","PW","RE","RO","RU","SO","US","WR","WT","TM","HA","KM","BL","WL","OB","OW","PM","VW","Repeating","processJSGF","gameTree","rootNode","setSGFProperties","lastNode","node","KifuNode","escapeCharacters","escapeSGFValue","reduce","prev","current","replace","RegExp","parent","output","propIdent","hasOwnProperty","getSGFProperty","map","innerSGF","clean","transformedSgf","fromSGF","getPath","depth","forks","unshift","removeChild","contains","some","child","insertBefore","newNode","referenceNode","replaceChild","newChild","oldChild","getProperty","setProperty","removeProperty","forEachProperty","propValue","setSGFProperty","propValues","propertyValueType","toSGF","cloneNode","appendToParent","JSON","parse","stringify","fromJS","kifuNode","gameNo","SGFParser","JAPANESE_RULES","repeating","allowRewrite","allowSuicide","komi","CHINESE_RULES","ING_RULES","NO_RULES","ALL","Japanese","GOE","NZ","AGA","Chinese","createGrid","PropIdent","capCount","black","white","turn","isOnPosition","get","set","EMPTY","clone","Position","slice","compare","diff","applyMove","prevColor","capturesAbove","captureIfNoLiberties","capturesRight","capturesBelow","capturesLeft","hasLiberties","capture","validatePosition","alreadyTested","TL","ML","MM","MR","BS","WS","HF","toTwoDimensionalArray","arr","rules","positionStack","play","nextPosition","tryToPlay","pushPosition","hasPositionRepeated","pass","isValid","isOnBoard","addStone","removeStone","setStone","getStone","popPosition","pop","beforeInitSZ","event","target","beforeInitRU","goRules","applyGameChangesHA","currentNode","SET_TURN","game","applyGameChangesMove","applyGameChangesPL","applyGameChangesSetup","loadKifu","plugins","basePropertyListeners.beforeInitSZ","basePropertyListeners.beforeInitRU","basePropertyListeners.applyGameChangesHA","basePropertyListeners.applyGameChangesMove","basePropertyListeners.applyGameChangesPL","basePropertyListeners.applyGameChangesSetup","executeRoot","newGame","rulesName","find","emitNodeLifeCycleEvent","Game","executeNode","executeNext","executePrevious","getPropertyHandler","propertyHandlers","getRootProperty","getNextNodes","next","previous","first","last","goTo","pathOrMoveNumber","j","getCurrentPath","previousFork","WHITE_MOVE","BLACK_MOVE","use","plugin","apply","playerDOMDefaultConfig","enableMouseWheel","enableKeys","fastReplay","components","Map","fastReplayEnabled","handleResize","handleMouseWheel","e","deltaY","preventDefault","handleKeydown","hasFocus","fastReplayTimeout","setTimeout","handleKeyup","clearTimeout","render","component","container","innerHTML","wrapper","createWrapper","create","destroy","firstChild","delete","tabIndex","activeElement","PlayerBase","SVG_NS","SVG_OBJECTS","SVG_GRID_MASK","SVG_SHADOWS","createSVGElements","group","createElementNS","startCircle","line","endTriangle","updateElement","setAttribute","updateSVGElements","markupGridMask","SVGFieldDrawHandler","circle","mask","SVGMarkupDrawHandler","generateId","prefix","addDef","createShadow","shadowFilterElement","id","filterElement","stoneGroup","glow1","glow2","SVGStoneDrawHandler","filterElement1","filter1","filter2","filterElement2","maxWidth","removeAttribute","textContent","getComputedTextLength","loadedPaths","fallbackElement","SVGElement","square","triangle","fromX","fromY","toX","toY","star","starPoint","letter","createCoordinates","userSelect","coordinatesTop","coordinatesBottom","coordinatesLeft","coordinatesRight","defaultSVGTheme","ModernStoneWhite","ModernStoneBlack","svgBoardDefaultConfig","contexts","display","verticalAlign","touchArea","borderTop","borderRight","borderLeft","borderBottom","svgElement","defsElement","drawObjects","gridElement","coordinatesElement","objectsElementMap","createObjectElements","elements","getObjectHandler","def","fieldWidth","fieldHeight","offsetHeight","BoardLabelObject","colorsMap","defaultSVGBoardComponentConfig","currentMoveBlackMark","Circle","currentMoveWhiteMark","variationDrawHandler","SVGLabel","highlightCurrentMove","showVariations","showCurrentVariations","viewportStack","applyNodeChanges","clearNodeChanges","applyMarkupProperty","applyLabelMarkupProperty","applyLineMarkupProperty","applyViewportProperty","clearViewportProperty","applyMoveProperty","addTemporaryBoardObject","removeTemporaryBoardObject","updateTemporaryBoardObject","createDOM","stoneBoardsObjects","temporaryBoardObjects","SVGBoard","point","handleBoardClick","boardMouseX","boardMouseY","handleBoardMouseMove","handleBoardMouseOut","player","updateStones","addVariationMarkup","moves","getVariations","move","SVGCustomLabelObject","fromCodePoint","handleVariationCursor","clearTemporaryBoardObjects","ind","findIndex","shouldShowCurrentVariations","removeVariationCursor","cursor","boardMarkup","BoardLineObject","currentViewport","minX","minY","maxX","maxY","previousViewport","isThereMarkup","SVGCustomFieldObject","o","b","shouldShowVariations","st","VARIATIONS_STYLE","samePoint","p1","p2","field","propIdents","commentBoxDefaultConfig","formatMoves","formatNicks","setComments","clearComments","title","commentsElement","comment","formatComment","call","querySelectorAll","link","coordinatesToPoint","formattedText","boardSize","toLowerCase","parseInt","gameInfoBoxDefaultConfig","gameInfoProperties","stretch","printInfo","infoTable","addInfo","row","dataset","label","valueElement","removeInfo","querySelector","defaultEditModeConfig","enabled","gameStateStack","handleChange","enable","disable","setEnabled","childNode","saveGameState","lastX","lastY","blackStone","whiteStone","addedStone","_boardMouseMoveEvent","_boardMouseOutEvent","_boardClickEvent","_nodeChange","restoreGameState","lastState","direction","defaultConfig","menuItems","update","buttonGroup","moveNumber","menuWrapper","menuButton","menu","createMenuItems","disabled","menuItem","menuItemElement","href","defaultChecked","classList","add","handleClick","checkable","remove","download","GAME_NAME","encodeURIComponent","body","click","displayCoordinates","boardComponent","editMode","visible","shouldRenderComponent","placeholder","createPlaceholder","parentElement","componentElement","minWidth","minHeight","maxHeight","orientation","createComment","colorChar","colorName","setName","setRank","setTeam","setCaps","playerElement","playerNameElement","playerRankElement","playerCapsElement","playerTeamElement","initialSet","comments","gameInfo","sgfFile","EditMode","svgBoardComponent","SVGBoardComponent","controlPanelConfig","ControlPanel","Container","ResponsiveComponent","PlayerTag","GameInfoBox","CommentsBox","fetch","response","PlayerDOM"],"mappings":"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","file":"static/js/17.1372de28.chunk.js","sourcesContent":["import SGFParser from './SGFParser';\r\n\r\n/**\r\n * Class for syntax errors in SGF string.\r\n * @ extends Error\r\n */\r\nexport class SGFSyntaxError extends Error {\r\n  // tslint:disable-next-line:variable-name\r\n  __proto__: Error;\r\n\r\n  constructor(message: string, parser?: SGFParser) {\r\n    super(message);\r\n    this.__proto__ = new.target.prototype;\r\n\r\n    // var tempError = Error.apply(this);\r\n    this.name = this.name = 'SGFSyntaxError';\r\n    this.message = message || 'There was an unspecified syntax error in the SGF';\r\n\r\n    if (parser) {\r\n      this.message += ` on line ${parser.lineNo}, char ${parser.charNo}:\\n`;\r\n      this.message += `\\t${parser.sgfString.split('\\n')[parser.lineNo - 1]}\\n`;\r\n      this.message += `\\t${Array(parser.charNo + 1).join(' ')}^`;\r\n    }\r\n  }\r\n}\r\n\r\n// a small ES5 hack because currently in ES6 you can't extend Errors\r\n// SGFSyntaxError.prototype = Object.create(Error.prototype);\r\n// SGFSyntaxError.prototype.constructor = SGFSyntaxError;\r\n\r\nexport default SGFSyntaxError;\r\n","import SGFSyntaxError from './SGFSyntaxError';\r\nimport { PropIdent, SGFProperties, SGFCollection, SGFGameTree, SGFNode } from './sgfTypes';\r\n\r\n/**\r\n * Contains methods for parsing sgf string.\r\n * @module SGFParser\r\n */\r\n\r\nconst CODE_A = 'A'.charCodeAt(0);\r\nconst CODE_Z = 'Z'.charCodeAt(0);\r\nconst CODE_WHITE_CHAR = ' '.charCodeAt(0);\r\n\r\nfunction isCharUCLetter(char: string) {\r\n  if (!char) {\r\n    return false;\r\n  }\r\n\r\n  const charCode = char.charCodeAt(0);\r\n  return charCode >= CODE_A && charCode <= CODE_Z;\r\n}\r\n\r\n/**\r\n * Class for parsing of sgf files. Can be used for parsing of SGF fragments as well.\r\n */\r\n\r\nexport default class SGFParser {\r\n  /** SGF string to be parsed */\r\n  sgfString: string;\r\n\r\n  /** Current character position */\r\n  position: number = 0;\r\n\r\n  /** Current line number */\r\n  lineNo: number = 1;\r\n\r\n  /** Current char number (on the line) */\r\n  charNo: number = 0;\r\n\r\n  /**\r\n   * Creates new instance of SGF parser with SGF loaded ready to be parsed.\r\n   * @param sgf string to parse.\r\n   */\r\n  constructor(sgf: string) {\r\n    this.sgfString = sgf;\r\n  }\r\n\r\n  /**\r\n   * Returns current significant character (ignoring whitespace characters).\r\n   * If there is end of string, return undefined.\r\n   */\r\n  protected currentChar(): string {\r\n    while (this.sgfString.charCodeAt(this.position) <= CODE_WHITE_CHAR) {\r\n      // While the character is a whitespace, increase position pointer and line and column numbers.\r\n      this.nextChar();\r\n    }\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Move pointer to next character and return it (including whitespace).\r\n   */\r\n  protected nextChar() {\r\n    if (this.sgfString[this.position] === '\\n') {\r\n      this.charNo = 0;\r\n      this.lineNo++;\r\n    } else {\r\n      this.charNo++;\r\n    }\r\n    this.position++;\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Reads current significant character and if it isn't equal with the argument, throws an error.\r\n   * Then move pointer to next character.\r\n   */\r\n  protected processChar(char: string) {\r\n    if (this.currentChar() !== char) {\r\n      throw new SGFSyntaxError(`Unexpected character ${this.currentChar()}. Character ${char} was expected.`, this);\r\n    }\r\n\r\n    return this.nextChar();\r\n  }\r\n\r\n  /**\r\n   * Parse SGF property value - `\"[\" CValueType \"]\"`.\r\n   * @param optional\r\n   */\r\n  parsePropertyValue(optional?: boolean): string {\r\n    if (optional && this.currentChar() !== '[') {\r\n      return;\r\n    }\r\n\r\n    let value = '';\r\n\r\n    // process \"[\" and read first char\r\n    let char = this.processChar('[');\r\n\r\n    while (char !== ']') {\r\n      if (!char) {\r\n        // char mustn't be undefined\r\n        throw new SGFSyntaxError('End of SGF inside of property', this);\r\n      } else if (char === '\\\\') {\r\n        // if there is character '\\' save next character\r\n        char = this.nextChar();\r\n\r\n        if (!char) {\r\n          // char have to exist of course\r\n          throw new SGFSyntaxError('End of SGF inside of property', this);\r\n        } else if (char === '\\n') {\r\n          // ignore new line, otherwise save\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // save the character\r\n      value += char;\r\n\r\n      // and move to next one\r\n      char = this.nextChar();\r\n    }\r\n\r\n    this.processChar(']');\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Reads the property identifiers (One or more UC letters) - `UcLetter { UcLetter }`.\r\n   */\r\n  parsePropertyIdent(): PropIdent {\r\n    let ident = '';\r\n\r\n    // Read current significant character\r\n    let char = this.currentChar();\r\n\r\n    if (!isCharUCLetter(char)) {\r\n      throw new SGFSyntaxError('Property identifier must consists from upper case letters.', this);\r\n    }\r\n\r\n    ident += char;\r\n\r\n    while (char = this.nextChar()) {\r\n      if (!isCharUCLetter(char)) {\r\n        break;\r\n      }\r\n\r\n      ident += char;\r\n    }\r\n\r\n    return ident as PropIdent;\r\n  }\r\n\r\n  /**\r\n   * Parses sequence of property values - `PropValue { PropValue }`.\r\n   */\r\n  parsePropertyValues() {\r\n    const values: string[] = [];\r\n    let value = this.parsePropertyValue();\r\n\r\n    if (value) {\r\n      values.push(value);\r\n    }\r\n\r\n    while (value = this.parsePropertyValue(true)) {\r\n      values.push(value);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF property - `PropIdent PropValue { PropValue }`.\r\n   */\r\n  parseProperty(): [PropIdent, string[]] {\r\n    if (!isCharUCLetter(this.currentChar())) {\r\n      return;\r\n    }\r\n\r\n    return [this.parsePropertyIdent(), this.parsePropertyValues()];\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF node - `\";\" { Property }`.\r\n   */\r\n  parseNode(): SGFNode {\r\n    this.processChar(';');\r\n\r\n    const properties: SGFProperties = {};\r\n    let property: [PropIdent, string[]];\r\n\r\n    while (property = this.parseProperty()) {\r\n      properties[property[0]] = property[1];\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF Sequence - `Node { Node }`.\r\n   */\r\n  parseSequence(): SGFNode[] {\r\n    const sequence: SGFNode[] = [];\r\n\r\n    sequence.push(this.parseNode());\r\n\r\n    while (this.currentChar() === ';') {\r\n      sequence.push(this.parseNode());\r\n    }\r\n\r\n    return sequence;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *GameTree* - `\"(\" Sequence { GameTree } \")\"`.\r\n   */\r\n  parseGameTree(): SGFGameTree {\r\n    this.processChar('(');\r\n\r\n    const sequence = this.parseSequence();\r\n    let children: SGFGameTree[] = [];\r\n\r\n    if (this.currentChar() === '(') {\r\n      children = this.parseCollection();\r\n    }\r\n\r\n    this.processChar(')');\r\n\r\n    return { sequence, children };\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *Collection* - `Collection = GameTree { GameTree }`. This is the main method for parsing SGF file.\r\n   */\r\n  parseCollection(): SGFCollection {\r\n    const gameTrees: SGFCollection = [];\r\n    gameTrees.push(this.parseGameTree());\r\n\r\n    while (this.currentChar() === '(') {\r\n      gameTrees.push(this.parseGameTree());\r\n    }\r\n\r\n    return gameTrees;\r\n  }\r\n}\r\n","/**\r\n * Enumeration representing stone color, can be used for representing board position.\r\n */\r\nexport enum Color {\r\n  BLACK = 1,\r\n  B = 1,\r\n  WHITE = -1,\r\n  W = -1,\r\n  EMPTY = 0,\r\n  E = 0,\r\n}\r\n\r\n/**\r\n * Simple 2 dimensional vector for referencing field on the board.\r\n */\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport type Vector = Point[];\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface Field extends Point {\r\n  c: Color;\r\n}\r\n\r\nexport interface Move extends Point {\r\n  c: Color.BLACK | Color.WHITE;\r\n}\r\n","/**\r\n * Represents generic board object specified by type, which can be painted on the board.\r\n * It contains z-index and opacity.\r\n */\r\nexport default class BoardObject {\r\n  type: string;\r\n  zIndex: number = 0;\r\n  opacity: number = 1;\r\n\r\n  constructor(type: string) {\r\n    this.type = type;\r\n  }\r\n}\r\n","import BoardObject from './BoardObject';\r\n\r\n/**\r\n * Represents board object specified by type, which can be painted on the specific field of the board.\r\n * It can be also transformed.\r\n */\r\nexport default class FieldObject extends BoardObject {\r\n  x: number;\r\n  y: number;\r\n  scaleX: number = 1;\r\n  scaleY: number = 1;\r\n  rotate: number = 0;\r\n\r\n  constructor(type: string, x = 0, y = 0) {\r\n    super(type);\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setPosition(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setScale(factor: number) {\r\n    this.scaleX = factor;\r\n    this.scaleY = factor;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport FieldObject from './FieldObject';\r\n\r\n/**\r\n * Board markup object is special type of field object, which can have 3 variations - for empty field\r\n * and for black and white stone.\r\n */\r\nexport default class BoardMarkupObject extends FieldObject {\r\n  variation: Color;\r\n\r\n  constructor(type: string, x = 0, y = 0, variation: Color = Color.E) {\r\n    super(type, x, y);\r\n    this.variation = variation;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport BoardMarkupObject from './BoardMarkupObject';\r\n\r\n/**\r\n * Board label object is special type of markup object, which renders text on the field.\r\n */\r\nexport default class BoardLabelObject extends BoardMarkupObject {\r\n  text: string;\r\n\r\n  constructor(text: string, x = 0, y = 0, variation?: Color) {\r\n    super('LB', x, y, variation);\r\n\r\n    this.text = text;\r\n  }\r\n}\r\n","import { Point } from '../types';\r\nimport BoardObject from './BoardObject';\r\n\r\n/**\r\n * Board line object is special type of object, which consist from start and end point.\r\n */\r\nexport default class BoardLineObject extends BoardObject {\r\n  start: Point;\r\n  end: Point;\r\n\r\n  constructor(type: string, start: Point, end: Point) {\r\n    super(type);\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n}\r\n","/**\r\n * Simple base class for event handling. It tries to follow Node.js EventEmitter class API,\r\n * but contains only basic methods.\r\n */\r\nexport default class EventEmitter {\r\n  // tslint:disable-next-line:variable-name\r\n  private _events: {[eventName: string]: Function[]} = {};\r\n\r\n  on(evName: string, callback: Function) {\r\n    this._events[evName] = this._events[evName] || [];\r\n    this._events[evName].push(callback);\r\n  }\r\n\r\n  off(evName: string, callback: Function) {\r\n    if (this._events[evName]) {\r\n      if (callback == null) {\r\n        this._events[evName] = [];\r\n      }\r\n      this._events[evName] = this._events[evName].filter(fn => fn !== callback);\r\n    }\r\n  }\r\n\r\n  emit(evName: string, ...args: any[]) {\r\n    if (this._events[evName]) {\r\n      this._events[evName].forEach(fn => fn(...args));\r\n    }\r\n  }\r\n}\r\n","export type PartialRecursive<T> = {\r\n  [P in keyof T]?: T[P] | PartialRecursive<T[P]>;\r\n};\r\n\r\n/**\r\n * Helper function for merging default config with provided config.\r\n *\r\n * @param defaults\r\n * @param config\r\n */\r\nexport default function makeConfig<T>(defaults: T, config: PartialRecursive<T> & { [key: string]: any }): T {\r\n  const mergedConfig: any = {};\r\n  const defaultKeys = Object.keys(defaults);\r\n  defaultKeys.forEach((key) => {\r\n    const val = (config as any)[key];\r\n    const defVal = (defaults as any)[key];\r\n\r\n    if (val != null && val.constructor === Object && !Array.isArray(val) && defVal != null) {\r\n      mergedConfig[key] = makeConfig(defVal, val);\r\n    } else if (val !== undefined) {\r\n      mergedConfig[key] = val;\r\n    } else {\r\n      mergedConfig[key] = defVal;\r\n    }\r\n  });\r\n\r\n  Object.keys(config).forEach((key) => {\r\n    if (defaultKeys.indexOf(key) === -1) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    }\r\n  });\r\n\r\n  return mergedConfig;\r\n}\r\n","export const defaultBoardBaseTheme = {\r\n  // basic\r\n  stoneSize: 0.47,\r\n  marginSize: 0.25,\r\n  font: 'calibri',\r\n  backgroundColor: '#CEB053',\r\n  backgroundImage: '',\r\n\r\n  // markup\r\n  markupBlackColor: 'rgba(255,255,255,0.9)',\r\n  markupWhiteColor: 'rgba(0,0,0,0.7)',\r\n  markupNoneColor: 'rgba(0,0,0,0.7)',\r\n  markupLineWidth: 0.05,\r\n\r\n  // shadows\r\n  shadowColor: 'rgba(62,32,32,0.5)',\r\n  shadowTransparentColor: 'rgba(62,32,32,0)',\r\n  shadowBlur: 0.25,\r\n  shadowOffsetX: 0.07,\r\n  shadowOffsetY: 0.13,\r\n\r\n  // grid\r\n  grid: {\r\n    linesWidth: 0.03,\r\n    linesColor: '#654525',\r\n    starColor: '#531',\r\n    starSize: 0.07,\r\n  },\r\n\r\n  // coordinates\r\n  coordinates: {\r\n    color: '#531',\r\n    bold: false,\r\n  },\r\n};\r\n\r\nexport const defaultBoardBaseConfig = {\r\n  size: 19,\r\n  width: 0,\r\n  height: 0,\r\n  starPoints: {\r\n    5: [{ x: 2, y: 2 }],\r\n    7: [{ x: 3, y: 3 }],\r\n    8: [{ x: 2, y: 2 }, { x: 5, y: 2 }, { x: 2, y: 5 }, { x: 5, y: 5 }],\r\n    9: [{ x: 2, y: 2 }, { x: 6, y: 2 }, { x: 4, y: 4 }, { x: 2, y: 6 }, { x: 6, y: 6 }],\r\n    10: [{ x: 2, y: 2 }, { x: 7, y: 2 }, { x: 2, y: 7 }, { x: 7, y: 7 }],\r\n    11: [{ x: 2, y: 2 }, { x: 8, y: 2 }, { x: 5, y: 5 }, { x: 2, y: 8 }, { x: 8, y: 8 }],\r\n    12: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 }],\r\n    13: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 6, y: 6 }, { x: 3, y: 9 }, { x: 9, y: 9 }],\r\n    14: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 }],\r\n    15: [{ x: 3, y: 3 }, { x: 11, y: 3 }, { x: 7, y: 7 }, { x: 3, y: 11 }, { x: 11, y: 11 }],\r\n    16: [{ x: 3, y: 3 }, { x: 12, y: 3 }, { x: 3, y: 12 }, { x: 12, y: 12 }],\r\n    17: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 13, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 },\r\n    { x: 13, y: 8 }, { x: 3, y: 13 }, { x: 8, y: 13 }, { x: 13, y: 13 }],\r\n    18: [{ x: 3, y: 3 }, { x: 14, y: 3 }, { x: 3, y: 14 }, { x: 14, y: 14 }],\r\n    19: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 15, y: 3 }, { x: 3, y: 9 }, { x: 9, y: 9 },\r\n    { x: 15, y: 9 }, { x: 3, y: 15 }, { x: 9, y: 15 }, { x: 15, y: 15 }],\r\n    20: [{ x: 3, y: 3 }, { x: 16, y: 3 }, { x: 3, y: 16 }, { x: 16, y: 16 }],\r\n    21: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 17, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 },\r\n    { x: 17, y: 10 }, { x: 3, y: 17 }, { x: 10, y: 17 }, { x: 17, y: 17 }],\r\n  },\r\n  viewport: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  coordinates: false,\r\n  coordinateLabelsX: 'ABCDEFGHJKLMNOPQRSTUVWXYZ',\r\n  coordinateLabelsY: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n  theme: defaultBoardBaseTheme,\r\n};\r\n","import EventEmitter from '../utils/EventEmitter';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Board, BoardBaseConfig, BoardViewport } from './types';\r\nimport { BoardObject } from '.';\r\nimport FieldObject from './FieldObject';\r\nimport { defaultBoardBaseConfig } from './defaultConfig';\r\n\r\n/**\r\n * Board class with basic functionality which can be used for creating custom boards.\r\n */\r\nexport default class BoardBase extends EventEmitter implements Board {\r\n  config: BoardBaseConfig;\r\n  element: HTMLElement;\r\n  objects: BoardObject[] = [];\r\n\r\n  constructor(element: HTMLElement, config: PartialRecursive<BoardBaseConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.element = element;\r\n    this.config = makeConfig(defaultBoardBaseConfig, config);\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    // subclass may do resize things here\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    // subclass should implement this\r\n  }\r\n\r\n  /**\r\n   * Add board object. Main function for adding graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.addObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!this.hasObject(boardObject)) {\r\n      this.objects.push(boardObject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to update board object. Can be called, when some params of boardObject changes.\r\n   * It is similar to redraw(), but only boardObject can be redrawn, so performance can/should be better.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  updateObject(boardObject: BoardObject | BoardObject[]) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Remove board object. Main function for removing graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.removeObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const objectPos = this.objects.indexOf(boardObject);\r\n\r\n    if (objectPos === -1) {\r\n      // object isn't on the board, ignore it\r\n      return;\r\n    }\r\n\r\n    this.objects.splice(objectPos, 1);\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on specified field.\r\n   *\r\n   * @param x\r\n   * @param y\r\n   */\r\n  removeObjectsAt(x: number, y: number) {\r\n    this.objects.forEach((obj) => {\r\n      if (obj instanceof FieldObject && obj.x === x && obj.y === y) {\r\n        this.removeObject(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on the board.\r\n   */\r\n  removeAllObjects() {\r\n    this.objects = [];\r\n  }\r\n\r\n  /**\r\n   * Returns true if object is already on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  hasObject(boardObject: BoardObject) {\r\n    return this.objects.indexOf(boardObject) >= 0;\r\n  }\r\n\r\n  /**\r\n   * Sets width of the board, height will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   */\r\n  setWidth(width: number) {\r\n    this.config.width = width;\r\n    this.config.height = 0;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets height of the board, width will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param height\r\n   */\r\n  setHeight(height: number) {\r\n    this.config.width = 0;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets exact dimensions of the board. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   * @param height\r\n   */\r\n  setDimensions(width: number, height: number) {\r\n    this.config.width = width;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n\t * Get currently visible section of the board.\r\n\t */\r\n\r\n  getViewport() {\r\n    return this.config.viewport;\r\n  }\r\n\r\n  /**\r\n\t * Set section of the board to be displayed.\r\n\t */\r\n  setViewport(viewport: BoardViewport) {\r\n    this.config.viewport = viewport;\r\n  }\r\n\r\n  /**\r\n   * Helper to get board size.\r\n   */\r\n  getSize() {\r\n    return this.config.size;\r\n  }\r\n\r\n  /**\r\n   * Helper to set board size.\r\n   */\r\n  setSize(size: number = 19) {\r\n    this.config.size = size;\r\n  }\r\n\r\n  /**\r\n   * Returns true, if coordinates around board are visible.\r\n   */\r\n  getCoordinates() {\r\n    return this.config.coordinates;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable coordinates around board.\r\n   */\r\n  setCoordinates(coordinates: boolean) {\r\n    this.config.coordinates = coordinates;\r\n  }\r\n}\r\n","/* global document, window */\r\nimport CanvasBoard from './CanvasBoard';\r\nimport { BoardObject, FieldObject } from '../BoardBase';\r\nimport { DrawFunction } from './types';\r\n\r\n/**\r\n * @class\r\n * Implements one layer of the HTML5 canvas\r\n */\r\n\r\nexport default class CanvasLayer {\r\n  element: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  pixelRatio: number;\r\n  board: CanvasBoard;\r\n\r\n  constructor(board: CanvasBoard) {\r\n    this.board = board;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.element = document.createElement('canvas');\r\n    this.element.style.position = 'absolute';\r\n    // this.element.style.zIndex = weight.toString(10);\r\n    this.element.style.width = '100%';\r\n    this.element.style.height = '100%';\r\n\r\n    this.context = this.element.getContext('2d');\r\n    this.context.scale(this.board.pixelRatio, this.board.pixelRatio);\r\n    this.context.save();\r\n\r\n    this.board.boardElement.appendChild(this.element);\r\n  }\r\n\r\n  resize(width: number, height: number) {\r\n    const linesShift = this.board.config.theme.linesShift;\r\n\r\n    this.element.width = width;\r\n    this.element.height = height;\r\n\r\n    this.context.transform(1, 0, 0, 1, linesShift, linesShift);\r\n  }\r\n\r\n  draw(drawFunction: DrawFunction, boardObject: BoardObject) {\r\n    try {\r\n      // create a \"sandbox\" for drawing function\r\n      this.context.save();\r\n\r\n      if (boardObject instanceof FieldObject) {\r\n        const leftOffset = this.board.getX(boardObject.x);\r\n        const topOffset = this.board.getY(boardObject.y);\r\n        const fieldSize = this.board.fieldSize;\r\n\r\n        this.context.transform(\r\n          fieldSize * boardObject.scaleX,\r\n          0, 0,\r\n          fieldSize * boardObject.scaleY,\r\n          leftOffset,\r\n          topOffset,\r\n        );\r\n        this.context.rotate(boardObject.rotate);\r\n        this.context.globalAlpha = boardObject.opacity;\r\n      } else {\r\n        const leftOffset = this.board.getX(0);\r\n        const topOffset = this.board.getY(0);\r\n        const fieldSize = this.board.fieldSize;\r\n\r\n        this.context.transform(\r\n          fieldSize,\r\n          0, 0,\r\n          fieldSize,\r\n          leftOffset,\r\n          topOffset,\r\n        );\r\n      }\r\n\r\n      const res = drawFunction(this.context, this.board.config, boardObject);\r\n\r\n      // restore context\r\n      this.context.restore();\r\n\r\n      if (res && res.then) {\r\n        res.then(() => {\r\n          this.board.redraw();\r\n        });\r\n      }\r\n    } catch (err) {\r\n      // If the board is too small some canvas painting function can throw an exception, but we don't\r\n      // want to break our app\r\n      // tslint:disable-next-line:no-console\r\n      console.error(`Object couldn't be rendered. Error: ${err.message}`, boardObject);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\r\n  }\r\n}\r\n","import CanvasLayer from './CanvasLayer';\r\n\r\n/**\r\n * @class\r\n * @extends WGo.CanvasBoard.CanvasLayer\r\n * Layer for shadows. It is slightly translated.\r\n */\r\n\r\nexport default class ShadowLayer extends CanvasLayer {\r\n  resize(width: number, height: number) {\r\n    super.resize(width, height);\r\n    this.context.transform(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      this.board.config.theme.shadowOffsetX * this.board.fieldSize,\r\n      this.board.config.theme.shadowOffsetY * this.board.fieldSize,\r\n    );\r\n  }\r\n}\r\n","import CanvasLayer from './CanvasLayer';\r\n\r\nexport default class GridLayer extends CanvasLayer {\r\n  init() {\r\n    super.init();\r\n    this.drawGrid();\r\n  }\r\n\r\n  clear() {\r\n    super.clear();\r\n    this.drawGrid();\r\n  }\r\n\r\n  drawGrid() {\r\n    // draw grid\r\n    let tmp;\r\n    const params = this.board.config.theme.grid;\r\n\r\n    this.context.beginPath();\r\n    this.context.lineWidth = params.linesWidth * this.board.fieldSize;\r\n    this.context.strokeStyle = params.linesColor;\r\n\r\n    const tx = Math.round(this.board.getX(0));\r\n    const ty = Math.round(this.board.getY(0));\r\n    const bw = Math.round((this.board.config.size - 1) * this.board.fieldSize);\r\n    const bh = Math.round((this.board.config.size - 1) * this.board.fieldSize);\r\n\r\n    this.context.strokeRect(tx, ty, bw, bh);\r\n\r\n    for (let i = 1; i < this.board.config.size - 1; i++) {\r\n      tmp = Math.round(this.board.getX(i));\r\n      this.context.moveTo(tmp, ty);\r\n      this.context.lineTo(tmp, ty + bh);\r\n\r\n      tmp = Math.round(this.board.getY(i));\r\n      this.context.moveTo(tx, tmp);\r\n      this.context.lineTo(tx + bw, tmp);\r\n    }\r\n\r\n    this.context.stroke();\r\n\r\n    // draw stars\r\n    this.context.fillStyle = params.starColor;\r\n\r\n    if (this.board.config.starPoints[this.board.config.size]) {\r\n      for (const key in this.board.config.starPoints[this.board.config.size]) {\r\n        this.context.beginPath();\r\n        this.context.arc(\r\n          this.board.getX(this.board.config.starPoints[this.board.config.size][key].x),\r\n          this.board.getY(this.board.config.starPoints[this.board.config.size][key].y),\r\n          params.starSize * this.board.fieldSize, 0, 2 * Math.PI, true,\r\n        );\r\n        this.context.fill();\r\n      }\r\n    }\r\n\r\n    if (this.board.config.coordinates) {\r\n      this.drawCoordinates();\r\n    }\r\n  }\r\n\r\n  drawCoordinates() {\r\n    let t;\r\n    const params = this.board.config.theme.coordinates;\r\n\r\n    this.context.fillStyle = params.color;\r\n    this.context.textBaseline = 'middle';\r\n    this.context.textAlign = 'center';\r\n    // tslint:disable-next-line:max-line-length\r\n    this.context.font = `${params.bold ? 'bold ' : ''}${this.board.fieldSize / 2}px ${this.board.config.theme.font || ''}`;\r\n\r\n    const xRight = this.board.getX(-0.75);\r\n    const xLeft = this.board.getX(this.board.config.size - 0.25);\r\n    const yTop = this.board.getY(-0.75);\r\n    const yBottom = this.board.getY(this.board.config.size - 0.25);\r\n\r\n    const coordinatesX = this.board.config.coordinateLabelsX;\r\n    const coordinatesY = this.board.config.coordinateLabelsY;\r\n\r\n    for (let i = 0; i < this.board.config.size; i++) {\r\n      t = this.board.getY(i);\r\n      this.context.fillText(coordinatesX[i] as string, xRight, t);\r\n      this.context.fillText(coordinatesX[i] as string, xLeft, t);\r\n\r\n      t = this.board.getX(i);\r\n      this.context.fillText(coordinatesY[i] as string, t, yTop);\r\n      this.context.fillText(coordinatesY[i] as string, t, yBottom);\r\n    }\r\n\r\n    this.context.fillStyle = 'black';\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport { BoardObject } from '../../boardBase';\r\n\r\nexport default abstract class DrawHandler<P extends object = {}> {\r\n  params: P;\r\n\r\n  constructor(params: P = {} as any) {\r\n    this.params = params;\r\n  }\r\n\r\n  stone?(context: CanvasRenderingContext2D, config: CanvasBoardConfig, boardObject: BoardObject): void;\r\n  shadow?(context: CanvasRenderingContext2D, config: CanvasBoardConfig, boardObject: BoardObject): void;\r\n  grid?(context: CanvasRenderingContext2D, config: CanvasBoardConfig, boardObject: BoardObject): void;\r\n}\r\n","import DrawHandler from './DrawHandler';\r\nimport { CanvasBoardConfig } from '../types';\r\n\r\n/**\r\n * Provides shadow for the stone.\r\n */\r\nexport default class Stone extends DrawHandler {\r\n  shadow(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    const blur = boardConfig.theme.shadowBlur;\r\n\r\n    const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n    const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n    const gradient = canvasCtx.createRadialGradient(0, 0, startRadius, 0, 0, stopRadius);\r\n    gradient.addColorStop(0, boardConfig.theme.shadowColor);\r\n    gradient.addColorStop(1, boardConfig.theme.shadowTransparentColor);\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = gradient;\r\n    canvasCtx.arc(0, 0, stopRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport Stone from './Stone';\r\n\r\nexport default class ShellStoneBlack extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = '#000';\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    let radGrad = canvasCtx.createRadialGradient(\r\n      0.4 * stoneRadius,\r\n      0.4 * stoneRadius,\r\n      0,\r\n      0.5 * stoneRadius,\r\n      0.5 * stoneRadius,\r\n      stoneRadius,\r\n    );\r\n    radGrad.addColorStop(0, 'rgba(32,32,32,1)');\r\n    radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(\r\n      0,\r\n      0,\r\n      stoneRadius,\r\n      0,\r\n      2 * Math.PI,\r\n      true,\r\n    );\r\n    canvasCtx.fill();\r\n\r\n    radGrad = canvasCtx.createRadialGradient(\r\n      -0.4 * stoneRadius,\r\n      -0.4 * stoneRadius,\r\n      0.05 * stoneRadius,\r\n      -0.5 * stoneRadius,\r\n      -0.5 * stoneRadius,\r\n      1.5 * stoneRadius,\r\n    );\r\n    radGrad.addColorStop(0, 'rgba(64,64,64,1)');\r\n    radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(\r\n      0,\r\n      0,\r\n      stoneRadius,\r\n      0,\r\n      2 * Math.PI,\r\n      true,\r\n    );\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport Stone from './Stone';\r\nimport { FieldObject } from '../../BoardBase';\r\n\r\n// shell stone helping functions\r\nconst shellSeed = Math.ceil(Math.random() * 9999999);\r\n\r\nexport default class ShellStoneWhite extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig, boardObject: FieldObject) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = '#aaa';\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    // do shell magic here\r\n    const type = shellSeed % (3 + boardObject.x * boardConfig.size + boardObject.y) % 3;\r\n    const z = boardConfig.size * boardConfig.size + boardObject.x * boardConfig.size + boardObject.y;\r\n    const angle = (2 / z) * (shellSeed % z);\r\n\r\n    if (type === 0) {\r\n      this.drawShell({\r\n        ctx: canvasCtx,\r\n        x: 0,\r\n        y: 0,\r\n        radius: stoneRadius,\r\n        angle,\r\n        lines: [0.10, 0.12, 0.11, 0.10, 0.09, 0.09, 0.09, 0.09],\r\n        factor: 0.25,\r\n        thickness: 1.75,\r\n      });\r\n    } else if (type === 1) {\r\n      this.drawShell({\r\n        ctx: canvasCtx,\r\n        x: 0,\r\n        y: 0,\r\n        radius: stoneRadius,\r\n        angle,\r\n        lines: [0.10, 0.09, 0.08, 0.07, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06],\r\n        factor: 0.2,\r\n        thickness: 1.5,\r\n      });\r\n    } else {\r\n      this.drawShell({\r\n        ctx: canvasCtx,\r\n        x: 0,\r\n        y: 0,\r\n        radius: stoneRadius,\r\n        angle,\r\n        lines: [0.12, 0.14, 0.13, 0.12, 0.12, 0.12],\r\n        factor: 0.3,\r\n        thickness: 2,\r\n      });\r\n    }\r\n\r\n    const radGrad = canvasCtx.createRadialGradient(\r\n      -2 * stoneRadius / 5,\r\n      -2 * stoneRadius / 5,\r\n      stoneRadius / 3,\r\n      -stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      5 * stoneRadius / 5,\r\n    );\r\n    radGrad.addColorStop(0, 'rgba(255,255,255,0.9)');\r\n    radGrad.addColorStop(1, 'rgba(255,255,255,0)');\r\n\r\n    // add radial gradient //\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n  }\r\n\r\n  drawShell(arg: any) {\r\n    let fromAngle = arg.angle;\r\n    let toAngle = arg.angle;\r\n\r\n    for (let i = 0; i < arg.lines.length; i++) {\r\n      fromAngle += arg.lines[i];\r\n      toAngle -= arg.lines[i];\r\n      this.drawShellLine(arg.ctx, arg.x, arg.y, arg.radius, fromAngle, toAngle, arg.factor, arg.thickness);\r\n    }\r\n  }\r\n\r\n  drawShellLine(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    r: number,\r\n    startAngle: number,\r\n    endAngle: number,\r\n    factor: number,\r\n    thickness: number,\r\n  ) {\r\n    ctx.strokeStyle = 'rgba(64,64,64,0.2)';\r\n\r\n    ctx.lineWidth = (r / 30) * thickness;\r\n    ctx.beginPath();\r\n\r\n    const radius = r * 0.9;\r\n\r\n    const x1 = x + radius * Math.cos(startAngle * Math.PI);\r\n    const y1 = y + radius * Math.sin(startAngle * Math.PI);\r\n    const x2 = x + radius * Math.cos(endAngle * Math.PI);\r\n    const y2 = y + radius * Math.sin(endAngle * Math.PI);\r\n\r\n    let m;\r\n    let angle;\r\n    let diffX;\r\n    let diffY;\r\n\r\n    if (x2 > x1) {\r\n      m = (y2 - y1) / (x2 - x1);\r\n      angle = Math.atan(m);\r\n    } else if (x2 === x1) {\r\n      angle = Math.PI / 2;\r\n    } else {\r\n      m = (y2 - y1) / (x2 - x1);\r\n      angle = Math.atan(m) - Math.PI;\r\n    }\r\n\r\n    const c = factor * radius;\r\n    diffX = Math.sin(angle) * c;\r\n    diffY = Math.cos(angle) * c;\r\n\r\n    const bx1 = x1 + diffX;\r\n    const by1 = y1 - diffY;\r\n\r\n    const bx2 = x2 + diffX;\r\n    const by2 = y2 - diffY;\r\n\r\n    ctx.moveTo(x1, y1);\r\n    ctx.bezierCurveTo(bx1, by1, bx2, by2, x2, y2);\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport Stone from './Stone';\r\n\r\nexport default class GlassStoneBlack extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    const radGrad = canvasCtx.createRadialGradient(\r\n      -2 * stoneRadius / 5,\r\n      -2 * stoneRadius / 5,\r\n      1,\r\n      -stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      4 * stoneRadius / 5,\r\n    );\r\n    radGrad.addColorStop(0, '#666');\r\n    radGrad.addColorStop(1, '#000');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import Stone from './Stone';\r\nimport { CanvasBoardConfig } from '../types';\r\n\r\nexport default class GlassStoneWhite extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    const radGrad = canvasCtx.createRadialGradient(\r\n      -2 * stoneRadius / 5,\r\n      -2 * stoneRadius / 5,\r\n      stoneRadius / 3,\r\n      -stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      5 * stoneRadius / 5,\r\n    );\r\n\r\n    radGrad.addColorStop(0, '#fff');\r\n    radGrad.addColorStop(1, '#aaa');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport Stone from './Stone';\r\n\r\nexport default class PaintedStoneBlack extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    const radGrad = canvasCtx.createRadialGradient(\r\n      -2 * stoneRadius / 5,\r\n      -2 * stoneRadius / 5,\r\n      1 * stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      4 * stoneRadius / 5,\r\n    );\r\n    radGrad.addColorStop(0, '#111');\r\n    radGrad.addColorStop(1, '#000');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n    canvasCtx.strokeStyle = '#ccc';\r\n    canvasCtx.arc(-stoneRadius / 8, -stoneRadius / 8, stoneRadius / 2, Math.PI, 1.5 * Math.PI);\r\n\r\n    canvasCtx.stroke();\r\n  }\r\n}\r\n","import Stone from './Stone';\r\nimport { CanvasBoardConfig } from '../types';\r\n\r\nexport default class PaintedStoneWhite extends Stone {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneRadius = boardConfig.theme.stoneSize;\r\n    const radGrad = canvasCtx.createRadialGradient(\r\n      -2 * stoneRadius / 5,\r\n      -2 * stoneRadius / 5,\r\n      2 * stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      -stoneRadius / 5,\r\n      4 * stoneRadius / 5,\r\n    );\r\n    radGrad.addColorStop(0, '#fff');\r\n    radGrad.addColorStop(1, '#ddd');\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.fillStyle = radGrad;\r\n    canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n    canvasCtx.strokeStyle = '#999';\r\n    canvasCtx.arc(stoneRadius / 8, stoneRadius / 8, stoneRadius / 2, 0, Math.PI / 2, false);\r\n\r\n    canvasCtx.stroke();\r\n  }\r\n}\r\n","// Black and white stone\r\nimport { CanvasBoardConfig } from '../types';\r\nimport DrawHandler from './DrawHandler';\r\n\r\nexport default class SimpleStone extends DrawHandler<{ color: string }> {\r\n  constructor (color: string) {\r\n    super({ color });\r\n  }\r\n\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    const stoneSize = boardConfig.theme.stoneSize;\r\n    const lw = boardConfig.theme.markupLineWidth;\r\n\r\n    canvasCtx.fillStyle = this.params.color;\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(0, 0, stoneSize - lw / 2, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    canvasCtx.lineWidth = lw;\r\n    canvasCtx.strokeStyle = 'black';\r\n    canvasCtx.stroke();\r\n  }\r\n}\r\n","/* global window */\r\nimport { CanvasBoardConfig } from '../types';\r\nimport { FieldObject } from '../../BoardBase';\r\nimport DrawHandler from './DrawHandler';\r\nimport Stone from './Stone';\r\n\r\n// Check if image has been loaded properly\r\n// see https://stereochro.me/ideas/detecting-broken-images-js\r\n/*function isOkay(img: any) {\r\n  if (typeof img === 'string') { return false; }\r\n  if (!img.complete) { return false; }\r\n  if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n}*/\r\n\r\nexport default class RealisticStone extends Stone {\r\n  paths: string[];\r\n  images: { [path: string]: HTMLImageElement };\r\n  fallback: DrawHandler;\r\n  randSeed: number;\r\n  redrawRequest: number;\r\n\r\n  constructor (paths: string[], fallback: DrawHandler) {\r\n    super();\r\n    this.fallback = fallback;\r\n    this.randSeed = Math.ceil(Math.random() * 9999999);\r\n    this.images = {};\r\n    this.paths = paths;\r\n  }\r\n\r\n  loadImage(path: string): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.onload = () => {\r\n        resolve(image);\r\n      };\r\n      image.onerror = () => {\r\n        reject();\r\n      };\r\n      image.src = path;\r\n    });\r\n  }\r\n\r\n  stone (canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig, boardObject: FieldObject) {\r\n    const count = this.paths.length;\r\n\r\n    if (count) {\r\n      const stoneRadius = boardConfig.theme.stoneSize;\r\n      const idx = this.randSeed % (count + boardObject.x * boardConfig.size + boardObject.y) % count;\r\n\r\n      if (this.images[this.paths[idx]]) {\r\n        canvasCtx.drawImage(this.images[this.paths[idx]], -stoneRadius, -stoneRadius, 2 * stoneRadius, 2 * stoneRadius);\r\n      } else {\r\n        this.fallback.stone(canvasCtx, boardConfig, boardObject);\r\n\r\n        const path = this.paths[idx];\r\n        return this.loadImage(path).then((image) => {\r\n          this.images[path] = image;\r\n        }).catch(() => {\r\n          this.paths = this.paths.filter(p => p !== path);\r\n        });\r\n      }\r\n    } else {\r\n      this.fallback.stone(canvasCtx, boardConfig, boardObject);\r\n    }\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport DrawHandler from './DrawHandler';\r\nimport { Color } from '../../types';\r\nimport { BoardMarkupObject } from '../../boardBase';\r\n\r\ninterface MarkupDrawHandlerParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n  fillColor?: string;\r\n}\r\n\r\nexport default abstract class MarkupDrawHandler<P = {}> extends DrawHandler<MarkupDrawHandlerParams & P> {\r\n  grid(\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    boardConfig: CanvasBoardConfig,\r\n    boardObject: BoardMarkupObject,\r\n  ) {\r\n    if (boardObject.variation === Color.E) {\r\n      canvasCtx.clearRect(\r\n        -boardConfig.theme.stoneSize,\r\n        -boardConfig.theme.stoneSize,\r\n        boardConfig.theme.stoneSize * 2,\r\n        boardConfig.theme.stoneSize * 2,\r\n      );\r\n    }\r\n  }\r\n\r\n  getColor(\r\n    boardConfig: CanvasBoardConfig,\r\n    boardObject: BoardMarkupObject,\r\n  ) {\r\n    if (this.params.color) {\r\n      return this.params.color;\r\n    }\r\n\r\n    if (boardObject.variation === Color.B) {\r\n      return boardConfig.theme.markupBlackColor;\r\n    }\r\n\r\n    if (boardObject.variation === Color.W) {\r\n      return boardConfig.theme.markupWhiteColor;\r\n    }\r\n\r\n    return boardConfig.theme.markupNoneColor;\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport { BoardMarkupObject } from '../../BoardBase';\r\nimport MarkupDrawHandler from './MarkupDrawHandler';\r\n\r\nexport default abstract class ShapeMarkup extends MarkupDrawHandler {\r\n  stone(\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    boardConfig: CanvasBoardConfig,\r\n    boardObject: BoardMarkupObject,\r\n  ) {\r\n    canvasCtx.strokeStyle = this.getColor(boardConfig, boardObject);\r\n    canvasCtx.lineWidth = this.params.lineWidth || boardConfig.theme.markupLineWidth;\r\n    canvasCtx.shadowBlur = 10;\r\n    canvasCtx.shadowColor = canvasCtx.strokeStyle;\r\n\r\n    canvasCtx.beginPath();\r\n    this.drawShape(canvasCtx);\r\n    canvasCtx.stroke();\r\n\r\n    if (this.params.fillColor) {\r\n      canvasCtx.fillStyle = this.params.fillColor;\r\n      canvasCtx.fill();\r\n    }\r\n  }\r\n\r\n  abstract drawShape(canvasCtx: CanvasRenderingContext2D): void;\r\n}\r\n","import ShapeMarkup from './ShapeMarkup';\r\n\r\nexport default class Circle extends ShapeMarkup {\r\n  drawShape(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.arc(0, 0, 0.25, 0, 2 * Math.PI, true);\r\n  }\r\n}\r\n","import ShapeMarkup from './ShapeMarkup';\r\n\r\nexport default class Square extends ShapeMarkup {\r\n  drawShape(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.rect(-0.25, -0.25, 0.5, 0.5);\r\n  }\r\n}\r\n","import ShapeMarkup from './ShapeMarkup';\r\n\r\nexport default class Triangle extends ShapeMarkup {\r\n  drawShape(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.moveTo(0, -0.25);\r\n    canvasCtx.lineTo(-0.25, 0.166666);\r\n    canvasCtx.lineTo(0.25, 0.166666);\r\n    canvasCtx.closePath();\r\n  }\r\n}\r\n","import { CanvasBoardConfig } from '../types';\r\nimport { BoardLabelObject } from '../../BoardBase';\r\nimport MarkupDrawHandler from './MarkupDrawHandler';\r\n\r\ninterface LabelParams {\r\n  font?: string;\r\n}\r\n\r\nexport default class Label extends MarkupDrawHandler<LabelParams> {\r\n  stone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig, boardObject: BoardLabelObject) {\r\n    const font = this.params.font || boardConfig.theme.font || '';\r\n\r\n    canvasCtx.fillStyle = this.getColor(boardConfig, boardObject);\r\n    canvasCtx.shadowBlur = 10;\r\n    canvasCtx.shadowColor = canvasCtx.fillStyle;\r\n\r\n    let fontSize = 0.5;\r\n\r\n    if (boardObject.text.length === 1) {\r\n      fontSize = 0.75;\r\n    } else if (boardObject.text.length === 2) {\r\n      fontSize = 0.6;\r\n    }\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.textBaseline = 'middle';\r\n    canvasCtx.textAlign = 'center';\r\n    canvasCtx.font = `${fontSize}px ${font}`;\r\n    canvasCtx.fillText(boardObject.text, 0, 0.02 + (fontSize - 0.5) * 0.08, 1);\r\n  }\r\n}\r\n","import DrawHandler from './DrawHandler';\r\n\r\n/**\r\n * TODO: rename this\r\n */\r\nexport default class Dot extends DrawHandler<{ color: string }> {\r\n  stone(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.fillStyle = this.params.color;\r\n    canvasCtx.shadowBlur = 10;\r\n    canvasCtx.shadowColor = canvasCtx.fillStyle;\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(0, 0, 0.15, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import ShapeMarkup from './ShapeMarkup';\r\n\r\nexport default class XMark extends ShapeMarkup {\r\n  drawShape(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.moveTo(-0.20, -0.20);\r\n    canvasCtx.lineTo(0.20, 0.20);\r\n    canvasCtx.moveTo(0.20, -0.20);\r\n    canvasCtx.lineTo(-0.20, 0.20);\r\n  }\r\n}\r\n","import DrawHandler from './DrawHandler';\r\nimport { CanvasBoardConfig } from '../types';\r\nimport { BoardLineObject } from '../../boardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Line extends DrawHandler<LineParams> {\r\n  stone(\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    boardConfig: CanvasBoardConfig,\r\n    boardObject: BoardLineObject,\r\n  ) {\r\n    canvasCtx.strokeStyle = this.params.color ? this.params.color : boardConfig.theme.markupNoneColor;\r\n    canvasCtx.lineWidth = this.params.lineWidth || boardConfig.theme.markupLineWidth;\r\n    canvasCtx.shadowBlur = 10;\r\n    canvasCtx.shadowColor = canvasCtx.strokeStyle;\r\n\r\n    canvasCtx.beginPath();\r\n    canvasCtx.moveTo(boardObject.start.x, boardObject.start.y);\r\n    canvasCtx.lineTo(boardObject.end.x, boardObject.end.y);\r\n    canvasCtx.stroke();\r\n  }\r\n}\r\n","import DrawHandler from './DrawHandler';\r\nimport { CanvasBoardConfig } from '../types';\r\nimport { BoardLineObject } from '../../BoardBase';\r\n\r\ninterface ArrowParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Arrow extends DrawHandler<ArrowParams> {\r\n  stone(\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    boardConfig: CanvasBoardConfig,\r\n    boardObject: BoardLineObject,\r\n  ) {\r\n    canvasCtx.strokeStyle = this.params.color ? this.params.color : boardConfig.theme.markupNoneColor;\r\n    canvasCtx.fillStyle = canvasCtx.strokeStyle;\r\n    canvasCtx.lineWidth = this.params.lineWidth || boardConfig.theme.markupLineWidth;\r\n    canvasCtx.shadowBlur = 10;\r\n    canvasCtx.shadowColor = canvasCtx.strokeStyle;\r\n\r\n    const x1 = boardObject.start.x;\r\n    const y1 = boardObject.start.y;\r\n    const x2 = boardObject.end.x;\r\n    const y2 = boardObject.end.y;\r\n\r\n    // length of the main line\r\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\r\n    // line parametric functions\r\n    const getLineX = (t: number) => x1 + t * (x2 - x1);\r\n    const getLineY = (t: number) => y1 + t * (y2 - y1);\r\n\r\n    // triangle base line position on the main line\r\n    const triangleLen = 1 / length / 2.5;\r\n    const tx = getLineX(1 - triangleLen);\r\n    const ty = getLineY(1 - triangleLen);\r\n\r\n    // triangle base line parametric functions\r\n    const getBaseLineX = (t: number) => tx + t * (y2 - y1);\r\n    const getBaseLineY = (t: number) => ty + t * (x1 - x2);\r\n\r\n    // initial circle length\r\n    const circleLen = 0.1;\r\n\r\n    // draw initial circle\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(x1, y1, circleLen, 0, 2 * Math.PI, true);\r\n    canvasCtx.fill();\r\n\r\n    // draw line\r\n    canvasCtx.beginPath();\r\n    canvasCtx.moveTo(getLineX(1 / length * circleLen), getLineY(1 / length * circleLen));\r\n    canvasCtx.lineTo(tx, ty);\r\n    canvasCtx.stroke();\r\n\r\n    // draw triangle at the end to make arrow\r\n    canvasCtx.beginPath();\r\n    canvasCtx.moveTo(getBaseLineX(- triangleLen / 1.75), getBaseLineY(- triangleLen / 1.75));\r\n    canvasCtx.lineTo(getBaseLineX(triangleLen / 1.75), getBaseLineY(triangleLen / 1.75));\r\n    canvasCtx.lineTo(x2, y2);\r\n    canvasCtx.closePath();\r\n    canvasCtx.fill();\r\n  }\r\n}\r\n","import DrawHandler from './DrawHandler';\r\n\r\nexport default class Dim extends DrawHandler<{ color: string }> {\r\n  stone(canvasCtx: CanvasRenderingContext2D) {\r\n    canvasCtx.fillStyle = this.params.color;\r\n    canvasCtx.fillRect(-0.5, -0.5, 1, 1);\r\n  }\r\n}\r\n","import { CanvasBoardTheme } from '../types';\r\nimport * as drawHandlers from '../drawHandlers';\r\nimport { defaultBoardBaseTheme } from '../../BoardBase/defaultConfig';\r\n\r\nconst baseTheme: CanvasBoardTheme = {\r\n  ...defaultBoardBaseTheme,\r\n  snapToGrid: false,\r\n  linesShift: -0.5,\r\n\r\n  drawHandlers: {\r\n    B: new drawHandlers.SimpleStone('#222'),\r\n    W: new drawHandlers.SimpleStone('#eee'),\r\n    CR: new drawHandlers.Circle(),\r\n    SQ: new drawHandlers.Square(),\r\n    LB: new drawHandlers.Label(),\r\n    TR: new drawHandlers.Triangle(),\r\n    MA: new drawHandlers.XMark({ lineWidth: 0.075 }),\r\n    SL: new drawHandlers.Dot({ color: 'rgba(32, 32, 192, 0.75)' }),\r\n    LN: new drawHandlers.Line(),\r\n    AR: new drawHandlers.Arrow(),\r\n    DD: new drawHandlers.Dim({ color: 'rgba(0, 0, 0, 0.5)' }),\r\n  },\r\n};\r\n\r\nexport default baseTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst realisticTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: 'images/wood1.jpg',\r\n  stoneSize: 0.48,\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: new drawHandlers.RealisticStone([\r\n      'images/stones/black00_128.png',\r\n      'images/stones/black01_128.png',\r\n      'images/stones/black02_128.png',\r\n      'images/stones/black03_128.png',\r\n    ], new drawHandlers.GlassStoneBlack()),\r\n    W: new drawHandlers.RealisticStone([\r\n      'images/stones/white00_128.png',\r\n      'images/stones/white01_128.png',\r\n      'images/stones/white02_128.png',\r\n      'images/stones/white03_128.png',\r\n      'images/stones/white04_128.png',\r\n      'images/stones/white05_128.png',\r\n      'images/stones/white06_128.png',\r\n      'images/stones/white07_128.png',\r\n      'images/stones/white08_128.png',\r\n      'images/stones/white09_128.png',\r\n      'images/stones/white10_128.png',\r\n    ], new drawHandlers.GlassStoneWhite()),\r\n  },\r\n};\r\n\r\nexport default realisticTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst modernTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: '',\r\n\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: new drawHandlers.ShellStoneBlack(),\r\n    W: new drawHandlers.ShellStoneWhite(),\r\n  },\r\n};\r\n\r\nexport default modernTheme;\r\n","/**\r\n * Contains implementation of go board.\r\n * @module CanvasBoard\r\n */\r\n\r\nimport ShadowLayer from './ShadowLayer';\r\nimport CanvasLayer from './CanvasLayer';\r\nimport { CanvasBoardConfig } from './types';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Point } from '../types';\r\nimport { BoardObject, BoardBase, BoardViewport } from '../BoardBase';\r\nimport GridLayer from './GridLayer';\r\nimport { baseTheme } from './themes';\r\nimport { defaultBoardBaseConfig } from '../BoardBase/defaultConfig';\r\n\r\nconst canvasBoardDefaultConfig: CanvasBoardConfig = {\r\n  ...defaultBoardBaseConfig,\r\n  theme: baseTheme,\r\n};\r\n\r\nconst zIndexSorter = (obj1: BoardObject, obj2: BoardObject) => obj1.zIndex - obj2.zIndex;\r\n\r\nexport default class CanvasBoard extends BoardBase {\r\n  config: CanvasBoardConfig;\r\n  element: HTMLElement;\r\n  wrapperElement: HTMLElement;\r\n  boardElement: HTMLElement;\r\n  pixelRatio: number;\r\n  objects: BoardObject[] = [];\r\n  layers: {\r\n    grid: CanvasLayer;\r\n    shadow: CanvasLayer;\r\n    stone: CanvasLayer;\r\n    [key: string]: CanvasLayer;\r\n  };\r\n\r\n  // following props are computed in resize() method for performance\r\n  width: number;\r\n  height: number;\r\n  leftOffset: number;\r\n  topOffset: number;\r\n  fieldSize: number;\r\n  resizeCallback: (this: Window, ev: UIEvent) => any;\r\n  redrawScheduled: boolean;\r\n\r\n  /**\r\n\t * CanvasBoard class constructor - it creates a canvas board.\r\n\t */\r\n  constructor(elem: HTMLElement, config: PartialRecursive<CanvasBoardConfig> = {}) {\r\n    super(elem, makeConfig(canvasBoardDefaultConfig, config));\r\n\r\n    // init board HTML\r\n    this.wrapperElement = document.createElement('div');\r\n    this.wrapperElement.className = 'wgo-board';\r\n    this.wrapperElement.style.position = 'relative';\r\n    this.element.appendChild(this.wrapperElement);\r\n\r\n    this.boardElement = document.createElement('div');\r\n    this.boardElement.style.position = 'absolute';\r\n    this.boardElement.style.left = '0';\r\n    this.boardElement.style.top = '0';\r\n    this.boardElement.style.right = '0';\r\n    this.boardElement.style.bottom = '0';\r\n    this.boardElement.style.margin = 'auto';\r\n    this.wrapperElement.appendChild(this.boardElement);\r\n\r\n    this.layers = {\r\n      grid: new GridLayer(this),\r\n      shadow: new ShadowLayer(this),\r\n      stone: new CanvasLayer(this),\r\n    };\r\n\r\n    // set the pixel ratio for HDPI (e.g. Retina) screens\r\n    this.pixelRatio = window.devicePixelRatio || 1;\r\n\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    const { marginSize } = this.config.theme;\r\n    const countX = this.config.size - this.config.viewport.left - this.config.viewport.right;\r\n    const countY = this.config.size - this.config.viewport.top - this.config.viewport.bottom;\r\n    const topOffset = marginSize + (this.config.coordinates && !this.config.viewport.top ? 0.5 : 0);\r\n    const rightOffset = marginSize + (this.config.coordinates && !this.config.viewport.right ? 0.5 : 0);\r\n    const bottomOffset = marginSize + (this.config.coordinates && !this.config.viewport.bottom ? 0.5 : 0);\r\n    const leftOffset = marginSize + (this.config.coordinates && !this.config.viewport.left ? 0.5 : 0);\r\n\r\n    if (this.config.width && this.config.height) {\r\n      // exact dimensions\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = Math.min(\r\n        this.width / (countX + leftOffset + rightOffset),\r\n        this.height / (countY + topOffset + bottomOffset),\r\n      );\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.width) {\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + leftOffset + rightOffset);\r\n      this.height = this.fieldSize * (countY + topOffset + bottomOffset);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.height) {\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = this.height / (countY + topOffset + bottomOffset);\r\n      this.width = this.fieldSize * (countX + leftOffset + rightOffset);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else {\r\n      this.wrapperElement.style.width = 'auto';\r\n      this.width = this.wrapperElement.offsetWidth * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + leftOffset + rightOffset);\r\n      this.height = this.fieldSize * (countY + topOffset + bottomOffset);\r\n\r\n      if (!this.resizeCallback) {\r\n        this.resizeCallback = () => {\r\n          this.resize();\r\n        };\r\n        window.addEventListener('resize', this.resizeCallback);\r\n      }\r\n    }\r\n\r\n    if (this.config.theme.snapToGrid) {\r\n      this.fieldSize = Math.floor(this.fieldSize);\r\n    }\r\n\r\n    this.leftOffset = this.fieldSize * (leftOffset + 0.5 - this.config.viewport.left);\r\n    this.topOffset = this.fieldSize * (topOffset + 0.5 - this.config.viewport.top);\r\n\r\n    this.wrapperElement.style.width = `${(this.width / this.pixelRatio)}px`;\r\n    this.wrapperElement.style.height = `${(this.height / this.pixelRatio)}px`;\r\n\r\n    const boardWidth = (countX + leftOffset + rightOffset) * this.fieldSize;\r\n    const boardHeight = (countY + topOffset + bottomOffset) * this.fieldSize;\r\n\r\n    this.boardElement.style.width = `${(boardWidth / this.pixelRatio)}px`;\r\n    this.boardElement.style.height = `${(boardHeight / this.pixelRatio)}px`;\r\n\r\n    Object.keys(this.layers).forEach((layer) => {\r\n      this.layers[layer].resize(boardWidth, boardHeight);\r\n    });\r\n\r\n    this.redraw();\r\n  }\r\n\r\n  /**\r\n\t * Get absolute X coordinate\r\n\t *\r\n\t * @param {number} x relative coordinate\r\n\t */\r\n\r\n  getX(x: number) {\r\n    return this.leftOffset + x * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n\t * Get absolute Y coordinate\r\n\t *\r\n\t * @param {number} y relative coordinate\r\n\t */\r\n\r\n  getY(y: number) {\r\n    return this.topOffset + y * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    if (!this.redrawScheduled) {\r\n      this.redrawScheduled = true;\r\n\r\n      window.requestAnimationFrame(() => {\r\n        this.redrawScheduled = false;\r\n\r\n        // set correct background\r\n        this.boardElement.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n        if (this.config.theme.backgroundImage) {\r\n          this.boardElement.style.backgroundImage = `url(\"${this.config.theme.backgroundImage}\")`;\r\n        }\r\n\r\n        // sort objects by zIndex\r\n        this.objects.sort(zIndexSorter);\r\n\r\n        // redraw all layers\r\n        Object.keys(this.layers).forEach((layer) => {\r\n          this.layers[layer].clear();\r\n\r\n          this.objects.forEach((object) => {\r\n            const handler = typeof object.type === 'string' ? this.config.theme.drawHandlers[object.type] : object.type;\r\n            if ((handler as any)[layer]) {\r\n              this.layers[layer].draw((handler as any)[layer].bind(handler), object);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    if (!Array.isArray(boardObject)) {\r\n      if (typeof boardObject.type === 'string') {\r\n        if (!this.config.theme.drawHandlers[boardObject.type]) {\r\n          // tslint:disable-next-line:max-line-length\r\n          throw new TypeError(`Board object type \"${boardObject.type}\" doesn't exist in \\`config.theme.drawHandlers\\`.`);\r\n        }\r\n      } else {\r\n        throw new TypeError('Invalid board object type. Custom canvas board objects not yet supported.');\r\n      }\r\n    }\r\n\r\n    super.addObject(boardObject);\r\n    this.redraw();\r\n  }\r\n\r\n  updateObject(boardObject: BoardObject | BoardObject[]) {\r\n    // just redraw everything\r\n    this.redraw();\r\n  }\r\n\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    super.removeObject(boardObject);\r\n    this.redraw();\r\n  }\r\n\r\n  removeAllObjects() {\r\n    super.removeAllObjects();\r\n    this.redraw();\r\n  }\r\n\r\n  on(type: string, callback: (event: UIEvent, point: Point) => void) {\r\n    super.on(type, callback);\r\n    this.registerBoardListener(type);\r\n  }\r\n\r\n  registerBoardListener(type: string) {\r\n    this.boardElement.addEventListener(type, (evt) => {\r\n      if ((evt as any).layerX != null) {\r\n        const pos = this.getRelativeCoordinates((evt as any).layerX, (evt as any).layerY);\r\n        this.emit(type, evt, pos);\r\n      } else {\r\n        this.emit(type, evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRelativeCoordinates(absoluteX: number, absoluteY: number) {\r\n    // new hopefully better translation of coordinates\r\n\r\n    const x = Math.round((absoluteX * this.pixelRatio - this.leftOffset) / this.fieldSize);\r\n    const y = Math.round((absoluteY * this.pixelRatio - this.topOffset) / this.fieldSize);\r\n\r\n    if (x < 0 || x >= this.config.size || y < 0 || y >= this.config.size) {\r\n      return null;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n\r\n  setSize(size: number) {\r\n    super.setSize(size);\r\n    this.resize();\r\n  }\r\n\r\n  setViewport(viewport: BoardViewport) {\r\n    super.setViewport(viewport);\r\n    this.resize();\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    super.setCoordinates(coordinates);\r\n    this.resize();\r\n  }\r\n}\r\n","/**\r\n * From SGF specification, there are these types of property values:\r\n *\r\n * CValueType = (ValueType | *Compose*)\r\n * ValueType  = (*None* | *Number* | *Real* | *Double* | *Color* | *SimpleText* | *Text* | *Point*  | *Move* | *Stone*)\r\n *\r\n * WGo's kifu node (KNode object) implements similar types with few exceptions:\r\n *\r\n * - Types `Number`, `Real` and `Double` are implemented by javascript's `number`.\r\n * - Types `SimpleText` and `Text` are considered as the same.\r\n * - Types `Point`, `Move` and `Stone` are all the same, implemented as simple object with `x` and `y` coordinates.\r\n * - Type `None` is implemented as `true`\r\n *\r\n * Each `Compose` type, which is used in SGF, has its own type.\r\n *\r\n * - `Point ':' Point` (used in AR property) has special type `Line` - object with two sets of coordinates.\r\n * - `Point ':' Simpletext` (used in LB property) has special type `Label` - object with coordinates and text property\r\n * - `Simpletext \":\" Simpletext` (used in AP property) - not implemented\r\n * - `Number \":\" SimpleText` (used in FG property) - not implemented\r\n *\r\n * Moreover each property value has these settings:\r\n *\r\n * - *Single value* / *Array* (more values)\r\n * - *Not empty* / *Empty* (value or array can be empty)\r\n *\r\n * {@link http://www.red-bean.com/sgf/sgf4.html}\r\n */\r\n\r\nimport { Color, Point, Label, Vector } from '../types';\r\n\r\ninterface PropertyValueTransformer<T = any> {\r\n  read(str: string): T;\r\n  write(value: T): string;\r\n}\r\n\r\nexport const NONE = {\r\n  read: (str: string) => true,\r\n  write: (value: boolean) => '',\r\n};\r\n\r\nexport const NUMBER = {\r\n  read: (str: string) => parseFloat(str),\r\n  write: (value: number) => value.toString(10),\r\n};\r\n\r\nexport const TEXT = {\r\n  read: (str: string) => str,\r\n  write: (value: string) => value,\r\n};\r\n\r\nexport const COLOR = {\r\n  read: (str: string) => (str === 'w' || str === 'W' ? Color.WHITE : Color.BLACK),\r\n  write: (value: Color) => (value === Color.WHITE ? 'W' : 'B'),\r\n};\r\n\r\nexport const POINT = {\r\n  read: (str: string): Point => str ? {\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n  } : null,\r\n  write: (value?: Point) => value ? String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97) : '',\r\n};\r\n\r\nexport const LABEL = {\r\n  read: (str: string): Label => ({\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n    text: str.substr(3),\r\n  }),\r\n  write: (value: Label) => (\r\n    `${String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97)}:${value.text}`\r\n  ),\r\n};\r\n\r\nexport const VECTOR = {\r\n  read: (str: string): Vector => str ? [\r\n    {\r\n      x: str.charCodeAt(0) - 97,\r\n      y: str.charCodeAt(1) - 97,\r\n    },\r\n    {\r\n      x: str.charCodeAt(3) - 97,\r\n      y: str.charCodeAt(4) - 97,\r\n    },\r\n  ] : null,\r\n  write: (value?: Vector) => (\r\n    // tslint:disable-next-line:max-line-length\r\n    value ? `${String.fromCharCode(value[0].x + 97) + String.fromCharCode(value[0].y + 97)}:${String.fromCharCode(value[1].x + 97) + String.fromCharCode(value[1].y + 97)}` : ''\r\n  ),\r\n};\r\n\r\n/// Property definitions --------------------------------------------------------------------------\r\n\r\ninterface PropertyValueDefinition<T> {\r\n  transformer: PropertyValueTransformer<T>;\r\n  multiple: boolean;\r\n  notEmpty: boolean;\r\n}\r\n\r\nconst propertyValueTypes: {[propIdent: string]: PropertyValueDefinition<any>} = {\r\n  _default: {\r\n    transformer: TEXT,\r\n    multiple: false,\r\n    notEmpty: true,\r\n  },\r\n};\r\n\r\n/// Move properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.B = propertyValueTypes.W = {\r\n  transformer: POINT,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.KO = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.MN = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Setup properties ------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AB = propertyValueTypes.AW = propertyValueTypes.AE = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.PL = {\r\n  transformer: COLOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Node annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.C = propertyValueTypes.N = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.DM = propertyValueTypes.GB = propertyValueTypes.GW = propertyValueTypes.HO = propertyValueTypes.UC = propertyValueTypes.V = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Move annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.BM = propertyValueTypes.TE = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DO = propertyValueTypes.IT = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Markup properties -----------------------------------------------------------------------------\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.CR = propertyValueTypes.MA = propertyValueTypes.SL = propertyValueTypes.SQ = propertyValueTypes.TR = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.LB = {\r\n  transformer: LABEL,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.AR = propertyValueTypes.LN = {\r\n  transformer: VECTOR,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DD = propertyValueTypes.TB = propertyValueTypes.TW = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Root properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AP = propertyValueTypes.CA = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// note: rectangular board is not implemented (in SZ property)\r\npropertyValueTypes.FF = propertyValueTypes.GM = propertyValueTypes.ST = propertyValueTypes.SZ = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Game info properties --------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AN = propertyValueTypes.BR = propertyValueTypes.BT =\r\npropertyValueTypes.CP = propertyValueTypes.DT = propertyValueTypes.EV =\r\npropertyValueTypes.GN = propertyValueTypes.GC = propertyValueTypes.GN =\r\npropertyValueTypes.ON = propertyValueTypes.OT = propertyValueTypes.PB =\r\npropertyValueTypes.PC = propertyValueTypes.PW = propertyValueTypes.RE =\r\npropertyValueTypes.RO = propertyValueTypes.RU = propertyValueTypes.SO =\r\npropertyValueTypes.US = propertyValueTypes.WR = propertyValueTypes.WT = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.TM = propertyValueTypes.HA = propertyValueTypes.KM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Timing properties -----------------------------------------------------------------------------\r\n\r\npropertyValueTypes.BL = propertyValueTypes.WL = propertyValueTypes.OB = propertyValueTypes.OW = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Miscellaneous properties ----------------------------------------------------------------------\r\n\r\npropertyValueTypes.PM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// VW property must be specified as compressed list (ab:cd) and only one value is allowed\r\n// empty value [] will reset the viewport. Other options are not supported.\r\npropertyValueTypes.VW = {\r\n  transformer: VECTOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\nexport default propertyValueTypes;\r\n","import SGFParser, { SGFSyntaxError } from '../SGFParser';\r\nimport propertyValueTypes from './propertyValueTypes';\r\nimport { SGFGameTree, SGFProperties } from '../SGFParser/sgfTypes';\r\n\r\nconst processJSGF = function (gameTree: SGFGameTree, rootNode: KifuNode) {\r\n  rootNode.setSGFProperties(gameTree.sequence[0] || {});\r\n\r\n  let lastNode = rootNode;\r\n\r\n  for (let i = 1; i < gameTree.sequence.length; i++) {\r\n    const node = new KifuNode();\r\n    node.setSGFProperties(gameTree.sequence[i]);\r\n    lastNode.appendChild(node);\r\n    lastNode = node;\r\n  }\r\n\r\n  for (let i = 0; i < gameTree.children.length; i++) {\r\n    lastNode.appendChild(processJSGF(gameTree.children[i], new KifuNode()));\r\n  }\r\n\r\n  return rootNode;\r\n};\r\n\r\n// Characters, which has to be escaped when transforming to SGF\r\nconst escapeCharacters = ['\\\\\\\\', '\\\\]'];\r\n\r\nconst escapeSGFValue = function (value: string) {\r\n  return escapeCharacters.reduce((prev, current) => prev.replace(new RegExp(current, 'g'), current), value);\r\n};\r\n\r\n/**\r\n * Contains path to certain node in game tree.\r\n */\r\nexport interface Path {\r\n  /** Depth of node (for root node it is 0) */\r\n  depth: number;\r\n  /** Array of children array indexes of all predecessors which have siblings. */\r\n  forks: number[];\r\n}\r\n\r\n/**\r\n * Class representing one kifu node.\r\n */\r\nexport default class KifuNode {\r\n  parent: KifuNode | null;\r\n  children: KifuNode[];\r\n  properties: {[key: string]: any};\r\n\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.properties = {};\r\n  }\r\n\r\n  get root() {\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent != null) {\r\n      node = node.parent;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  set innerSGF(sgf: string) {\r\n    // clean up\r\n    this.clean();\r\n\r\n    let transformedSgf = sgf;\r\n\r\n    // create regular SGF from sgf-like string\r\n    if (transformedSgf[0] !== '(') {\r\n      if (transformedSgf[0] !== ';') {\r\n        transformedSgf = `;${transformedSgf}`;\r\n      }\r\n      transformedSgf = `(${transformedSgf})`;\r\n    }\r\n\r\n    KifuNode.fromSGF(transformedSgf, 0, this);\r\n  }\r\n\r\n  /**\r\n   * Kifu node representation as sgf-like string - will contain `;`, all properties and all children.\r\n   */\r\n  get innerSGF(): string {\r\n    let output = ';';\r\n\r\n    for (const propIdent in this.properties) {\r\n      if (this.properties.hasOwnProperty(propIdent)) {\r\n        output += `${propIdent}[${this.getSGFProperty(propIdent).map(escapeSGFValue).join('][')}]`;\r\n      }\r\n    }\r\n\r\n    if (this.children.length === 1) {\r\n      return `${output}${this.children[0].innerSGF}`;\r\n    }\r\n    if (this.children.length > 1) {\r\n      return this.children.reduce((prev, current) => `${prev}(${current.innerSGF})`, output);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent) {\r\n      path.depth++;\r\n      if (node.parent.children.length > 1) {\r\n        path.forks.unshift(node.parent.children.indexOf(node));\r\n      }\r\n      node = node.parent;\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /// GENERAL TREE NODE MANIPULATION METHODS (subset of DOM API's Node)\r\n\r\n  /**\r\n   * Insert a KNode as the last child node of this node.\r\n   *\r\n   * @throws  {Error} when argument is invalid.\r\n   * @param   {KifuNode} node to append.\r\n   * @returns {number} position(index) of appended node.\r\n   */\r\n\r\n  appendChild(node: KifuNode): number {\r\n    if (node == null || !(node instanceof KifuNode) || node === this) {\r\n      throw new Error('Invalid argument passed to `appendChild` method, KNode was expected.');\r\n    }\r\n\r\n    if (node.parent) {\r\n      node.parent.removeChild(node);\r\n    }\r\n\r\n    node.parent = this;\r\n\r\n    return this.children.push(node) - 1;\r\n  }\r\n\r\n  /**\r\n   * Returns a Boolean value indicating whether a node is a descendant of a given node or not.\r\n   *\r\n   * @param   {KifuNode}   node to be tested\r\n   * @returns {boolean} true, if this node contains given node.\r\n   */\r\n\r\n  contains(node: KifuNode): boolean {\r\n    if (this.children.indexOf(node) >= 0) {\r\n      return true;\r\n    }\r\n\r\n    return this.children.some(child => child.contains(node));\r\n  }\r\n\r\n  /**\r\n   * Inserts the first KNode given in a parameter immediately before the second, child of this KNode.\r\n   *\r\n   * @throws  {Error}   when argument is invalid.\r\n   * @param   {KifuNode}   newNode       node to be inserted\r\n   * @param   {(KifuNode)} referenceNode reference node, if omitted, new node will be inserted at the end.\r\n   * @returns {KifuNode}   this node\r\n   */\r\n\r\n  insertBefore(newNode: KifuNode, referenceNode?: KifuNode): KifuNode {\r\n    if (newNode == null || !(newNode instanceof KifuNode) || newNode === this) {\r\n      throw new Error('Invalid argument passed to `insertBefore` method, KNode was expected.');\r\n    }\r\n    if (referenceNode == null) {\r\n      this.appendChild(newNode);\r\n      return this;\r\n    }\r\n\r\n    if (newNode.parent) {\r\n      newNode.parent.removeChild(newNode);\r\n    }\r\n\r\n    newNode.parent = this;\r\n\r\n    this.children.splice(this.children.indexOf(referenceNode), 0, newNode);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a child node from the current element, which must be a child of the current node.\r\n   *\r\n   * @param   {KifuNode} child node to be removed\r\n   * @returns {KifuNode}  this node\r\n   */\r\n\r\n  removeChild(child: KifuNode): KifuNode {\r\n    this.children.splice(this.children.indexOf(child), 1);\r\n\r\n    child.parent = null;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Replaces one child Node of the current one with the second one given in parameter.\r\n   *\r\n   * @throws  {Error} when argument is invalid\r\n   * @param   {KifuNode} newChild node to be inserted\r\n   * @param   {KifuNode} oldChild node to be replaced\r\n   * @returns {KifuNode} this node\r\n   */\r\n\r\n  replaceChild(newChild: KifuNode, oldChild: KifuNode): KifuNode {\r\n    if (newChild == null || !(newChild instanceof KifuNode) || newChild === this) {\r\n      throw new Error('Invalid argument passed to `replaceChild` method, KNode was expected.');\r\n    }\r\n\r\n    this.insertBefore(newChild, oldChild);\r\n    this.removeChild(oldChild);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove all properties and children. Parent will remain.\r\n   */\r\n  clean() {\r\n    for (let i = this.children.length - 1; i >= 0; i--) {\r\n      this.removeChild(this.children[i]);\r\n    }\r\n    this.properties = {};\r\n  }\r\n\r\n  /// BASIC PROPERTY GETTER and SETTER\r\n\r\n  /**\r\n   * Gets property by SGF property identificator. Returns property value (type depends on property type)\r\n   *\r\n   * @param   {string}   propIdent - SGF property idetificator\r\n   * @returns {any}    property value or values or undefined, if property is missing.\r\n   */\r\n\r\n  getProperty(propIdent: string): any {\r\n    return this.properties[propIdent];\r\n  }\r\n\r\n  /**\r\n   * Sets property by SGF property identificator.\r\n   *\r\n   * @param   {string}  propIdent - SGF property idetificator\r\n   * @param   {any}     value - property value or values\r\n   */\r\n\r\n  setProperty(propIdent: string, value?: any) {\r\n    if (value === undefined) {\r\n      delete this.properties[propIdent];\r\n    } else {\r\n      this.properties[propIdent] = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Alias for `setProperty` without second parameter.\r\n   * @param propIdent\r\n   */\r\n  removeProperty(propIdent: string) {\r\n    this.setProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Iterates through all properties.\r\n   */\r\n  forEachProperty(callback: (propIdent: string, value: any) => void) {\r\n    Object.keys(this.properties).forEach((propIdent: string) => callback(propIdent, this.properties[propIdent]));\r\n  }\r\n\r\n  /// SGF RAW METHODS\r\n\r\n  /**\r\n   * Gets one SGF property value as string (with brackets `[` and `]`).\r\n   *\r\n   * @param   {string} propIdent SGF property identificator.\r\n   * @returns {string[]} Array of SGF property values or null if there is not such property.\r\n   */\r\n\r\n  getSGFProperty(propIdent: string): string[] {\r\n    if (this.properties[propIdent] !== undefined) {\r\n      const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n      if (propertyValueType.multiple) {\r\n        return this.properties[propIdent].map(\r\n          (propValue: any) => propertyValueType.transformer.write(propValue),\r\n        );\r\n      }\r\n\r\n      return [propertyValueType.transformer.write(this.properties[propIdent])];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets one SGF property.\r\n   *\r\n   * @param   {string}   propIdent SGF property identificator\r\n   * @param   {string[]} propValues SGF property values\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperty(propIdent: string, propValues?: string[]): KifuNode {\r\n    const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n    if (propValues === undefined) {\r\n      delete this.properties[propIdent];\r\n      return this;\r\n    }\r\n\r\n    if (propertyValueType.multiple) {\r\n      this.properties[propIdent] = propValues.map(val => propertyValueType.transformer.read(val));\r\n    } else {\r\n      this.properties[propIdent] = propertyValueType.transformer.read(propValues[0]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets multiple SGF properties.\r\n   *\r\n   * @param   {Object}   properties - map with signature propIdent -> propValues.\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperties(properties: SGFProperties): KifuNode {\r\n    for (const ident in properties) {\r\n      if (properties.hasOwnProperty(ident)) {\r\n        this.setSGFProperty(ident, properties[ident as keyof SGFProperties]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms KNode object to standard SGF string.\r\n   */\r\n  toSGF() {\r\n    return `(${this.innerSGF})`;\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the node. If node isn't root, its predecessors won't be cloned, and the node becomes root.\r\n   */\r\n  cloneNode(appendToParent?: boolean) {\r\n    const node = new KifuNode();\r\n    const properties = JSON.parse(JSON.stringify(this.properties));\r\n    node.properties = properties;\r\n\r\n    this.children.forEach((child) => {\r\n      node.appendChild(child.cloneNode());\r\n    });\r\n\r\n    if (appendToParent && this.parent) {\r\n      this.parent.appendChild(node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF transformed to JavaScript object.\r\n   *\r\n   * @param gameTree\r\n   */\r\n  static fromJS(gameTree: SGFGameTree, kifuNode = new KifuNode()) {\r\n    return processJSGF(gameTree, kifuNode);\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF string.\r\n   *\r\n   * @param sgf\r\n   * @param gameNo\r\n   */\r\n  static fromSGF(sgf: string, gameNo: number = 0, kifuNode = new KifuNode()) {\r\n    const parser = new SGFParser(sgf);\r\n    return KifuNode.fromJS(parser.parseCollection()[gameNo], kifuNode);\r\n  }\r\n}\r\n","/**\r\n * WGo's game engine offers to set 3 rules:\r\n *\r\n * - *checkRepeat* - one of `repeat.KO`, `repeat.ALL`, `repeat.NONE` - defines if or when a move can be repeated.\r\n * - *allowRewrite* - if set true a move can rewrite existing move (for uncommon applications)\r\n * - *allowSuicide* - if set true a suicide will be allowed (and stone will be immediately captured)\r\n *\r\n * In this module there are some common preset rule sets (Japanese, Chinese etc...).\r\n * Extend object `gameRules` if you wish to add some rule set. Names of the rules should correspond with\r\n * SGF `RU` property.\r\n */\r\n\r\nexport enum Repeating {\r\n  KO = 'KO',\r\n  ALL = 'ALL',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface GoRules {\r\n  repeating: Repeating;\r\n  allowRewrite: boolean;\r\n  allowSuicide: boolean;\r\n  komi: number;\r\n}\r\n\r\nexport const JAPANESE_RULES: GoRules = {\r\n  repeating: Repeating.KO,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 6.5,\r\n};\r\n\r\nexport const CHINESE_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const ING_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: true,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const NO_RULES: GoRules = {\r\n  repeating: Repeating.ALL,\r\n  allowRewrite: true,\r\n  allowSuicide: true,\r\n  komi: 0,\r\n};\r\n\r\nexport default {\r\n  Japanese: JAPANESE_RULES,\r\n  GOE: ING_RULES,\r\n  NZ: ING_RULES,\r\n  AGA: CHINESE_RULES,\r\n  Chinese: CHINESE_RULES,\r\n};\r\n","/**\r\n * Contains implementation of go position class.\r\n * @module Position\r\n */\r\n\r\nimport { Color, Field } from '../types';\r\n\r\n// creates 2-dim array\r\nfunction createGrid<T>(size: number) {\r\n  const grid: T[][] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    grid.push([]);\r\n  }\r\n  return grid;\r\n}\r\n\r\n/**\r\n * Position class represents a state of the go game in one moment in time. It is composed from a grid containing black\r\n * and white stones, capture counts, and actual turn. It is designed to be mutable.\r\n */\r\nexport default class Position {\r\n  /**\r\n\t * Size of the board.\r\n\t * @constant\r\n\t */\r\n\r\n  size: number;\r\n\r\n  /**\r\n   * One dimensional array containing stones of the position.\r\n   */\r\n  grid: Color[] = [];\r\n\r\n  /**\r\n   * Contains numbers of stones that both players captured.\r\n   *\r\n   * @property {number} black - Count of white stones captured by **black**.\r\n   * @property {number} white - Count of black stones captured by **white**.\r\n   */\r\n\r\n  capCount = {\r\n    black: 0,\r\n    white: 0,\r\n  };\r\n\r\n  /**\r\n   * Who plays next move.\r\n   */\r\n\r\n  turn: Color.BLACK | Color.WHITE = Color.BLACK;\r\n\r\n  /**\r\n   * Creates instance of position object.\r\n   *\r\n   * @alias WGo.Position\r\n   * @class\r\n   *\r\n   * @param {number} [size = 19] - Size of the board.\r\n   */\r\n  constructor(size: number = 19) {\r\n    this.size = size;\r\n\r\n    // init grid\r\n    this.clear();\r\n  }\r\n\r\n  isOnPosition(x: number, y: number) {\r\n    return x >= 0 && y >= 0 && x < this.size && y < this.size;\r\n  }\r\n\r\n  /**\r\n   * Returns stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @return {Color} Color\r\n   */\r\n  get(x: number, y: number): Color {\r\n    if (!this.isOnPosition(x, y)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.grid[x * this.size + y];\r\n  }\r\n\r\n  /**\r\n   * Sets stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {Color} c - Color\r\n   */\r\n  set(x: number, y: number, c: Color) {\r\n    if (!this.isOnPosition(x, y)) {\r\n      throw new TypeError('Attempt to set field outside of position.');\r\n    }\r\n\r\n    this.grid[x * this.size + y] = c;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the whole position (every value is set to EMPTY).\r\n   */\r\n  clear() {\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      this.grid[i] = Color.EMPTY;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones the whole position.\r\n   *\r\n   * @return {WGo.Position} Copy of the position.\r\n   * @todo Clone turn as well.\r\n   */\r\n\r\n  clone(): Position {\r\n    const clone = new Position(this.size);\r\n    clone.grid = this.grid.slice(0);\r\n    clone.capCount.black = this.capCount.black;\r\n    clone.capCount.white = this.capCount.white;\r\n    clone.turn = this.turn;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Compares this position with another position and return object with changes\r\n   *\r\n   * @param {WGo.Position} position - Position to compare to.\r\n   * @return {Field[]} Array of different fields\r\n   */\r\n\r\n  compare(position: Position): Field[] {\r\n    if (position.size !== this.size) {\r\n      throw new TypeError('Positions of different sizes cannot be compared.');\r\n    }\r\n\r\n    const diff: Field[] = [];\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      if (this.grid[i] !== position.grid[i]) {\r\n        diff.push({\r\n          x: Math.floor(i / this.size),\r\n          y: i % this.size,\r\n          c: position.grid[i],\r\n        });\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Sets stone on given coordinates and capture adjacent stones without liberties if there are any.\r\n   * If move is invalid, false is returned.\r\n   */\r\n  applyMove(x: number, y: number, c: Color = this.turn, allowSuicide = false, allowRewrite = false) {\r\n    // check if move is on empty field of the board\r\n    if (!(allowRewrite || this.get(x, y) === Color.EMPTY)) {\r\n      return false;\r\n    }\r\n\r\n    // clone position and add a stone\r\n    const prevColor = this.get(x, y);\r\n    this.set(x, y, c);\r\n\r\n    // check capturing of all surrounding stones\r\n    const capturesAbove = this.get(x, y - 1) === -c && this.captureIfNoLiberties(x, y - 1);\r\n    const capturesRight = this.get(x + 1, y) === -c && this.captureIfNoLiberties(x + 1, y);\r\n    const capturesBelow = this.get(x, y + 1) === -c && this.captureIfNoLiberties(x, y + 1);\r\n    const capturesLeft = this.get(x - 1, y) === -c && this.captureIfNoLiberties(x - 1, y);\r\n    const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n    // check suicide\r\n    if (!hasCaptured) {\r\n      if (!this.hasLiberties(x, y)) {\r\n        if (allowSuicide) {\r\n          this.capture(x, y, c);\r\n        } else {\r\n          // revert position\r\n          this.set(x, y, prevColor);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.turn = -c;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n   * that should be captured, they will be removed. Returns a new Position object.\r\n   * This position isn't modified.\r\n   */\r\n\r\n  validatePosition() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        this.captureIfNoLiberties(x - 1, y);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if stone or group on the given coordinates has at least one liberty.\r\n   */\r\n  hasLiberties(x: number, y: number, alreadyTested = createGrid(this.size), c = this.get(x, y)): boolean {\r\n    // out of the board there aren't liberties\r\n    if (!this.isOnPosition(x, y)) {\r\n      return false;\r\n    }\r\n\r\n    // however empty field means liberty\r\n    if (this.get(x, y) === Color.EMPTY) {\r\n      return true;\r\n    }\r\n\r\n    // already tested field or stone of enemy isn't a liberty.\r\n    if (alreadyTested[x][y] || this.get(x, y) === -c) {\r\n      return false;\r\n    }\r\n\r\n    // set this field as tested\r\n    alreadyTested[x][y] = true;\r\n\r\n    // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n    return (\r\n      this.hasLiberties(x, y - 1, alreadyTested, c) ||\r\n      this.hasLiberties(x, y + 1, alreadyTested, c) ||\r\n      this.hasLiberties(x - 1, y, alreadyTested, c) ||\r\n      this.hasLiberties(x + 1, y, alreadyTested, c)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if specified stone/group has zero liberties and if so it captures/removes stones from the position.\r\n   */\r\n  protected captureIfNoLiberties(x: number, y: number) {\r\n    // if it has zero liberties capture it\r\n    if (!this.hasLiberties(x, y)) {\r\n      // capture stones from game\r\n      this.capture(x, y);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n   */\r\n  capture(x: number, y: number, c: Color = this.get(x, y)) {\r\n    if (this.isOnPosition(x, y) && c !== Color.EMPTY && this.get(x, y) === c) {\r\n      this.set(x, y, Color.EMPTY);\r\n\r\n      if (c === Color.BLACK) {\r\n        this.capCount.white = this.capCount.white + 1;\r\n      } else {\r\n        this.capCount.black = this.capCount.black + 1;\r\n      }\r\n\r\n      this.capture(x, y - 1, c);\r\n      this.capture(x, y + 1, c);\r\n      this.capture(x - 1, y, c);\r\n      this.capture(x + 1, y, c);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For debug purposes.\r\n   */\r\n  toString() {\r\n    const TL = '┌';\r\n    const TM = '┬';\r\n    const TR = '┐';\r\n    const ML = '├';\r\n    const MM = '┼';\r\n    const MR = '┤';\r\n    const BL = '└';\r\n    const BM = '┴';\r\n    const BR = '┘';\r\n    const BS = '●';\r\n    const WS = '○';\r\n    const HF = '─'; // horizontal fill\r\n\r\n    let output = '   ';\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      output += i < 9 ? `${i} ` : i;\r\n    }\r\n\r\n    output += '\\n';\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        const color = this.grid[x * this.size + y];\r\n\r\n        if (x === 0) {\r\n          output += `${(y < 10 ? ` ${y}` : y)} `;\r\n        }\r\n\r\n        if (color !== Color.EMPTY) {\r\n          output += color === Color.BLACK ? BS : WS;\r\n        } else {\r\n          let char;\r\n\r\n          if (y === 0) {\r\n            // top line\r\n            if (x === 0) {\r\n              char = TL;\r\n            } else if (x < this.size - 1) {\r\n              char = TM;\r\n            } else {\r\n              char = TR;\r\n            }\r\n          } else if (y < this.size - 1) {\r\n            // middle line\r\n            if (x === 0) {\r\n              char = ML;\r\n            } else if (x < this.size - 1) {\r\n              char = MM;\r\n            } else {\r\n              char = MR;\r\n            }\r\n          } else {\r\n            // bottom line\r\n            if (x === 0) {\r\n              char = BL;\r\n            } else if (x < this.size - 1) {\r\n              char = BM;\r\n            } else {\r\n              char = BR;\r\n            }\r\n          }\r\n\r\n          output += char;\r\n        }\r\n\r\n        if (x === this.size - 1) {\r\n          if (y !== this.size - 1) {\r\n            output += '\\n';\r\n          }\r\n        } else {\r\n          output += HF;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns position grid as two dimensional array.\r\n   */\r\n  toTwoDimensionalArray() {\r\n    const arr: Color[][] = [];\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      arr[x] = [];\r\n      for (let y = 0; y < this.size; y++) {\r\n        arr[x][y] = this.grid[x * this.size + y];\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n\r\n// import { Color, Field, Move } from '../types';\r\n\r\n// /**\r\n//  * Position of the board (grid) is represented as 2 dimensional array of colors.\r\n//  */\r\n// export type Position = Color[][];\r\n\r\n// /**\r\n//  * Creates empty position (filled with Color.EMPTY) of specified size.\r\n//  * @param size\r\n//  */\r\n// export function createPosition(size: number) {\r\n//   const position: Color[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     const row: Color[] = [];\r\n//     for (let j = 0; j < size; j++) {\r\n//       row.push(Color.EMPTY);\r\n//     }\r\n//     position.push(row);\r\n//   }\r\n//   return position;\r\n// }\r\n\r\n// /**\r\n//  * Deep clones a position.\r\n//  * @param position\r\n//  */\r\n// export function clonePosition(position: Position) {\r\n//   return position.map(row => row.slice(0));\r\n// }\r\n\r\n// /**\r\n//  * Compares position `pos1` with position `pos2` and returns all differences on `pos2`.\r\n//  * @param pos1\r\n//  * @param pos2\r\n//  */\r\n// export function comparePositions(pos1: Position, pos2: Position): Field[] {\r\n//   if (pos1.length !== pos2.length) {\r\n//     throw new TypeError('Positions of different sizes cannot be compared.');\r\n//   }\r\n\r\n//   const diff: Field[] = [];\r\n\r\n//   for (let x = 0; x < pos1.length; x++) {\r\n//     for (let y = 0; y < pos2.length; y++) {\r\n//       if (pos1[x][y] !== pos2[x][y]) {\r\n//         diff.push({ x, y, c: pos2[x][y] });\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return diff;\r\n// }\r\n\r\n// function isOnBoard(position: Position, x: number, y: number) {\r\n//   return x >= 0 && x < position.length && y >= 0 && y < position.length;\r\n// }\r\n\r\n// /**\r\n//  * Creates new position with specified move (with rules applied - position won't contain captured stones).\r\n//  * If move is invalid, null is returned.\r\n//  */\r\n// export function applyMove(position: Position, x: number, y: number, c: Color.B | Color.W, allowSuicide = false) {\r\n//   // check if move is on empty field of the board\r\n//   if (!isOnBoard(position, x, y) || position[x][y] !== Color.EMPTY) {\r\n//     return null;\r\n//   }\r\n\r\n//   // clone position and add a stone\r\n//   const newPosition = clonePosition(position);\r\n//   newPosition[x][y] = c;\r\n\r\n//   // check capturing of all surrounding stones\r\n//   const capturesAbove = captureIfNoLiberties(newPosition, x, y - 1, -c);\r\n//   const capturesRight = captureIfNoLiberties(newPosition, x + 1, y, -c);\r\n//   const capturesBelow = captureIfNoLiberties(newPosition, x, y + 1, -c);\r\n//   const capturesLeft = captureIfNoLiberties(newPosition, x - 1, y, -c);\r\n//   const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n//   // check suicide\r\n//   if (!hasCaptured) {\r\n//     if (!hasLiberties(newPosition, x, y)) {\r\n//       if (allowSuicide) {\r\n//         capture(newPosition, x, y, c);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n//  * that should be captured, they will be removed. Returns a new Position object.\r\n//  */\r\n\r\n// export function getValidatedPosition(position: Position) {\r\n//   const newPosition = clonePosition(position);\r\n\r\n//   for (let x = 0; x < position.length; x++) {\r\n//     for (let y = 0; y < position.length; y++) {\r\n//       captureIfNoLiberties(newPosition, x, y);\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Capture stone or group of stones if they are zero liberties. Mutates the given position.\r\n//  *\r\n//  * @param position\r\n//  * @param x\r\n//  * @param y\r\n//  * @param c\r\n//  */\r\n// function captureIfNoLiberties(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   let hasCaptured = false;\r\n\r\n//   // is there a stone possible to capture?\r\n//   if (isOnBoard(position, x, y) && c !== Color.EMPTY && position[x][y] === c) {\r\n//     // if it has zero liberties capture it\r\n//     if (!hasLiberties(position, x, y)) {\r\n//       // capture stones from game\r\n//       capture(position, x, y, c);\r\n//       hasCaptured = true;\r\n//     }\r\n//   }\r\n\r\n//   return hasCaptured;\r\n// }\r\n\r\n// function createTestGrid(size: number) {\r\n//   const grid: boolean[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     grid.push([]);\r\n//   }\r\n//   return grid;\r\n// }\r\n\r\n// /**\r\n//  * Returns true if stone or group on the given position has at least one liberty.\r\n//  */\r\n// function hasLiberties(\r\n//   position: Position,\r\n//   x: number,\r\n//   y: number,\r\n//   alreadyTested = createTestGrid(position.length),\r\n//   c = position[x][y],\r\n// ): boolean {\r\n//   // out of the board there aren't liberties\r\n//   if (!isOnBoard(position, x, y)) {\r\n//     return false;\r\n//   }\r\n\r\n//   // however empty field means liberty\r\n//   if (position[x][y] === Color.EMPTY) {\r\n//     return true;\r\n//   }\r\n\r\n//   // already tested field or stone of enemy isn't a liberty.\r\n//   if (alreadyTested[x][y] || position[x][y] === -c) {\r\n//     return false;\r\n//   }\r\n\r\n//   // set this field as tested\r\n//   alreadyTested[x][y] = true;\r\n\r\n//   // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n//   return (\r\n//     hasLiberties(position, x, y - 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x, y + 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x - 1, y, alreadyTested, c) ||\r\n//     hasLiberties(position, x + 1, y, alreadyTested, c)\r\n//   );\r\n// }\r\n\r\n// /**\r\n//  * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n//  * Mutates the given position.\r\n//  */\r\n// function capture(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   if (isOnBoard(position, x, y) && position[x][y] !== Color.EMPTY && position[x][y] === c) {\r\n//     position[x][y] = Color.EMPTY;\r\n\r\n//     capture(position, x, y - 1, c);\r\n//     capture(position, x, y + 1, c);\r\n//     capture(position, x - 1, y, c);\r\n//     capture(position, x + 1, y, c);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * For debug purposes.\r\n//  */\r\n// export function stringifyPosition(position: Position) {\r\n//   const TL = '┌';\r\n//   const TM = '┬';\r\n//   const TR = '┐';\r\n//   const ML = '├';\r\n//   const MM = '┼';\r\n//   const MR = '┤';\r\n//   const BL = '└';\r\n//   const BM = '┴';\r\n//   const BR = '┘';\r\n//   const BS = '●';\r\n//   const WS = '○';\r\n//   const HF = '─'; // horizontal fill\r\n\r\n//   let output = '   ';\r\n\r\n//   for (let i = 0; i < position.length; i++) {\r\n//     output += i < 9 ? `${i} ` : i;\r\n//   }\r\n\r\n//   output += '\\n';\r\n\r\n//   for (let y = 0; y < position.length; y++) {\r\n//     for (let x = 0; x < position.length; x++) {\r\n//       const color = position[x][y];\r\n\r\n//       if (x === 0) {\r\n//         output += `${(y < 10 ? ` ${y}` : y)} `;\r\n//       }\r\n\r\n//       if (color !== Color.EMPTY) {\r\n//         output += color === Color.BLACK ? BS : WS;\r\n//       } else {\r\n//         let char;\r\n\r\n//         if (y === 0) {\r\n//           // top line\r\n//           if (x === 0) {\r\n//             char = TL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = TM;\r\n//           } else {\r\n//             char = TR;\r\n//           }\r\n//         } else if (y < position.length - 1) {\r\n//           // middle line\r\n//           if (x === 0) {\r\n//             char = ML;\r\n//           } else if (x < position.length - 1) {\r\n//             char = MM;\r\n//           } else {\r\n//             char = MR;\r\n//           }\r\n//         } else {\r\n//           // bottom line\r\n//           if (x === 0) {\r\n//             char = BL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = BM;\r\n//           } else {\r\n//             char = BR;\r\n//           }\r\n//         }\r\n\r\n//         output += char;\r\n//       }\r\n\r\n//       if (x === position.length - 1) {\r\n//         if (y !== position.length - 1) {\r\n//           output += '\\n';\r\n//         }\r\n//       } else {\r\n//         output += HF;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return output;\r\n// }\r\n","export enum PropIdent {\r\n  // Move Properties\r\n  BLACK_MOVE = 'B',\r\n  EXECUTE_ILLEGAL = 'KO',\r\n  MOVE_NUMBER = 'MN',\r\n  WHITE_MOVE = 'W',\r\n\r\n  // Setup Properties\r\n  ADD_BLACK = 'AB',\r\n  CLEAR_FIELD = 'AE',\r\n  ADD_WHITE = 'AW',\r\n  SET_TURN = 'PL',\r\n\r\n  // Node Annotation Properties\r\n  COMMENT = 'C',\r\n  EVEN_POSITION = 'DM',\r\n  GOOD_FOR_BLACK = 'GB',\r\n  GOOD_FOR_WHITE = 'GW',\r\n  HOTSPOT = 'HO',\r\n  NODE_NAME = 'N',\r\n  UNCLEAR_POSITION = 'UC',\r\n  NODE_VALUE = 'V',\r\n\r\n  // Move Annotation Properties\r\n  BAD_MOVE = 'BM',\r\n  DOUBTFUL_MOVE = 'DM',\r\n  INTERESTING_MOVE = 'IT',\r\n  GOOD_MOVE = 'TE',\r\n\r\n  // Markup Properties\r\n  ARROW = 'AR',\r\n  CIRCLE = 'CR',\r\n  DIM = 'DD',\r\n  LABEL = 'LB',\r\n  LINE = 'LN',\r\n  X_MARK = 'MA',\r\n  SELECTED = 'SL',\r\n  SQUARE = 'SQ',\r\n  TRIANGLE = 'TR',\r\n\r\n  // Root Properties\r\n  APPLICATION = 'AP',\r\n  CHARSET = 'CA',\r\n  SGF_VERSION = 'FF',\r\n  GAME_TYPE = 'GM',\r\n  VARIATIONS_STYLE = 'ST',\r\n  BOARD_SIZE = 'SZ',\r\n\r\n  // Game Info Properties\r\n  ANNOTATOR = 'AN',\r\n  BLACK_RANK = 'BR',\r\n  BLACK_TEAM = 'BT',\r\n  COPYRIGHT = 'CP',\r\n  DATE = 'DT',\r\n  EVENT = 'EV',\r\n  GAME_NAME = 'GN',\r\n  GAME_COMMENT = 'GC',\r\n  OPENING_INFO = 'ON',\r\n  OVER_TIME = 'OT',\r\n  BLACK_NAME = 'BN',\r\n  PLACE = 'PC',\r\n  WHITE_NAME = 'PW',\r\n  RESULT = 'RE',\r\n  ROUND = 'RO',\r\n  RULES = 'RU',\r\n  SOURCE = 'SO',\r\n  TIME_LIMITS = 'TM',\r\n  AUTHOR = 'US',\r\n  WHITE_RANK = 'WR',\r\n  WHITE_TEAM = 'WT',\r\n\r\n  // Timing Properties\r\n  BLACK_TIME_LEFT = 'BL',\r\n  BLACK_STONES_LEFT = 'OB',\r\n  WHITE_STONES_LEFT = 'OW',\r\n  WHITE_TIME_LEFT = 'WL',\r\n\r\n  // Miscellaneous Properties\r\n  FIGURE = 'FG',\r\n  PRINT_MOVE_NUMBERS = 'PM',\r\n  BOARD_SECTION = 'VW',\r\n  HANDICAP = 'HA',\r\n\r\n  // GO specific Properties\r\n  KOMI = 'KM',\r\n  BLACK_TERRITORY = 'TB',\r\n  WHITE_TERRITORY = 'TW',\r\n}\r\n\r\nexport type SGFProperties = {\r\n  [key in PropIdent]?: string[];\r\n};\r\n\r\nexport type SGFNode = SGFProperties;\r\n\r\nexport interface SGFGameTree {\r\n  sequence: SGFNode[];\r\n  children: SGFGameTree[];\r\n}\r\n\r\nexport type SGFCollection = SGFGameTree[];\r\n","import { GoRules, JAPANESE_RULES, Repeating } from './rules';\r\nimport Position from './Position';\r\nimport { Color } from '../types';\r\n\r\nexport default class Game {\r\n  size: number;\r\n  rules: GoRules;\r\n  komi: number;\r\n  positionStack: Position[];\r\n\r\n  /**\r\n   * Creates instance of game class.\r\n   *\r\n   * @class\r\n   * This class implements game logic. It basically analyses given moves and returns capture stones.\r\n   * WGo.Game also stores every position from beginning, so it has ability to check repeating positions\r\n   * and it can effectively restore old positions.\r\n   *\r\n   *\r\n   * @param {number} [size = 19] Size of the board\r\n   * @param {string} [checkRepeat = KO] How to handle repeated position:\r\n   *\r\n   * * KO - ko is properly handled - position cannot be same like previous position\r\n   * * ALL - position cannot be same like any previous position - e.g. it forbids triple ko\r\n   * * NONE - position can be repeated\r\n   *\r\n   * @param {boolean} [allowRewrite = false] Allow to play moves, which were already played\r\n   * @param {boolean} [allowSuicide = false] Allow to play suicides, stones are immediately captured\r\n   */\r\n\r\n  constructor(size: number = 19, rules: GoRules = JAPANESE_RULES) {\r\n    this.size = size;\r\n    this.rules = rules;\r\n    this.komi = rules.komi;\r\n    this.positionStack = [new Position(size)];\r\n  }\r\n\r\n  get position() {\r\n    return this.positionStack[this.positionStack.length - 1];\r\n  }\r\n\r\n  set position(pos) {\r\n    this.positionStack[this.positionStack.length - 1] = pos;\r\n  }\r\n\r\n  get turn() {\r\n    return this.position.turn;\r\n  }\r\n\r\n  set turn(color: Color.WHITE | Color.BLACK) {\r\n    this.position.turn = color;\r\n  }\r\n\r\n  get capCount() {\r\n    return this.position.capCount;\r\n  }\r\n\r\n  /**\r\n   * Play move. You can specify color.\r\n   */\r\n  play(x: number, y: number) {\r\n    const nextPosition = this.tryToPlay(x, y);\r\n\r\n    if (nextPosition) {\r\n      this.pushPosition(nextPosition);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Tries to play on given coordinates, returns new position after the play, or error code.\r\n   */\r\n  protected tryToPlay(x: number, y: number) {\r\n    const nextPosition = this.position.clone();\r\n    const success = nextPosition.applyMove(x, y, nextPosition.turn, this.rules.allowSuicide, this.rules.allowRewrite);\r\n\r\n    if (success && !this.hasPositionRepeated(nextPosition)) {\r\n      return nextPosition;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Position} position to check\r\n   * @return {boolean} Returns true if the position didn't occurred in the past (according to the rule set)\r\n   */\r\n  hasPositionRepeated(position: Position): boolean {\r\n    let depth: number;\r\n\r\n    if (this.rules.repeating === Repeating.KO && this.positionStack.length - 2 >= 0) {\r\n      depth = this.positionStack.length - 2;\r\n    } else if (this.rules.repeating === Repeating.NONE) {\r\n      depth = 0;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    for (let i = this.positionStack.length - 1; i >= depth; i--) {\r\n      if (this.positionStack[i].compare(position).length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Play pass.\r\n   *\r\n   * @param {(BLACK|WHITE)} c color\r\n   */\r\n\r\n  pass(c: Color.BLACK | Color.WHITE = this.turn) {\r\n    const nextPosition = this.position.clone();\r\n    nextPosition.turn = -(c || this.turn);\r\n    this.pushPosition(nextPosition);\r\n  }\r\n\r\n  /**\r\n   * Finds out validity of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move can be played.\r\n   */\r\n\r\n  isValid(x: number, y: number): boolean {\r\n    return !!this.tryToPlay(x, y);\r\n  }\r\n\r\n  /**\r\n   * Controls position of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move is on board.\r\n   */\r\n\r\n  isOnBoard(x: number, y: number): boolean {\r\n    return this.position.isOnPosition(x, y);\r\n  }\r\n\r\n  /**\r\n   * Inserts move into current position. Use for setting position, for example in handicap game. Field must be empty.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {Color} c color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  addStone(x: number, y: number, c: Color.BLACK | Color.WHITE): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) === Color.EMPTY) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes move from current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  removeStone(x: number, y: number): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) !== Color.EMPTY) {\r\n      this.position.set(x, y, Color.EMPTY);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set or insert move of current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {(BLACK|WHITE)} [c] color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  setStone(x: number, y: number, c: Color): boolean {\r\n    if (this.isOnBoard(x, y)) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get stone on given position.s\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {(Color|null)} color\r\n   */\r\n\r\n  getStone(x: any, y: any): (Color | null) {\r\n    return this.position.get(x, y);\r\n  }\r\n\r\n  /**\r\n   * Add position to stack. If position isn't specified current position is cloned and stacked.\r\n   * Pointer of actual position is moved to the new position.\r\n   *\r\n   * @param {WGo.Position} tmp position (optional)\r\n   */\r\n\r\n  pushPosition(pos: Position) {\r\n    return this.positionStack.push(pos);\r\n  }\r\n\r\n  /**\r\n   * Remove current position from stack. Pointer of actual position is moved to the previous position.\r\n   */\r\n\r\n  popPosition() {\r\n    if (this.positionStack.length > 1) {\r\n      return this.positionStack.pop();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes all positions except the initial.\r\n   */\r\n\r\n  clear() {\r\n    this.positionStack = [this.positionStack[0]];\r\n  }\r\n}\r\n","import { LifeCycleEvent } from './types';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../types';\r\nimport { goRules } from '../Game';\r\n\r\nexport function beforeInitSZ(event: LifeCycleEvent<number>) {\r\n  event.target.params.size = event.value;\r\n}\r\n\r\nexport function beforeInitRU(event: LifeCycleEvent<string>) {\r\n  if ((goRules as any)[event.value]) {\r\n    event.target.params.rules = (goRules as any)[event.value];\r\n  }\r\n}\r\n\r\nexport function applyGameChangesHA(event: LifeCycleEvent<number>) {\r\n  if (\r\n    event.value > 1 &&\r\n    event.target.currentNode === event.target.rootNode &&\r\n    !event.target.getProperty(PropIdent.SET_TURN)\r\n  ) {\r\n    event.target.game.position.turn = Color.WHITE;\r\n  }\r\n}\r\n\r\nexport function applyGameChangesMove(event: LifeCycleEvent<Point>) {\r\n  const color = event.propIdent === 'B' ? Color.B : Color.W;\r\n\r\n  // if this is false, move is pass\r\n  if (event.value) {\r\n    event.target.game.position.applyMove(event.value.x, event.value.y, color, true, true);\r\n  }\r\n\r\n  event.target.game.position.turn = -color;\r\n}\r\n\r\nexport function applyGameChangesPL(event: LifeCycleEvent<Color.BLACK | Color.WHITE>) {\r\n  event.target.game.turn = event.value;\r\n}\r\n\r\nexport function applyGameChangesSetup(event: LifeCycleEvent<Point[]>) {\r\n  let color: Color;\r\n  switch (event.propIdent) {\r\n    case 'AB': color = Color.B; break;\r\n    case 'AW': color = Color.W; break;\r\n    case 'AE': color = Color.E; break;\r\n  }\r\n\r\n  event.value.forEach((value) => {\r\n    // add stone\r\n    event.target.game.setStone(value.x, value.y, color);\r\n  });\r\n}\r\n","import KifuNode, { Path } from '../kifu/KifuNode';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport { Game, goRules, GoRules, JAPANESE_RULES } from '../Game';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport PropertyHandler from './PropertyHandler';\r\nimport { PlayerInitParams } from './types';\r\nimport * as basePropertyListeners from './basePropertyListeners';\r\nimport { Color } from '../types';\r\nimport PlayerPlugin from './PlayerPlugin';\r\n\r\nexport default class PlayerBase extends EventEmitter {\r\n  rootNode: KifuNode;\r\n  currentNode: KifuNode;\r\n  game: Game;\r\n  params: PlayerInitParams;\r\n  plugins: PlayerPlugin[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.loadKifu(new KifuNode());\r\n    this.plugins = [];\r\n\r\n    this.on('beforeInit.SZ', basePropertyListeners.beforeInitSZ);\r\n    this.on('beforeInit.RU', basePropertyListeners.beforeInitRU);\r\n    this.on('applyGameChanges.HA', basePropertyListeners.applyGameChangesHA);\r\n    this.on('applyGameChanges.B', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.W', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.PL', basePropertyListeners.applyGameChangesPL);\r\n    this.on('applyGameChanges.AB', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AW', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AE', basePropertyListeners.applyGameChangesSetup);\r\n  }\r\n\r\n  /**\r\n   * Load game (kifu) from KifuNode.\r\n   */\r\n  loadKifu(rootNode: KifuNode) {\r\n    this.rootNode = rootNode;\r\n    this.currentNode = rootNode;\r\n\r\n    this.emit('loadKifu', {\r\n      name: 'loadKifu',\r\n      kifuNode: rootNode,\r\n      target: this,\r\n    });\r\n    this.executeRoot();\r\n  }\r\n\r\n  /**\r\n   * Create new game (kifu) and init player with it.\r\n   */\r\n  newGame(size?: number, rules?: GoRules) {\r\n    const rootNode = new KifuNode();\r\n\r\n    if (size) {\r\n      rootNode.setProperty('SZ', size);\r\n    }\r\n\r\n    if (rules) {\r\n      // TODO: handle rules more correctly\r\n      const rulesName = Object.keys(goRules).find(name => (goRules as any)[name] === rules);\r\n      if (rulesName) {\r\n        rootNode.setProperty('RU', rulesName);\r\n      }\r\n    }\r\n\r\n    this.loadKifu(rootNode);\r\n  }\r\n\r\n  /**\r\n   * Executes root properties during initialization. If some properties change, call this to re-init player.\r\n   */\r\n  protected executeRoot() {\r\n    this.params = {\r\n      size: 19,\r\n      rules: JAPANESE_RULES,\r\n    };\r\n\r\n    this.emitNodeLifeCycleEvent('beforeInit');\r\n    this.game = new Game(this.params.size, this.params.rules);\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  protected executeNode() {\r\n    this.emitNodeLifeCycleEvent('applyGameChanges');\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Change current node to specified next node and executes its properties.\r\n   */\r\n  protected executeNext(i: number) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n\r\n    this.game.pushPosition(this.game.position.clone());\r\n    this.currentNode = this.currentNode.children[i];\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Change current node to previous/parent next node and executes its properties.\r\n   */\r\n  protected executePrevious() {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n\r\n    this.game.popPosition();\r\n    this.currentNode = this.currentNode.parent;\r\n\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Emits node life cycle method (for every property)\r\n   */\r\n  protected emitNodeLifeCycleEvent(name: keyof PropertyHandler<any, any>) {\r\n    this.emit(name, {\r\n      name,\r\n      target: this,\r\n    });\r\n\r\n    this.currentNode.forEachProperty((propIdent, value) => {\r\n      this.emit(`${name}.${propIdent}`, {\r\n        name,\r\n        target: this,\r\n        propIdent,\r\n        value,\r\n      });\r\n    });\r\n  }\r\n\r\n  protected getPropertyHandler(propIdent: string) {\r\n    return (this.constructor as any).propertyHandlers[propIdent] as PropertyHandler<any, any>;\r\n  }\r\n\r\n  /**\r\n   * Gets property of current node.\r\n   */\r\n  getProperty(propIdent: PropIdent) {\r\n    return this.currentNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Sets property of current node and execute changes.\r\n   */\r\n  setProperty(propIdent: PropIdent, value?: any) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n    this.currentNode.setProperty(propIdent, value);\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Gets property of root node.\r\n   */\r\n  getRootProperty(propIdent: PropIdent) {\r\n    return this.rootNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Returns array of next nodes (children).\r\n   */\r\n  getNextNodes() {\r\n    return this.currentNode.children;\r\n  }\r\n\r\n  /**\r\n   * Go to (specified) next node and execute it.\r\n   */\r\n  next(node: number | KifuNode = 0) {\r\n    if (this.currentNode.children.length) {\r\n      let i: number;\r\n\r\n      if (typeof node === 'number') {\r\n        i = node;\r\n      } else {\r\n        i = this.currentNode.children.indexOf(node);\r\n      }\r\n\r\n      if (this.currentNode.children[i]) {\r\n        this.executeNext(i);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the previous node.\r\n   */\r\n  previous() {\r\n    if (this.currentNode.parent) {\r\n      this.executePrevious();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the first position - root node.\r\n   */\r\n  first() {\r\n    // not sure if effective - TODO: check if there is a better way to do this\r\n    while (this.previous()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to the last position.\r\n   */\r\n  last() {\r\n    while (this.next()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to a node specified by path or move number.\r\n   */\r\n  goTo(pathOrMoveNumber: Path | number) {\r\n    // TODO: check if there is a better way to do this\r\n    const path = typeof pathOrMoveNumber === 'number' ? { depth: pathOrMoveNumber, forks: [] } : pathOrMoveNumber;\r\n    this.first();\r\n\r\n    for (let i = 0, j = 0; i < path.depth; i++) {\r\n      if (this.currentNode.children.length > 1) {\r\n        this.next(path.forks[j++]);\r\n      } else {\r\n        this.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get path to current node\r\n   */\r\n  getCurrentPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n\r\n    if (this.currentNode) {\r\n      let node = this.currentNode;\r\n\r\n      while (node.parent) {\r\n        path.depth++;\r\n\r\n        if (node.parent.children.length > 1) {\r\n          path.forks.push(node.parent.children.indexOf(node));\r\n        }\r\n\r\n        node = node.parent;\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /**\r\n\t * Go to previous fork (a node with more than one child).\r\n\t */\r\n  previousFork() {\r\n    while (this.previous()) {\r\n      if (this.currentNode.children.length > 1) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a move. New kifu node will be created and move to it\r\n   */\r\n  play(x: number, y: number) {\r\n    const node = new KifuNode();\r\n\r\n    if (this.game.turn === Color.W) {\r\n      node.setProperty(PropIdent.WHITE_MOVE, { x, y });\r\n    } else {\r\n      node.setProperty(PropIdent.BLACK_MOVE, { x, y });\r\n    }\r\n\r\n    const i = this.currentNode.appendChild(node);\r\n    this.next(i);\r\n  }\r\n\r\n  /**\r\n   * Register player's plugin.\r\n   *\r\n   * @param plugin\r\n   */\r\n  use(plugin: PlayerPlugin) {\r\n    if (!plugin || typeof plugin.apply !== 'function') {\r\n      throw new TypeError('Plugin must implement an `apply` method.');\r\n    }\r\n    plugin.apply(this);\r\n    this.plugins.push(plugin);\r\n  }\r\n}\r\n","import { PlayerBase } from '../PlayerBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport PlayerDOMComponent from './components/PlayerDOMComponent';\r\n\r\nexport interface PlayerDOMConfig {\r\n  enableMouseWheel: boolean;\r\n  enableKeys: boolean;\r\n  fastReplay: number;\r\n}\r\n\r\nexport const playerDOMDefaultConfig = {\r\n  enableMouseWheel: true,\r\n  enableKeys: true,\r\n  fastReplay: 2000,\r\n};\r\n\r\n/**\r\n * Player with support to render visual elements into the DOM.\r\n */\r\nexport default class PlayerDOM extends PlayerBase {\r\n  config: PlayerDOMConfig;\r\n  components: Map<HTMLElement, PlayerDOMComponent> = new Map();\r\n  fastReplayTimeout: number;\r\n  fastReplayEnabled = false;\r\n\r\n  constructor(config: PartialRecursive<PlayerDOMConfig> = {}) {\r\n    super();\r\n    this.config = makeConfig(playerDOMDefaultConfig, config);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    document.addEventListener('keydown', this.handleKeydown);\r\n    document.addEventListener('keyup', this.handleKeyup);\r\n  }\r\n\r\n  /**\r\n   * Renders PlayerDOM component into specified HTML element. If there is content inside that element\r\n   * it will be removed. Render method can be called multiple times - this allows to have player's component\r\n   * anywhere you want.\r\n   *\r\n   * @param component\r\n   * @param container\r\n   */\r\n  render(component: PlayerDOMComponent, container: HTMLElement) {\r\n    // clear content of the container\r\n    container.innerHTML = '';\r\n\r\n    // creates wrapper\r\n    const wrapper = this.createWrapper();\r\n    container.appendChild(wrapper);\r\n\r\n    // creates the component HTML element\r\n    wrapper.appendChild(component.element);\r\n    component.create(this);\r\n\r\n    this.components.set(container, component);\r\n  }\r\n\r\n  /**\r\n   * Removes component rendered via `render` method. Call this to clean event listeners of the component.\r\n   *\r\n   * @param container\r\n   */\r\n  clear(container: HTMLElement) {\r\n    const component = this.components.get(container);\r\n\r\n    if (component && typeof component.destroy === 'function') {\r\n      component.destroy();\r\n    }\r\n\r\n    const wrapper = container.firstChild as HTMLDivElement;\r\n    wrapper.removeEventListener('wheel', this.handleMouseWheel);\r\n    container.removeChild(wrapper);\r\n\r\n    this.components.delete(container);\r\n  }\r\n\r\n  private createWrapper() {\r\n    const element = document.createElement('div');\r\n    element.className = 'wgo-player';\r\n    element.tabIndex = 1;\r\n\r\n    element.addEventListener('wheel', this.handleMouseWheel);\r\n\r\n    return element;\r\n  }\r\n\r\n  private handleResize = () => {\r\n    this.emit('resize');\r\n  }\r\n\r\n  private handleMouseWheel = (e: WheelEvent) => {\r\n    if (this.config.enableMouseWheel) {\r\n      if (e.deltaY > 0) {\r\n        this.next();\r\n      } else if (e.deltaY < 0) {\r\n        this.previous();\r\n      }\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  private handleKeydown = (e: KeyboardEvent) => {\r\n    if (this.config.enableKeys && this.hasFocus()) {\r\n      if (this.config.fastReplay >= 0 && !this.fastReplayTimeout) {\r\n        this.fastReplayTimeout = window.setTimeout(() => {\r\n          this.fastReplayEnabled = true;\r\n        }, this.config.fastReplay);\r\n      }\r\n\r\n      if (e.key === 'ArrowRight') {\r\n        this.next();\r\n        if (this.fastReplayEnabled) {\r\n          this.next();\r\n          this.next();\r\n        }\r\n      } else if (e.key === 'ArrowLeft') {\r\n        this.previous();\r\n        if (this.fastReplayEnabled) {\r\n          this.previous();\r\n          this.previous();\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private handleKeyup = () => {\r\n    window.clearTimeout(this.fastReplayTimeout);\r\n    this.fastReplayTimeout = null;\r\n    this.fastReplayEnabled = false;\r\n  }\r\n\r\n  private hasFocus() {\r\n    for (const elem of this.components.keys()) {\r\n      if (elem.firstChild === document.activeElement) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { BoardBaseConfig, BoardBaseTheme } from '../BoardBase/types';\r\nimport { BoardObject } from '../BoardBase';\r\n\r\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\r\nexport const SVG_OBJECTS = 'objects';\r\nexport const SVG_GRID_MASK = 'gridMask';\r\nexport const SVG_SHADOWS = 'shadows';\r\n\r\nexport interface BoardObjectSVGElements {\r\n  [key: string]: SVGElement;\r\n}\r\n\r\nexport interface SVGDrawHandler {\r\n  /** Should return SVG element representing the board object, can be <g> for multiple elements. */\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  /** This will be called any time, board object changes. */\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardObject, config: SVGBoardConfig): void;\r\n}\r\n\r\nexport interface SVGBoardTheme extends BoardBaseTheme {\r\n  markupGridMask: number;\r\n\r\n  coordinates: BoardBaseTheme['coordinates'] & {\r\n    fontSize: number,\r\n  };\r\n\r\n  coordinatesTop: boolean;\r\n  coordinatesRight: boolean;\r\n  coordinatesBottom: boolean;\r\n  coordinatesLeft: boolean;\r\n\r\n  drawHandlers: {\r\n    [key: string]: SVGDrawHandler;\r\n  };\r\n}\r\n\r\nexport interface SVGBoardConfig extends BoardBaseConfig {\r\n  theme: SVGBoardTheme;\r\n}\r\n\r\nexport interface SVGCustomObject extends BoardObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n\r\nexport type SVGBoardObject = BoardObject | SVGCustomObject;\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport { BoardLineObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Arrow implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    return {\r\n      [SVG_OBJECTS]: this.createSVGElements(),\r\n      [SVG_GRID_MASK]: this.createSVGElements(),\r\n    };\r\n  }\r\n\r\n  protected createSVGElements() {\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    const startCircle = document.createElementNS(SVG_NS, 'circle');\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const endTriangle = document.createElementNS(SVG_NS, 'polygon');\r\n\r\n    group.appendChild(startCircle);\r\n    group.appendChild(line);\r\n    group.appendChild(endTriangle);\r\n    return group;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardLineObject, config: SVGBoardConfig) {\r\n    // basic UI definitions\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('fill', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    this.updateSVGElements(elem[SVG_OBJECTS], boardObject);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute('stroke-width', (this.params.lineWidth || config.theme.markupLineWidth) * 3 as any);\r\n    this.updateSVGElements(elem[SVG_GRID_MASK], boardObject);\r\n  }\r\n\r\n  protected updateSVGElements(elem: SVGElement, boardObject: BoardLineObject) {\r\n    // SVG elements of arrow\r\n    const startCircle = elem.children[0];\r\n    const line = elem.children[1];\r\n    const endTriangle = elem.children[2];\r\n\r\n    const x1 = boardObject.start.x;\r\n    const y1 = boardObject.start.y;\r\n    const x2 = boardObject.end.x;\r\n    const y2 = boardObject.end.y;\r\n\r\n    // length of the main line\r\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\r\n    // line parametric functions\r\n    const getLineX = (t: number) => x1 + t * (x2 - x1);\r\n    const getLineY = (t: number) => y1 + t * (y2 - y1);\r\n\r\n    // triangle base line position on the main line\r\n    const triangleLen = 1 / length / 2.5;\r\n    const tx = getLineX(1 - triangleLen);\r\n    const ty = getLineY(1 - triangleLen);\r\n\r\n    // triangle base line parametric functions\r\n    const getBaseLineX = (t: number) => tx + t * (y2 - y1);\r\n    const getBaseLineY = (t: number) => ty + t * (x1 - x2);\r\n\r\n    // initial circle length\r\n    const circleLen = 0.1;\r\n\r\n    // draw initial circle\r\n    startCircle.setAttribute('cx', x1 as any);\r\n    startCircle.setAttribute('cy', y1 as any);\r\n    startCircle.setAttribute('r', circleLen as any);\r\n\r\n    // draw line\r\n    line.setAttribute('x1', getLineX(1 / length * circleLen) as any);\r\n    line.setAttribute('y1', getLineY(1 / length * circleLen) as any);\r\n    line.setAttribute('x2', tx as any);\r\n    line.setAttribute('y2', ty as any);\r\n\r\n    // draw triangle at the end to make arrow\r\n    endTriangle.setAttribute('points', `\r\n      ${getBaseLineX(- triangleLen / 1.75)},${getBaseLineY(- triangleLen / 1.75)}\r\n      ${getBaseLineX(triangleLen / 1.75)},${getBaseLineY(triangleLen / 1.75)}\r\n      ${x2},${y2}\r\n    `);\r\n  }\r\n}\r\n","\r\nimport { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { FieldObject } from '../../BoardBase';\r\n\r\nexport default abstract class SVGFieldDrawHandler implements SVGDrawHandler {\r\n  // tslint:disable-next-line:max-line-length\r\n  abstract createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: FieldObject, config: SVGBoardConfig) {\r\n    const transform = `translate(${boardObject.x}, ${boardObject.y})`;\r\n    const scale = `scale(${boardObject.scaleX}, ${boardObject.scaleY})`;\r\n    const rotate = `rotate(${boardObject.rotate})`;\r\n\r\n    Object.keys(elem).forEach((ctx) => {\r\n      elem[ctx].setAttribute('transform', `${transform} ${scale} ${rotate}`);\r\n      elem[ctx].setAttribute('opacity', boardObject.opacity as any);\r\n    });\r\n  }\r\n}\r\n","import { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { BoardMarkupObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport interface SVGMarkupDrawHandlerParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n  fillColor?: string;\r\n}\r\n\r\nexport default abstract class SVGMarkupDrawHandler extends SVGFieldDrawHandler {\r\n  params: SVGMarkupDrawHandlerParams;\r\n\r\n  constructor(params: SVGMarkupDrawHandlerParams = {}) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardMarkupObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    if (boardObject.variation === Color.B) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupBlackColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else if (boardObject.variation === Color.W) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupWhiteColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    }\r\n\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Circle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.25');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.35');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: circle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dim extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const rect = document.createElementNS(SVG_NS, 'rect');\r\n    rect.setAttribute('x', '-0.5');\r\n    rect.setAttribute('y', '-0.5');\r\n    rect.setAttribute('width', '1');\r\n    rect.setAttribute('height', '1');\r\n    rect.setAttribute('fill', this.params.color);\r\n\r\n    return rect;\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dot extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.15');\r\n    circle.setAttribute('fill', this.params.color);\r\n\r\n    return circle;\r\n  }\r\n}\r\n","export default function generateId(prefix: string) {\r\n  return `${prefix}-${Math.floor(Math.random() * 1000000000).toString(36)}`;\r\n}\r\n","import SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, BoardObjectSVGElements } from '../types';\r\nimport generateId from '../generateId';\r\n\r\nexport default abstract class SVGStoneDrawHandler extends SVGFieldDrawHandler {\r\n  shadowFilterElement: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements {\r\n    /*if (!this.shadowFilterElement) {\r\n      this.shadowFilterElement = document.createElementNS(NS, 'filter');\r\n      this.shadowFilterElement.setAttribute('id', generateId('filter'));\r\n      this.shadowFilterElement.innerHTML = `\r\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"0.05\" />\r\n        <feOffset dx=\"0.03\" dy=\"0.03\" result=\"offsetblur\" />\r\n        <feComponentTransfer>\r\n          <feFuncA type=\"linear\" slope=\"0.5\" />\r\n        </feComponentTransfer>\r\n        <feMerge>\r\n          <feMergeNode />\r\n          <feMergeNode in=\"SourceGraphic\" />\r\n        </feMerge>\r\n      `;\r\n\r\n      addDef(this.shadowFilterElement);\r\n    }*/\r\n\r\n    return null;\r\n  }\r\n\r\n  createShadow(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    const stoneRadius = config.theme.stoneSize;\r\n\r\n    if (!this.shadowFilterElement) {\r\n      const shadowFilterElement = document.createElementNS(SVG_NS, 'radialGradient');\r\n      const blur = config.theme.shadowBlur;\r\n\r\n      const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n      const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n      shadowFilterElement.setAttribute('id', generateId('shadowFilter'));\r\n      shadowFilterElement.setAttribute('fr', String(startRadius));\r\n      shadowFilterElement.setAttribute('r', String(stopRadius));\r\n      shadowFilterElement.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"${config.theme.shadowColor}\" />\r\n        <stop offset=\"100%\" stop-color=\"${config.theme.shadowTransparentColor}\" />\r\n      `;\r\n\r\n      addDef(shadowFilterElement);\r\n      this.shadowFilterElement = shadowFilterElement;\r\n    }\r\n\r\n    const shadow = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    shadow.setAttribute('cx', String(config.theme.shadowOffsetX));\r\n    shadow.setAttribute('cy', String(config.theme.shadowOffsetY));\r\n    shadow.setAttribute('r', String(stoneRadius));\r\n    shadow.setAttribute('fill', `url(#${this.shadowFilterElement.id})`);\r\n\r\n    return shadow;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneBlack extends SVGStoneDrawHandler {\r\n  filterElement: SVGFilterElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement) {\r\n      const filter = document.createElementNS(SVG_NS, 'filter');\r\n\r\n      filter.setAttribute('id', generateId('filter'));\r\n      filter.setAttribute('x', '-300%');\r\n      filter.setAttribute('y', '-300%');\r\n      filter.setAttribute('width', '600%');\r\n      filter.setAttribute('height', '600%');\r\n\r\n      const blur = document.createElementNS(SVG_NS, 'feGaussianBlur');\r\n\r\n      blur.setAttribute('in', 'SourceGraphic');\r\n      blur.setAttribute('stdDeviation', 0.3 * config.theme.stoneSize as any);\r\n      filter.appendChild(blur);\r\n\r\n      this.filterElement = filter;\r\n      addDef(filter);\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#000');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('cy', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('r', 0.25 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', '#fff');\r\n    glow1.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('cy', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('r', 0.15 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', '#fff');\r\n    glow2.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('fx', '30%');\r\n      filter1.setAttribute('fy', '30%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.9)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n\r\n      const filter2 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter2.setAttribute('id', generateId('filter'));\r\n      filter2.setAttribute('fx', '70%');\r\n      filter2.setAttribute('fy', '70%');\r\n      filter2.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.7)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter2);\r\n      this.filterElement2 = filter2;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#ccc');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', '0');\r\n    glow1.setAttribute('cy', '0');\r\n    glow1.setAttribute('r', config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', '0');\r\n    glow2.setAttribute('cy', '0');\r\n    glow2.setAttribute('r', config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', `url(#${this.filterElement2.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler, { SVGMarkupDrawHandlerParams } from './SVGMarkupDrawHandler';\r\nimport { BoardLabelObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\n\r\ninterface LabelParams extends SVGMarkupDrawHandlerParams {\r\n  font?: string;\r\n  maxWidth?: number;\r\n}\r\n\r\nexport default class Label extends SVGMarkupDrawHandler {\r\n  params: LabelParams;\r\n\r\n  constructor(params: LabelParams = {}) {\r\n    super(params);\r\n\r\n    if (!params.maxWidth && params.maxWidth !== 0) {\r\n      params.maxWidth = 0.95;\r\n    }\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const text = document.createElementNS(SVG_NS, 'text');\r\n    text.setAttribute('text-anchor', 'middle');\r\n    text.setAttribute('dominant-baseline', 'middle');\r\n    text.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'text');\r\n    mask.setAttribute('text-anchor', 'middle');\r\n    mask.setAttribute('dominant-baseline', 'middle');\r\n    mask.setAttribute('stroke-width', '0.2');\r\n    mask.setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    mask.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: text,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardLabelObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    let fontSize = 0.5;\r\n    if (boardObject.text.length === 1) {\r\n      fontSize = 0.7;\r\n    } else if (boardObject.text.length === 2) {\r\n      fontSize = 0.6;\r\n    }\r\n\r\n    if (this.params.color) {\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.color);\r\n    } else {\r\n      if (boardObject.variation === Color.B) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupBlackColor);\r\n      } else if (boardObject.variation === Color.W) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupWhiteColor);\r\n      } else {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupNoneColor);\r\n      }\r\n    }\r\n\r\n    elem[SVG_OBJECTS].removeAttribute('stroke');\r\n    elem[SVG_OBJECTS].setAttribute('font-family', this.params.font || config.theme.font);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', '0');\r\n    elem[SVG_OBJECTS].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_OBJECTS].textContent = boardObject.text;\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_GRID_MASK].textContent = boardObject.text;\r\n\r\n    if (this.params.maxWidth > 0) {\r\n      if ((elem[SVG_OBJECTS] as SVGTextElement).getComputedTextLength() > this.params.maxWidth) {\r\n        elem[SVG_OBJECTS].setAttribute('textLength', `${this.params.maxWidth}`);\r\n        elem[SVG_GRID_MASK].setAttribute('textLength', `${this.params.maxWidth}`);\r\n      } else {\r\n        elem[SVG_OBJECTS].removeAttribute('textLength');\r\n        elem[SVG_GRID_MASK].removeAttribute('textLength');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, BoardObjectSVGElements, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport { BoardLineObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Line implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const mask = document.createElementNS(SVG_NS, 'line');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: line,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardLineObject, config: SVGBoardConfig) {\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    elem[SVG_OBJECTS].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_OBJECTS].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y2', boardObject.end.y as any);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute('stroke-width', (this.params.lineWidth || config.theme.markupLineWidth) * 2 as any);\r\n    elem[SVG_GRID_MASK].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_GRID_MASK].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y2', boardObject.end.y as any);\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(48,48,48,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(16,16,16,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(0,0,0,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(255,255,255,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(215,215,215,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(170,170,170,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, SVG_OBJECTS } from '../types';\r\n\r\nexport default class RealisticStone extends SVGStoneDrawHandler {\r\n  paths: string[];\r\n  fallback: SVGFieldDrawHandler;\r\n  randSeed: number;\r\n  loadedPaths: { [path: string]: boolean };\r\n\r\n  constructor (paths: string[], fallback: SVGFieldDrawHandler) {\r\n    super();\r\n    this.fallback = fallback;\r\n    this.randSeed = Math.ceil(Math.random() * 9999999);\r\n    this.paths = paths;\r\n    this.loadedPaths = {};\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    const id = Math.floor(Math.random() * this.paths.length);\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    let fallbackElement: any;\r\n\r\n    if (!this.loadedPaths[id]) {\r\n      fallbackElement = this.fallback.createElement(config, addDef);\r\n\r\n      if (!(fallbackElement instanceof SVGElement)) {\r\n        fallbackElement = fallbackElement[SVG_OBJECTS];\r\n      }\r\n\r\n      group.appendChild(fallbackElement);\r\n    }\r\n\r\n    const image = document.createElementNS(SVG_NS, 'image');\r\n    image.setAttribute('href', this.paths[id]);\r\n    image.setAttribute('width', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('height', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('x', -config.theme.stoneSize as any);\r\n    image.setAttribute('y', -config.theme.stoneSize as any);\r\n    if (!this.loadedPaths[id]) {\r\n      image.setAttribute('opacity', '0');\r\n    }\r\n    image.addEventListener('load', () => {\r\n      if (fallbackElement) {\r\n        image.setAttribute('opacity', '1');\r\n        group.removeChild(fallbackElement as SVGElement);\r\n        this.loadedPaths[id] = true;\r\n      }\r\n    });\r\n\r\n    group.appendChild(image);\r\n\r\n    return group;\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class SimpleStone extends SVGFieldDrawHandler {\r\n  color: string;\r\n\r\n  constructor(color: string) {\r\n    super();\r\n    this.color = color;\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stone.setAttribute('fill', this.color);\r\n\r\n    return stone;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Square extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const square = document.createElementNS(SVG_NS, 'rect');\r\n    square.setAttribute('x', '-0.25');\r\n    square.setAttribute('y', '-0.25');\r\n    square.setAttribute('width', '0.50');\r\n    square.setAttribute('height', '0.50');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'rect');\r\n    mask.setAttribute('x', '-0.35');\r\n    mask.setAttribute('y', '-0.35');\r\n    mask.setAttribute('width', '0.70');\r\n    mask.setAttribute('height', '0.70');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: square,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Triangle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const triangle = document.createElementNS(SVG_NS, 'polygon');\r\n    triangle.setAttribute('points', '0,-0.25 -0.25,0.166666 0.25,0.166666');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'polygon');\r\n    mask.setAttribute('points', '0,-0.35 -0.35,0.2333333 0.35,0.2333333');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: triangle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class XMark extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const path = document.createElementNS(SVG_NS, 'path');\r\n    path.setAttribute('d', 'M -0.20,-0.20 L 0.20,0.20 M 0.20,-0.20 L -0.20,0.20');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.15');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: path,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction line(fromX: number, fromY: number, toX: number, toY: number) {\r\n  const line = document.createElementNS(SVG_NS, 'line');\r\n  line.setAttribute('x1', fromX as any);\r\n  line.setAttribute('y1', fromY as any);\r\n  line.setAttribute('x2', toX as any);\r\n  line.setAttribute('y2', toY as any);\r\n\r\n  return line;\r\n}\r\n\r\nfunction star(x: number, y: number, starSize: number) {\r\n  const star = document.createElementNS(SVG_NS, 'circle');\r\n  star.setAttribute('cx', x as any);\r\n  star.setAttribute('cy', y as any);\r\n  star.setAttribute('r', starSize as any);\r\n  star.setAttribute('fill', '#553310');\r\n  star.setAttribute('stroke-width', '0');\r\n\r\n  return star;\r\n}\r\n\r\nexport default function createGrid(config: SVGBoardConfig) {\r\n  const { linesWidth } = config.theme.grid;\r\n\r\n  const grid = document.createElementNS(SVG_NS, 'g');\r\n  grid.setAttribute('stroke', config.theme.grid.linesColor);\r\n  grid.setAttribute('stroke-width', linesWidth.toString());\r\n  grid.setAttribute('fill', config.theme.grid.starColor);\r\n\r\n  for (let i = 0; i < config.size; i++) {\r\n    grid.appendChild(line(i, 0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2));\r\n    grid.appendChild(line(0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2, i));\r\n  }\r\n\r\n  const starPoints = config.starPoints[config.size];\r\n\r\n  if (starPoints) {\r\n    starPoints.forEach((starPoint) => {\r\n      grid.appendChild(star(starPoint.x, starPoint.y, config.theme.grid.starSize));\r\n    });\r\n  }\r\n  return grid;\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction letter(x: number, y: number, str: string) {\r\n  const text = document.createElementNS(SVG_NS, 'text');\r\n  text.setAttribute('x', x as any);\r\n  text.setAttribute('y', y as any);\r\n  text.textContent = str;\r\n\r\n  return text;\r\n}\r\n\r\nexport default function createCoordinates(config: SVGBoardConfig) {\r\n  const coordinates = document.createElementNS(SVG_NS, 'g');\r\n  coordinates.style.userSelect = 'none';\r\n\r\n  coordinates.setAttribute('font-family', config.theme.font);\r\n  coordinates.setAttribute('font-size', config.theme.coordinates.fontSize as any);\r\n  coordinates.setAttribute('text-anchor', 'middle');\r\n  coordinates.setAttribute('dominant-baseline', 'middle');\r\n\r\n  if (config.theme.coordinates.bold) {\r\n    coordinates.setAttribute('font-weight', 'bold');\r\n  }\r\n\r\n  coordinates.setAttribute('fill', config.theme.coordinates.color);\r\n\r\n  for (let i = 0; i < config.size; i++) {\r\n    if (config.theme.coordinatesTop) {\r\n      coordinates.appendChild(letter(i, -0.75, config.coordinateLabelsX[i] as string));\r\n    }\r\n    if (config.theme.coordinatesBottom) {\r\n      coordinates.appendChild(letter(i, config.size - 0.25, config.coordinateLabelsX[i] as string));\r\n    }\r\n    if (config.theme.coordinatesLeft) {\r\n      coordinates.appendChild(letter(-0.75, config.size - i - 1, config.coordinateLabelsY[i] as string));\r\n    }\r\n    if (config.theme.coordinatesRight) {\r\n      coordinates.appendChild(letter(config.size - 0.25, config.size - i - 1, config.coordinateLabelsY[i] as string));\r\n    }\r\n  }\r\n\r\n  return coordinates;\r\n}\r\n","import { defaultBoardBaseTheme } from '../BoardBase/defaultConfig';\r\nimport { SVGBoardTheme } from './types';\r\nimport * as drawHandlers from './svgDrawHandlers';\r\nimport ModernStoneWhite from './svgDrawHandlers/ModernStoneWhite';\r\nimport ModernStoneBlack from './svgDrawHandlers/ModernStoneBlack';\r\n\r\nconst defaultSVGTheme: SVGBoardTheme = {\r\n  ...defaultBoardBaseTheme,\r\n  // backgroundImage: 'images/wood1.jpg',\r\n  markupGridMask: 0.8,\r\n  stoneSize: 0.48,\r\n\r\n  coordinates: {\r\n    ...defaultBoardBaseTheme.coordinates,\r\n    fontSize: 0.5,\r\n  },\r\n\r\n  coordinatesTop: true,\r\n  coordinatesRight: true,\r\n  coordinatesBottom: true,\r\n  coordinatesLeft: true,\r\n\r\n  grid: {\r\n    ...defaultBoardBaseTheme.grid,\r\n    linesWidth: 0.03,\r\n    starSize: 0.09,\r\n  },\r\n\r\n  drawHandlers: {\r\n    CR: new drawHandlers.Circle(),\r\n    SQ: new drawHandlers.Square(),\r\n    LB: new drawHandlers.Label(),\r\n    TR: new drawHandlers.Triangle(),\r\n    MA: new drawHandlers.XMark({ lineWidth: 0.075 }),\r\n    SL: new drawHandlers.Dot({ color: 'rgba(32, 32, 192, 0.75)' }),\r\n    LN: new drawHandlers.Line(),\r\n    AR: new drawHandlers.Arrow(),\r\n    DD: new drawHandlers.Dim({ color: 'rgba(0, 0, 0, 0.5)' }),\r\n    // B: new drawHandlers.GlassStoneBlack(),\r\n    // W: new drawHandlers.GlassStoneWhite(),\r\n    W: new ModernStoneWhite(),\r\n    B: new ModernStoneBlack(),\r\n    /*B: new drawHandlers.RealisticStone([\r\n      'images/stones/black00_128.png',\r\n      'images/stones/black01_128.png',\r\n      'images/stones/black02_128.png',\r\n      'images/stones/black03_128.png',\r\n    ], new drawHandlers.GlassStoneBlack()),\r\n    W: new drawHandlers.RealisticStone([\r\n      'images/stones/white00_128.png',\r\n      'images/stones/white01_128.png',\r\n      'images/stones/white02_128.png',\r\n      'images/stones/white03_128.png',\r\n      'images/stones/white04_128.png',\r\n      'images/stones/white05_128.png',\r\n      'images/stones/white06_128.png',\r\n      'images/stones/white07_128.png',\r\n      'images/stones/white08_128.png',\r\n      'images/stones/white09_128.png',\r\n      'images/stones/white10_128.png',\r\n    ], new drawHandlers.GlassStoneWhite()),*/\r\n  },\r\n};\r\n\r\nexport default defaultSVGTheme;\r\n","import { BoardBase, BoardViewport } from '../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport createGrid from './createGrid';\r\nimport createCoordinates from './createCoordinates';\r\nimport {\r\n  SVGDrawHandler,\r\n  SVGBoardConfig,\r\n  SVG_NS,\r\n  SVG_OBJECTS,\r\n  BoardObjectSVGElements,\r\n  SVG_GRID_MASK,\r\n  SVG_SHADOWS,\r\n  SVGBoardObject,\r\n} from './types';\r\nimport { defaultBoardBaseConfig } from '../BoardBase/defaultConfig';\r\nimport defaultSVGTheme from './defaultSVGTheme';\r\nimport generateId from './generateId';\r\nimport { Point } from '../types';\r\n\r\nconst svgBoardDefaultConfig: SVGBoardConfig = {\r\n  ...defaultBoardBaseConfig,\r\n  theme: defaultSVGTheme,\r\n};\r\n\r\nexport default class SVGBoard extends BoardBase {\r\n  config: SVGBoardConfig;\r\n  boardElement: HTMLElement;\r\n  touchArea: HTMLElement;\r\n  svgElement: SVGElement;\r\n  defsElement: SVGElement;\r\n  objects: SVGBoardObject[] = [];\r\n  objectsElementMap: Map<SVGBoardObject, BoardObjectSVGElements>;\r\n  top: number;\r\n  left: number;\r\n  bottom: number;\r\n  right: number;\r\n\r\n  /** Drawing contexts - elements to put additional board objects. Similar to layers. */\r\n  contexts: {\r\n    [key: string]: SVGElement;\r\n  } = {};\r\n\r\n  constructor (elem: HTMLElement, config: PartialRecursive<SVGBoardConfig> = {}) {\r\n    super(elem, makeConfig(svgBoardDefaultConfig, config));\r\n\r\n    this.boardElement = document.createElement('div');\r\n    this.boardElement.style.display = 'inline-block';\r\n    this.boardElement.style.position = 'relative';\r\n    this.boardElement.style.verticalAlign = 'middle';\r\n    this.boardElement.style.userSelect = 'none';\r\n    this.element.appendChild(this.boardElement);\r\n\r\n    this.touchArea = document.createElement('div');\r\n    this.touchArea.style.position = 'absolute';\r\n    this.touchArea.style.top = '0';\r\n    this.touchArea.style.left = '0';\r\n    this.touchArea.style.bottom = '0';\r\n    this.touchArea.style.right = '0';\r\n    this.touchArea.style.zIndex = '1';\r\n    this.touchArea.style.borderTop = '#F0E7A7 solid 1px';\r\n    this.touchArea.style.borderRight = '#D1A974 solid 1px';\r\n    this.touchArea.style.borderLeft = '#CCB467 solid 1px';\r\n    this.touchArea.style.borderBottom = '#665926 solid 1px';\r\n    this.boardElement.appendChild(this.touchArea);\r\n\r\n    this.svgElement = document.createElementNS(SVG_NS, 'svg');\r\n    this.svgElement.style.display = 'block';\r\n    this.boardElement.appendChild(this.svgElement);\r\n\r\n    this.defsElement = document.createElementNS(SVG_NS, 'defs');\r\n    this.svgElement.appendChild(this.defsElement);\r\n\r\n    this.setViewport();\r\n    this.resize();\r\n    this.redraw();\r\n  }\r\n\r\n  resize() {\r\n    if (this.config.width && this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else if (this.config.width) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = 'auto';\r\n    } else if (this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = 'auto';\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else {\r\n      this.boardElement.style.width = '100%';\r\n      this.svgElement.style.width = '100%';\r\n      this.svgElement.style.height = 'auto';\r\n    }\r\n  }\r\n\r\n  redraw() {\r\n    this.svgElement.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n    if (this.config.theme.backgroundImage) {\r\n      this.svgElement.style.backgroundImage = `url('${this.config.theme.backgroundImage}')`;\r\n    } else {\r\n      this.svgElement.style.backgroundImage = '';\r\n    }\r\n\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.drawObjects();\r\n  }\r\n\r\n  drawGrid() {\r\n    if (this.contexts[SVG_GRID_MASK]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_GRID_MASK]);\r\n    }\r\n\r\n    if (this.contexts.gridElement) {\r\n      this.svgElement.removeChild(this.contexts.gridElement);\r\n    }\r\n\r\n    // create grid mask\r\n    const { size } = this.config;\r\n    this.contexts[SVG_GRID_MASK] = document.createElementNS(SVG_NS, 'mask');\r\n    this.contexts[SVG_GRID_MASK].id = generateId('mask');\r\n    this.contexts[SVG_GRID_MASK].innerHTML = `<rect x=\"-0.5\" y=\"-0.5\" width=\"${size}\" height=\"${size}\" fill=\"white\" />`;\r\n    this.svgElement.appendChild(this.contexts[SVG_GRID_MASK]);\r\n\r\n    // create grid\r\n    this.contexts.gridElement = createGrid(this.config);\r\n    this.contexts.gridElement.setAttribute('mask', `url(#${this.contexts[SVG_GRID_MASK].id})`);\r\n    this.svgElement.appendChild(this.contexts.gridElement);\r\n  }\r\n\r\n  drawCoordinates() {\r\n    if (this.contexts.coordinatesElement) {\r\n      this.svgElement.removeChild(this.contexts.coordinatesElement);\r\n    }\r\n\r\n    this.contexts.coordinatesElement = createCoordinates(this.config);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.svgElement.appendChild(this.contexts.coordinatesElement);\r\n  }\r\n\r\n  drawObjects() {\r\n    // remove old shadows layer\r\n    if (this.contexts[SVG_SHADOWS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_SHADOWS]);\r\n    }\r\n\r\n    // remove old objects layer\r\n    if (this.contexts[SVG_OBJECTS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_OBJECTS]);\r\n    }\r\n\r\n    // append new shadows layer\r\n    this.contexts[SVG_SHADOWS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_SHADOWS]);\r\n\r\n    // append new object layer\r\n    this.contexts[SVG_OBJECTS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_OBJECTS]);\r\n\r\n    // prepare map for objects and add all objects\r\n    this.objectsElementMap = new Map();\r\n    this.objects.forEach(boardObject => this.createObjectElements(boardObject));\r\n  }\r\n\r\n  addObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.addObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      if (this.objectsElementMap.get(boardObject)) {\r\n        // already added - just redraw it\r\n        this.updateObject(boardObject);\r\n        return;\r\n      }\r\n\r\n      this.createObjectElements(boardObject);\r\n    }\r\n  }\r\n\r\n  protected createObjectElements(boardObject: SVGBoardObject) {\r\n    const handler = this.getObjectHandler(boardObject);\r\n\r\n    // create element or elements and add them to the svg\r\n    const elem = handler.createElement(this.config, (def: SVGElement) => this.defsElement.appendChild(def));\r\n    let elements: BoardObjectSVGElements;\r\n\r\n    if (elem instanceof SVGElement) {\r\n      elements = { [SVG_OBJECTS]: elem };\r\n    } else {\r\n      elements = elem;\r\n    }\r\n    this.objectsElementMap.set(boardObject, elements);\r\n    Object.keys(elements).forEach(key => this.contexts[key].appendChild(elements[key]));\r\n\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  getObjectHandler(boardObject: SVGBoardObject) {\r\n    return 'handler' in boardObject ? boardObject.handler : this.config.theme.drawHandlers[boardObject.type];\r\n  }\r\n\r\n  removeObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.removeObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      const elements = this.objectsElementMap.get(boardObject);\r\n      if (elements) {\r\n        this.objectsElementMap.delete(boardObject);\r\n        Object.keys(elements).forEach(key => this.contexts[key].removeChild(elements[key]));\r\n      }\r\n    }\r\n  }\r\n\r\n  updateObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.updateObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const elements = this.objectsElementMap.get(boardObject);\r\n\r\n    if (!elements) {\r\n      // updated object isn't on board - ignore, add or warning?\r\n      return;\r\n    }\r\n\r\n    const handler = this.getObjectHandler(boardObject);\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  setViewport(viewport: BoardViewport = this.config.viewport) {\r\n    super.setViewport(viewport);\r\n\r\n    const { coordinates, theme, size } = this.config;\r\n    const { marginSize, coordinatesTop, coordinatesLeft, coordinatesBottom, coordinatesRight } = theme;\r\n    const { fontSize } = theme.coordinates;\r\n\r\n    this.top = viewport.top - 0.5 - (coordinates && coordinatesTop && !viewport.top ? fontSize : 0) - marginSize;\r\n    this.left = viewport.left - 0.5 - (coordinates && coordinatesLeft && !viewport.left ? fontSize : 0) - marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.bottom = size - 0.5 - this.top - viewport.bottom + (coordinates && coordinatesBottom && !viewport.bottom ? fontSize : 0) + marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.right = size - 0.5 - this.left - viewport.right + (coordinates && coordinatesRight && !viewport.right ? fontSize : 0) + marginSize;\r\n    this.svgElement.setAttribute('viewBox', `${this.left} ${this.top} ${this.right} ${this.bottom}`);\r\n  }\r\n\r\n  setSize(size: number = 19) {\r\n    super.setSize(size);\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.setViewport();\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    super.setCoordinates(coordinates);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.setViewport();\r\n  }\r\n\r\n  on(type: string, callback: (event: UIEvent, point: Point) => void) {\r\n    super.on(type, callback);\r\n    this.registerBoardListener(type);\r\n  }\r\n\r\n  registerBoardListener(type: string) {\r\n    this.touchArea.addEventListener(type, (evt) => {\r\n      if ((evt as any).layerX != null) {\r\n        const pos = this.getRelativeCoordinates((evt as any).layerX, (evt as any).layerY);\r\n        this.emit(type, evt, pos);\r\n      } else {\r\n        this.emit(type, evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRelativeCoordinates(absoluteX: number, absoluteY: number) {\r\n    // new hopefully better translation of coordinates\r\n\r\n    const fieldWidth = this.touchArea.offsetWidth / (this.right);\r\n    const fieldHeight = this.touchArea.offsetHeight / (this.bottom);\r\n\r\n    const x = Math.round((absoluteX / fieldWidth + this.left));\r\n    const y = Math.round((absoluteY / fieldHeight + this.top));\r\n\r\n    if (x < 0 || x >= this.config.size || y < 0 || y >= this.config.size) {\r\n      return null;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { FieldObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomFieldObject extends FieldObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n\r\n  constructor(handler: SVGDrawHandler, x = 0, y = 0) {\r\n    super('custom', x, y);\r\n    this.handler = handler;\r\n  }\r\n}\r\n","import { BoardLabelObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomLabelObject extends BoardLabelObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n","import { SVGBoard } from '../../SVGBoard';\r\nimport {\r\n  FieldObject,\r\n  BoardLabelObject,\r\n  BoardMarkupObject,\r\n  BoardObject,\r\n  BoardLineObject,\r\n  BoardViewport,\r\n} from '../../BoardBase';\r\nimport { Color, Point, Label, Vector } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport { SVGBoardObject, SVGDrawHandler, SVGBoardTheme } from '../../SVGBoard/types';\r\nimport SVGCustomFieldObject from '../../SVGBoard/SVGCustomFieldObject';\r\nimport SVGCustomLabelObject from '../../SVGBoard/SVGCustomLabelObject';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport { Circle, Label as SVGLabel } from '../../SVGBoard/svgDrawHandlers';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\n\r\nconst colorsMap: { [key: string]: Color } = {\r\n  B: Color.BLACK,\r\n  W: Color.WHITE,\r\n};\r\n\r\nexport interface SVGBoardComponentConfig {\r\n  coordinates: boolean;\r\n  currentMoveBlackMark: SVGDrawHandler;\r\n  currentMoveWhiteMark: SVGDrawHandler;\r\n  variationDrawHandler: SVGDrawHandler;\r\n  starPoints?: {\r\n    [size: number]: Point[];\r\n  };\r\n  coordinateLabelsX?: string | (string | number)[];\r\n  coordinateLabelsY?: string | (string | number)[];\r\n  highlightCurrentMove: boolean;\r\n  showVariations: boolean;\r\n  showCurrentVariations: boolean;\r\n  theme?: PartialRecursive<SVGBoardTheme>;\r\n}\r\n\r\nexport const defaultSVGBoardComponentConfig: SVGBoardComponentConfig = {\r\n  coordinates: true,\r\n  currentMoveBlackMark: new Circle({ color: 'rgba(255,255,255,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  currentMoveWhiteMark: new Circle({ color: 'rgba(0,0,0,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  variationDrawHandler: new SVGLabel({ color: '#33f' }),\r\n  highlightCurrentMove: true,\r\n  showVariations: true,\r\n  showCurrentVariations: false,\r\n};\r\n\r\nexport default class SVGBoardComponent implements PlayerDOMComponent {\r\n  // Underlying SVG board object\r\n  board: SVGBoard;\r\n  config: SVGBoardComponentConfig;\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n\r\n  // Current board objects for stones - should match the position object of the game\r\n  stoneBoardsObjects: FieldObject[];\r\n\r\n  // Temporary board object, will be removed after each node update\r\n  temporaryBoardObjects: SVGBoardObject[];\r\n\r\n  // Board viewport stack, for efficient reverting of board viewport\r\n  viewportStack: BoardViewport[];\r\n\r\n  boardMouseX: number;\r\n  boardMouseY: number;\r\n\r\n  constructor(config: PartialRecursive<SVGBoardComponentConfig> = {}) {\r\n    this.config = makeConfig(defaultSVGBoardComponentConfig, config);\r\n    this.viewportStack = [];\r\n\r\n    this.applyNodeChanges = this.applyNodeChanges.bind(this);\r\n    this.clearNodeChanges = this.clearNodeChanges.bind(this);\r\n    this.applyMarkupProperty = this.applyMarkupProperty.bind(this);\r\n    this.applyLabelMarkupProperty = this.applyLabelMarkupProperty.bind(this);\r\n    this.applyLineMarkupProperty = this.applyLineMarkupProperty.bind(this);\r\n    this.applyViewportProperty = this.applyViewportProperty.bind(this);\r\n    this.clearViewportProperty = this.clearViewportProperty.bind(this);\r\n    this.applyMoveProperty = this.applyMoveProperty.bind(this);\r\n    this.addTemporaryBoardObject = this.addTemporaryBoardObject.bind(this);\r\n    this.removeTemporaryBoardObject = this.removeTemporaryBoardObject.bind(this);\r\n    this.updateTemporaryBoardObject = this.updateTemporaryBoardObject.bind(this);\r\n    this.setCoordinates = this.setCoordinates.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__board';\r\n\r\n    this.stoneBoardsObjects = [];\r\n    this.temporaryBoardObjects = [];\r\n\r\n    this.board = new SVGBoard(this.element, {\r\n      coordinates: this.config.coordinates,\r\n      starPoints: this.config.starPoints,\r\n      coordinateLabelsX: this.config.coordinateLabelsX,\r\n      coordinateLabelsY: this.config.coordinateLabelsY,\r\n      theme: this.config.theme,\r\n    });\r\n\r\n    this.board.on('click', (event, point) => {\r\n      this.handleBoardClick(point);\r\n    });\r\n\r\n    this.board.on('mousemove', (event, point) => {\r\n      if (!point) {\r\n        if (this.boardMouseX != null) {\r\n          this.boardMouseX = null;\r\n          this.boardMouseY = null;\r\n          this.handleBoardMouseOut();\r\n        }\r\n        return;\r\n      }\r\n      if (point.x !== this.boardMouseX || point.y !== this.boardMouseY) {\r\n        this.boardMouseX = point.x;\r\n        this.boardMouseY = point.y;\r\n        this.handleBoardMouseMove(point);\r\n      }\r\n    });\r\n\r\n    this.board.on('mouseout', (event, point) => {\r\n      if (!point && this.boardMouseX != null) {\r\n        this.boardMouseX = null;\r\n        this.boardMouseY = null;\r\n        this.handleBoardMouseOut();\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // add general node listeners - for setting stones on board based on position\r\n    this.player.on('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.on('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    // temporary board markup listeners - add\r\n    this.player.on('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.DD', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.on('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.on('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    // viewport SGF property listeners\r\n    this.player.on('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.on('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    // add current move marker\r\n    this.player.on('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.on('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.on('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.on('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.on('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.on('board.setCoordinates', this.setCoordinates);\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.DD', this.applyMarkupProperty);\r\n\r\n    this.player.off('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.off('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.off('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    this.player.off('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.off('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    this.player.off('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.off('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.off('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.off('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.off('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.off('board.setCoordinates', this.setCoordinates);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  protected updateStones() {\r\n    // Remove missing stones in current position\r\n    this.stoneBoardsObjects = this.stoneBoardsObjects.filter((boardObject) => {\r\n      if (this.player.game.getStone(boardObject.x, boardObject.y) !== colorsMap[boardObject.type as string]) {\r\n        this.board.removeObject(boardObject);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    // Add new stones from current position\r\n    const position = this.player.game.position;\r\n\r\n    for (let x = 0; x < position.size; x++) {\r\n      for (let y = 0; y < position.size; y++) {\r\n        const c = position.get(x, y);\r\n        if (c && !this.stoneBoardsObjects.some(\r\n          boardObject => boardObject.x === x && boardObject.y === y && c === colorsMap[boardObject.type as string],\r\n        )) {\r\n          const boardObject = new FieldObject(c === Color.B ? 'B' : 'W', x, y);\r\n          this.board.addObject(boardObject);\r\n          this.stoneBoardsObjects.push(boardObject);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected addVariationMarkup() {\r\n    const moves = this.getVariations();\r\n\r\n    if (moves.length > 1) {\r\n      moves.forEach((move, i) => {\r\n        if (move) {\r\n          const obj = new SVGCustomLabelObject(String.fromCodePoint(65 + i), move.x, move.y);\r\n          obj.handler = this.config.variationDrawHandler;\r\n          this.addTemporaryBoardObject(obj);\r\n        }\r\n      });\r\n      if (this.boardMouseX != null) {\r\n        this.handleVariationCursor(this.boardMouseX, this.boardMouseY, moves);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected clearTemporaryBoardObjects() {\r\n    if (this.temporaryBoardObjects.length) {\r\n      this.board.removeObject(this.temporaryBoardObjects);\r\n      this.temporaryBoardObjects = [];\r\n    }\r\n  }\r\n\r\n  protected handleBoardClick(point: Point) {\r\n    this.player.emit('board.click', point);\r\n\r\n    const moves = this.getVariations();\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === point.x && move.y === point.y);\r\n\r\n      if (ind >= 0) {\r\n        if (this.shouldShowCurrentVariations()) {\r\n          this.player.previous();\r\n          this.player.next(ind);\r\n        } else {\r\n          this.player.next(ind);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected handleBoardMouseMove(point: Point) {\r\n    this.player.emit('board.mouseMove', point);\r\n    this.handleVariationCursor(point.x, point.y, this.getVariations());\r\n  }\r\n\r\n  protected handleBoardMouseOut() {\r\n    this.player.emit('board.mouseOut');\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private handleVariationCursor(x: number, y: number, moves: Point[]) {\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === x && move.y === y);\r\n\r\n      if (ind >= 0) {\r\n        this.element.style.cursor = 'pointer';\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private removeVariationCursor() {\r\n    if (this.element.style.cursor) {\r\n      this.element.style.cursor = '';\r\n    }\r\n  }\r\n\r\n  private applyNodeChanges() {\r\n    this.updateStones();\r\n    this.addVariationMarkup();\r\n  }\r\n\r\n  private clearNodeChanges() {\r\n    this.clearTemporaryBoardObjects();\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private applyMarkupProperty(event: LifeCycleEvent<Point[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new BoardMarkupObject(\r\n        event.propIdent,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLabelMarkupProperty(event: LifeCycleEvent<Label[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new BoardLabelObject(\r\n        value.text,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLineMarkupProperty(event: LifeCycleEvent<Vector[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new BoardLineObject(event.propIdent, value[0], value[1]);\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyViewportProperty(event: LifeCycleEvent<Vector>) {\r\n    const currentViewport = this.board.getViewport();\r\n    this.viewportStack.push(currentViewport);\r\n\r\n    if (event.value) {\r\n      const minX = Math.min(event.value[0].x, event.value[1].x);\r\n      const minY = Math.min(event.value[0].y, event.value[1].y);\r\n      const maxX = Math.max(event.value[0].x, event.value[1].x);\r\n      const maxY = Math.max(event.value[0].y, event.value[1].y);\r\n\r\n      this.board.setViewport({\r\n        left: minX,\r\n        top: minY,\r\n        right: this.board.getSize() - maxX - 1,\r\n        bottom: this.board.getSize() - maxY - 1,\r\n      });\r\n    } else {\r\n      this.board.setViewport({\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  private clearViewportProperty() {\r\n    const previousViewport = this.viewportStack.pop();\r\n    if (previousViewport) {\r\n      this.board.setViewport(previousViewport);\r\n    }\r\n  }\r\n\r\n  private applyMoveProperty(event: LifeCycleEvent<Point>) {\r\n    if (this.config.highlightCurrentMove) {\r\n      if (!event.value) {\r\n        // no markup when pass\r\n        return;\r\n      }\r\n      if (isThereMarkup(event.value, this.player.currentNode.properties)) {\r\n        // don't show current move markup, when there is markup in kifu node\r\n        return;\r\n      }\r\n\r\n      if (this.getVariations().length > 1 && this.shouldShowCurrentVariations()) {\r\n        // don't show current move markup, if there is multiple variations and \"show current variations\" style set\r\n        return;\r\n      }\r\n\r\n      // add current move mark\r\n      const boardMarkup = new SVGCustomFieldObject(\r\n        event.propIdent === 'B' ? this.config.currentMoveBlackMark : this.config.currentMoveWhiteMark,\r\n        event.value.x,\r\n        event.value.y,\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    }\r\n  }\r\n\r\n  addTemporaryBoardObject(obj: BoardObject) {\r\n    this.temporaryBoardObjects.push(obj);\r\n    this.board.addObject(obj);\r\n  }\r\n\r\n  removeTemporaryBoardObject(obj: FieldObject) {\r\n    this.temporaryBoardObjects = this.temporaryBoardObjects.filter(o => o !== obj);\r\n    this.board.removeObject(obj);\r\n  }\r\n\r\n  updateTemporaryBoardObject(obj: FieldObject) {\r\n    this.board.updateObject(obj);\r\n  }\r\n\r\n  setCoordinates(b: boolean) {\r\n    this.config.coordinates = b;\r\n    this.board.setCoordinates(b);\r\n  }\r\n\r\n  getVariations(): Point[] {\r\n    if (this.shouldShowVariations()) {\r\n      if (this.shouldShowCurrentVariations()) {\r\n        if (this.player.currentNode.parent) {\r\n          return this.player.currentNode.parent.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n        }\r\n      } else {\r\n        return this.player.currentNode.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  shouldShowVariations() {\r\n    // look in kifu, whether to show variation markup\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !(st & 2);\r\n    }\r\n\r\n    // otherwise use configuration value\r\n    return this.config.showVariations;\r\n  }\r\n\r\n  shouldShowCurrentVariations() {\r\n    // in edit mode not possible\r\n    // if (this.editMode) {\r\n    //   return false;\r\n    // }\r\n\r\n    // look at variation style in kifu\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !!(st & 1);\r\n    }\r\n\r\n    // or use variation style from configuration\r\n    return this.config.showCurrentVariations;\r\n  }\r\n}\r\n\r\nfunction samePoint(p1: Point, p2: any) {\r\n  return p2 && p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\nfunction isThereMarkup(field: Point, properties: { [key: string]: any }) {\r\n  const propIdents = Object.keys(properties);\r\n\r\n  for (let i = 0; i < propIdents.length; i++) {\r\n    if (propIdents[i] === 'B' || propIdents[i] === 'W') {\r\n      continue;\r\n    }\r\n\r\n    const value = properties[propIdents[i]];\r\n    if (Array.isArray(value)) {\r\n      for (let j = 0; j < value.length; j++) {\r\n        if (samePoint(field, value[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    } else if (samePoint(field, value)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { BoardMarkupObject } from '../../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface CommentBoxConfig {\r\n  formatMoves: boolean;\r\n  formatNicks: boolean;\r\n}\r\n\r\nexport const commentBoxDefaultConfig = {\r\n  formatMoves: true,\r\n  formatNicks: true,\r\n};\r\n\r\nexport default class CommentsBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  commentsElement: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: CommentBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<CommentBoxConfig> = {}) {\r\n    this.config = makeConfig(commentBoxDefaultConfig, config);\r\n    this.setComments = this.setComments.bind(this);\r\n    this.clearComments = this.clearComments.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content wgo-player__box--stretch';\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Comments';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    this.commentsElement = document.createElement('div');\r\n    this.commentsElement.className = 'wgo-player__box__content';\r\n    this.element.appendChild(this.commentsElement);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    this.player.on('applyNodeChanges.C', this.setComments);\r\n    this.player.on('clearNodeChanges.C', this.clearComments);\r\n\r\n    if (this.player.currentNode) {\r\n      const comment = this.player.currentNode.getProperty('C');\r\n      if (comment) {\r\n        this.setComments({ value: comment });\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges.C', this.setComments);\r\n    this.player.off('clearNodeChanges.C', this.clearComments);\r\n    this.player = null;\r\n  }\r\n\r\n  setComments(event: { value: string }) {\r\n    this.commentsElement.innerHTML = this.formatComment(event.value);\r\n\r\n    if (this.config.formatMoves) {\r\n      [].forEach.call(this.commentsElement.querySelectorAll('.wgo-player__move-link'), (link: HTMLElement) => {\r\n        const point = coordinatesToPoint(link.textContent, this.player.game.size);\r\n        const boardObject = new BoardMarkupObject('MA', point.x, point.y, this.player.game.getStone(point.x, point.y));\r\n        boardObject.zIndex = 20;\r\n\r\n        link.addEventListener('mouseenter', () => {\r\n          this.player.emit('board.addTemporaryObject', boardObject);\r\n        });\r\n\r\n        link.addEventListener('mouseleave', () => {\r\n          this.player.emit('board.removeTemporaryObject', boardObject);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  clearComments() {\r\n    this.commentsElement.textContent = '';\r\n  }\r\n\r\n  formatComment(text: string) {\r\n    // remove HTML tags from text\r\n    let formattedText = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n\r\n    // divide text into paragraphs\r\n    formattedText = `<p>${formattedText.replace(/\\n/g, '</p><p>')}</p>`;\r\n\r\n    if (this.config.formatNicks) {\r\n      formattedText = formattedText.replace(/(<p>)([^:]{3,}:)\\s/g, '<p><span class=\"wgo-player__nick\">$2</span> ');\r\n    }\r\n\r\n    if (this.config.formatMoves) {\r\n      // tslint:disable-next-line:max-line-length\r\n      formattedText = formattedText.replace(/\\b[a-zA-Z]1?\\d\\b/g, '<a href=\"javascript:void(0)\" class=\"wgo-player__move-link\">$&</a>');\r\n    }\r\n\r\n    return formattedText;\r\n  }\r\n}\r\n\r\nfunction coordinatesToPoint(coordinates: string, boardSize: number) {\r\n  const x = coordinates.toLowerCase().charCodeAt(0) - 97; // char code of \"a\"\r\n  const y = parseInt(coordinates.substr(1), 10) - 1;\r\n  return { x, y: boardSize - 1 - y };\r\n}\r\n","import makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface GameInfoBoxConfig {\r\n  gameInfoProperties: { [key: string]: string };\r\n  stretch: boolean;\r\n}\r\n\r\nexport const gameInfoBoxDefaultConfig = {\r\n  gameInfoProperties: {\r\n    DT: 'Date',\r\n    KM: 'Komi',\r\n    HA: 'Handicap',\r\n    AN: 'Annotations',\r\n    CP: 'Copyright',\r\n    GC: 'Game comments',\r\n    GN: 'Game name',\r\n    ON: 'Fuseki',\r\n    OT: 'Overtime',\r\n    TM: 'Basic time',\r\n    RE: 'Result',\r\n    RO: 'Round',\r\n    RU: 'Rules',\r\n    US: 'Recorder',\r\n    PC: 'Place',\r\n    EV: 'Event',\r\n    SO: 'Source',\r\n  },\r\n  stretch: false,\r\n};\r\n\r\nexport default class GameInfoBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  infoTable: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: GameInfoBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<GameInfoBoxConfig> = {}) {\r\n    this.config = makeConfig(gameInfoBoxDefaultConfig, config);\r\n    this.printInfo = this.printInfo.bind(this);\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content';\r\n\r\n    if (this.config.stretch) {\r\n      this.element.className = `${this.element.className} wgo-player__box--stretch`;\r\n    }\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Game information';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    this.infoTable = document.createElement('table');\r\n    this.infoTable.className = 'wgo-player__box__game-info';\r\n    this.element.appendChild(this.infoTable);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('beforeInit', this.printInfo);\r\n    this.printInfo();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('beforeInit', this.printInfo);\r\n    this.player = null;\r\n  }\r\n\r\n  addInfo(propIdent: string, value: string) {\r\n    const row = document.createElement('tr');\r\n    row.dataset.propIdent = propIdent;\r\n    this.infoTable.appendChild(row);\r\n\r\n    const label = document.createElement('th');\r\n    label.textContent = this.config.gameInfoProperties[propIdent];\r\n    row.appendChild(label);\r\n\r\n    const valueElement = document.createElement('td');\r\n    valueElement.textContent = value;\r\n    row.appendChild(valueElement);\r\n  }\r\n\r\n  removeInfo(propIdent: string) {\r\n    const elem = this.infoTable.querySelector(`[data-id='${propIdent}']`);\r\n    this.infoTable.removeChild(elem);\r\n  }\r\n\r\n  printInfo() {\r\n    this.infoTable.innerHTML = '';\r\n    if (this.player.rootNode) {\r\n      this.player.rootNode.forEachProperty((propIdent, value) => {\r\n        if (this.config.gameInfoProperties[propIdent]) {\r\n          this.addInfo(propIdent, value);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { FieldObject } from '../../BoardBase';\r\nimport KifuNode, { Path } from '../../kifu/KifuNode';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../../types';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerBase from '../PlayerBase';\r\nimport PlayerPlugin from '../PlayerPlugin';\r\n\r\ninterface EditModeConfig {\r\n  /**\r\n   * Set true, if edit mode should be enabled during player initialization.\r\n   * Default value: `false`\r\n   */\r\n  enabled: boolean;\r\n\r\n  /**\r\n   * Set true, to show variation markup during edit mode. This overrides SGF and player config.\r\n   * Default value: `true`\r\n   */\r\n  showVariations: boolean;\r\n}\r\n\r\ninterface GameState {\r\n  rootNode: KifuNode;\r\n  path: Path;\r\n}\r\n\r\nconst defaultEditModeConfig = {\r\n  enabled: false,\r\n  showVariations: true,\r\n};\r\n\r\n/**\r\n * Edit mode plugin. It allows to edit game kifu without changing it - when edit mode is disabled\r\n * all changes are reverted. It provides event `editMode.change` to enable/disable edit mode.\r\n * It contains integration with board via these events:\r\n * - board.updateTemporaryObject\r\n * - board.addTemporaryObject\r\n * - board.removeTemporaryObject\r\n * - board.mouseMove\r\n * - board.mouseOut\r\n * - board.click\r\n */\r\nexport default class EditMode implements PlayerPlugin {\r\n  config: EditModeConfig;\r\n  player: PlayerBase;\r\n\r\n  private gameStateStack: GameState[] = [];\r\n\r\n  private _boardMouseMoveEvent: Function;\r\n  private _boardMouseOutEvent: Function;\r\n  private _boardClickEvent: Function;\r\n  private _nodeChange: Function;\r\n\r\n  constructor(config: PartialRecursive<EditModeConfig> = {}) {\r\n    this.config = makeConfig(defaultEditModeConfig, config);\r\n  }\r\n\r\n  apply(player: PlayerBase) {\r\n    if (this.player) {\r\n      throw new Error('This plugin instance has already been applied to a player object.');\r\n    }\r\n\r\n    this.player = player;\r\n    this.player.on('editMode.change', this.handleChange);\r\n\r\n    if (this.config.enabled) {\r\n      this.enable();\r\n    }\r\n  }\r\n\r\n  /*public destroy() {\r\n    this.player.off('editMode.change', this.handleChange);\r\n  }*/\r\n\r\n  /**\r\n   * Enable/disable edit mode. Event `editMode.change` is triggered.\r\n   *\r\n   * @param value\r\n   */\r\n  setEnabled(value: boolean) {\r\n    if (value !== this.config.enabled) {\r\n      this.player.emit('editMode.change', value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play move if edit mode is enabled. This move will be discarded, when edit mode is disabled.\r\n   *\r\n   * @param point\r\n   */\r\n  play(point: Point) {\r\n    if (!this.config.enabled) {\r\n      return;\r\n    }\r\n\r\n    // check, whether some of the next node contains this move\r\n    for (let i = 0; i < this.player.currentNode.children.length; i++) {\r\n      const childNode = this.player.currentNode.children[i];\r\n      const move = childNode.getProperty('B') || childNode.getProperty('W');\r\n      if (move.x === point.x && move.y === point.y) {\r\n        this.player.next(i);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // otherwise play if valid\r\n    if (this.player.game.isValid(point.x, point.y)) {\r\n      this.player.play(point.x, point.y);\r\n    }\r\n  }\r\n\r\n  private handleChange = (value: boolean) => {\r\n    if (value && !this.config.enabled) {\r\n      this.enable();\r\n    } else if (!value && this.config.enabled) {\r\n      this.disable();\r\n    }\r\n  }\r\n\r\n  private enable() {\r\n    this.saveGameState();\r\n    if (this.config.showVariations) {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 0);\r\n    } else {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 2);\r\n    }\r\n    this.config.enabled = true;\r\n\r\n    let lastX = -1;\r\n    let lastY = -1;\r\n\r\n    const blackStone = new FieldObject('B');\r\n    blackStone.opacity = 0.35;\r\n\r\n    const whiteStone = new FieldObject('W');\r\n    whiteStone.opacity = 0.35;\r\n\r\n    let addedStone: FieldObject = null;\r\n\r\n    this._boardMouseMoveEvent = (p: Point) => {\r\n      if (lastX !== p.x || lastY !== p.y) {\r\n        if (this.player.game.isValid(p.x, p.y)) {\r\n          const boardObject = this.player.game.turn === Color.BLACK ? blackStone : whiteStone;\r\n          boardObject.setPosition(p.x, p.y);\r\n\r\n          if (addedStone) {\r\n            this.player.emit('board.updateTemporaryObject', boardObject);\r\n          } else {\r\n            this.player.emit('board.addTemporaryObject', boardObject);\r\n            addedStone = boardObject;\r\n          }\r\n\r\n        } else {\r\n          this._boardMouseOutEvent();\r\n        }\r\n        lastX = p.x;\r\n        lastY = p.y;\r\n      }\r\n    };\r\n\r\n    this._boardMouseOutEvent = () => {\r\n      if (addedStone) {\r\n        this.player.emit('board.removeTemporaryObject', addedStone);\r\n        addedStone = null;\r\n      }\r\n      lastX = -1;\r\n      lastY = -1;\r\n    };\r\n\r\n    this._boardClickEvent = (p: Point) => {\r\n      this._boardMouseOutEvent();\r\n\r\n      if (p == null) {\r\n        return;\r\n      }\r\n\r\n      this.play(p);\r\n    };\r\n\r\n    this._nodeChange = () => {\r\n      const current = { x: lastX, y: lastY };\r\n      this._boardMouseOutEvent();\r\n      this._boardMouseMoveEvent(current);\r\n    };\r\n\r\n    this.player.on('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.on('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.on('board.click', this._boardClickEvent);\r\n\r\n    this.player.on('applyNodeChanges', this._nodeChange);\r\n  }\r\n\r\n  private disable() {\r\n    this.player.off('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.off('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.off('board.click', this._boardClickEvent);\r\n\r\n    this.player.off('applyNodeChanges', this._nodeChange);\r\n\r\n    this.config.enabled = false;\r\n    this.restoreGameState();\r\n  }\r\n\r\n  /**\r\n   * Saves current player game state - Kifu and path object.\r\n   */\r\n  private saveGameState() {\r\n    this.gameStateStack.push({\r\n      rootNode: this.player.rootNode.cloneNode(),\r\n      path: this.player.getCurrentPath(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restores player from previously saved state.\r\n   */\r\n  private restoreGameState() {\r\n    const lastState = this.gameStateStack.pop();\r\n    if (lastState) {\r\n      // revert all node changes\r\n      this.player.first();\r\n\r\n      // load stored kifu\r\n      this.player.loadKifu(lastState.rootNode);\r\n\r\n      // go to stored path\r\n      this.player.goTo(lastState.path);\r\n    }\r\n  }\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport default class Container implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  children: PlayerDOMComponent[];\r\n  direction: string;\r\n\r\n  constructor(direction: string, children: PlayerDOMComponent[] = []) {\r\n    this.direction = direction;\r\n    this.children = children;\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = `wgo-player__container wgo-player__container--${this.direction}`;\r\n    this.children.forEach(child => this.element.appendChild(child.element));\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.children.forEach(child => child.create(player));\r\n  }\r\n\r\n  destroy() {\r\n    this.children.forEach(child => typeof child.destroy === 'function' && child.destroy());\r\n  }\r\n}\r\n","import { SVGBoardComponent } from '.';\r\nimport { PlayerBase } from '../../PlayerBase';\r\nimport { EditMode } from '../../PlayerBase/plugins';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface MenuItem {\r\n  /** Title of the menu item. */\r\n  name: string;\r\n\r\n  /** If true, there can be check state of the menu item. */\r\n  checkable?: boolean;\r\n\r\n  /** Function executed upon click. If checkable, should return new check state. */\r\n  handleClick(): boolean | void;\r\n\r\n  /** If checkable, function which return initial check state. */\r\n  defaultChecked?(): boolean;\r\n}\r\n\r\ninterface ControlPanelConfig {\r\n  menuItems: MenuItem[];\r\n}\r\n\r\nconst defaultConfig: ControlPanelConfig = {\r\n  menuItems: [],\r\n};\r\n\r\nexport default class ControlPanel implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  moveNumber: HTMLInputElement;\r\n  first: HTMLButtonElement;\r\n  previous: HTMLButtonElement;\r\n  next: HTMLButtonElement;\r\n  last: HTMLButtonElement;\r\n  config: ControlPanelConfig;\r\n\r\n  constructor(config: PartialRecursive<ControlPanelConfig> = {}) {\r\n    this.config = makeConfig(defaultConfig, config);\r\n    this.update = this.update.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__control-panel';\r\n\r\n    const buttonGroup = document.createElement('form');\r\n    buttonGroup.className = 'wgo-player__button-group';\r\n    this.element.appendChild(buttonGroup);\r\n    buttonGroup.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n\r\n    this.first = document.createElement('button');\r\n    this.first.type = 'button';\r\n    this.first.className = 'wgo-player__button';\r\n    this.first.innerHTML = '<span class=\"wgo-player__icon-to-end wgo-player__icon--reverse\"></span>';\r\n    this.first.addEventListener('click', () => this.player.first());\r\n    buttonGroup.appendChild(this.first);\r\n\r\n    this.previous = document.createElement('button');\r\n    this.previous.type = 'button';\r\n    this.previous.className = 'wgo-player__button';\r\n    this.previous.innerHTML = '<span class=\"wgo-player__icon-play wgo-player__icon--reverse\"></span>';\r\n    this.previous.addEventListener('click', () => this.player.previous());\r\n    buttonGroup.appendChild(this.previous);\r\n\r\n    this.moveNumber = document.createElement('input');\r\n    this.moveNumber.className = 'wgo-player__button wgo-player__move-number';\r\n    this.moveNumber.value = '0';\r\n    this.moveNumber.addEventListener('blur', (e) => {\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n    buttonGroup.appendChild(this.moveNumber);\r\n\r\n    this.next = document.createElement('button');\r\n    this.next.type = 'button';\r\n    this.next.className = 'wgo-player__button';\r\n    this.next.innerHTML = '<span class=\"wgo-player__icon-play\"></span>';\r\n    this.next.addEventListener('click', () => this.player.next());\r\n    buttonGroup.appendChild(this.next);\r\n\r\n    this.last = document.createElement('button');\r\n    this.last.type = 'button';\r\n    this.last.className = 'wgo-player__button';\r\n    this.last.innerHTML = '<span class=\"wgo-player__icon-to-end\"></span>';\r\n    this.last.addEventListener('click', () => this.player.last());\r\n    buttonGroup.appendChild(this.last);\r\n\r\n    if (this.config.menuItems.length) {\r\n      const menuWrapper = document.createElement('div');\r\n      menuWrapper.className = 'wgo-player__menu-wrapper';\r\n      this.element.appendChild(menuWrapper);\r\n\r\n      const menuButton = document.createElement('button');\r\n      menuButton.type = 'button';\r\n      menuButton.className = 'wgo-player__button wgo-player__button--menu';\r\n      menuButton.innerHTML = '<span class=\"wgo-player__icon-menu\"></span>';\r\n      menuWrapper.appendChild(menuButton);\r\n\r\n      const menu = document.createElement('div');\r\n      menu.className = 'wgo-player__menu';\r\n      this.createMenuItems(menu);\r\n      menuWrapper.appendChild(menu);\r\n    }\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('applyNodeChanges', this.update);\r\n\r\n    if (this.player.currentNode) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.update);\r\n    this.player = null;\r\n  }\r\n\r\n  update() {\r\n    this.moveNumber.value = String(this.player.getCurrentPath().depth);\r\n\r\n    if (!this.player.currentNode.parent) {\r\n      this.first.disabled = true;\r\n      this.previous.disabled = true;\r\n    } else {\r\n      this.first.disabled = false;\r\n      this.previous.disabled = false;\r\n    }\r\n\r\n    if (this.player.currentNode.children.length === 0) {\r\n      this.next.disabled = true;\r\n      this.last.disabled = true;\r\n    } else {\r\n      this.next.disabled = false;\r\n      this.last.disabled = false;\r\n    }\r\n  }\r\n\r\n  createMenuItems(menu: HTMLElement) {\r\n    this.config.menuItems.forEach((menuItem) => {\r\n      const menuItemElement = document.createElement('a');\r\n      menuItemElement.className = 'wgo-player__menu-item';\r\n      menuItemElement.tabIndex = 0;\r\n      menuItemElement.textContent = menuItem.name;\r\n      menuItemElement.href = 'javascript: void(0)';\r\n\r\n      if (menuItem.defaultChecked && menuItem.defaultChecked()) {\r\n        menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n      }\r\n\r\n      menuItemElement.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        const res = menuItem.handleClick();\r\n\r\n        if (menuItem.checkable) {\r\n          if (!res) {\r\n            menuItemElement.classList.remove('wgo-player__menu-item--checked');\r\n          } else {\r\n            menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n          }\r\n        }\r\n\r\n        menuItemElement.blur();\r\n      });\r\n\r\n      menu.appendChild(menuItemElement);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Some common menu items, probably just temporary.\r\n   */\r\n  static menuItems = {\r\n    /** Renders menu item with SGF download link */\r\n    download: (player: PlayerBase) => ({\r\n      name: 'Download SGF',\r\n      handleClick() {\r\n        const name = player.rootNode.getProperty(PropIdent.GAME_NAME) || 'game';\r\n        const sgf = player.rootNode.toSGF();\r\n\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', `data:application/x-go-sgf;charset=utf-8,${encodeURIComponent(sgf)}`);\r\n        element.setAttribute('download', `${name}.sgf`);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n      },\r\n    }),\r\n\r\n    /** Renders menu item to toggle coordinates of SVGBoardComponent */\r\n    displayCoordinates: (boardComponent: SVGBoardComponent) => ({\r\n      name: 'Display coordinates',\r\n      checkable: true,\r\n      handleClick() {\r\n        boardComponent.setCoordinates(!boardComponent.config.coordinates);\r\n        return boardComponent.config.coordinates;\r\n      },\r\n      defaultChecked: () => boardComponent.config.coordinates,\r\n    }),\r\n\r\n    /** Renders menu item to toggle edit mode (using EditMode plugin) */\r\n    editMode: (editMode: EditMode) => ({\r\n      name: 'Edit mode',\r\n      checkable: true,\r\n      handleClick() {\r\n        editMode.setEnabled(!editMode.config.enabled);\r\n        return editMode.config.enabled;\r\n      },\r\n      defaultChecked: () => editMode.config.enabled,\r\n    }),\r\n  };\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface ResponsiveComponentParams {\r\n  minWidth?: number;\r\n  maxWidth?: number;\r\n  minHeight?: number;\r\n  maxHeight?: number;\r\n  orientation?: 'portrait' | 'landscape';\r\n}\r\n\r\nexport default class ResponsiveComponent implements PlayerDOMComponent {\r\n  element: Node;\r\n  player: PlayerDOM;\r\n  visible: boolean;\r\n\r\n  constructor(private params: ResponsiveComponentParams, private component: PlayerDOMComponent) {\r\n    this.resize = this.resize.bind(this);\r\n    this.visible = true;\r\n    this.element = this.component.element;\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('resize', this.resize);\r\n    this.component.create(this.player);\r\n\r\n    this.resize();\r\n  }\r\n\r\n  resize() {\r\n    const shouldRenderComponent = this.shouldRenderComponent();\r\n\r\n    if (this.visible && !shouldRenderComponent) {\r\n      // replace component element by placeholder\r\n      const placeholder = this.createPlaceholder();\r\n      this.element.parentElement.replaceChild(placeholder, this.element);\r\n      this.element = placeholder;\r\n      this.visible = false;\r\n    } else if (!this.visible && shouldRenderComponent) {\r\n      // replaces placeholder by component element\r\n      const componentElement = this.component.element;\r\n      this.element.parentElement.replaceChild(componentElement, this.element);\r\n      this.element = componentElement;\r\n      this.visible = true;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('resize', this.resize);\r\n    this.player = null;\r\n\r\n    if (typeof this.component.destroy === 'function') {\r\n      this.component.destroy();\r\n    }\r\n  }\r\n\r\n  private shouldRenderComponent() {\r\n    const width = this.element.parentElement.offsetWidth;\r\n    const height = this.element.parentElement.offsetHeight;\r\n\r\n    if (this.params.minWidth != null && this.params.minWidth > width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.minHeight != null && this.params.minHeight > height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxWidth != null && this.params.maxWidth < width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxHeight != null && this.params.maxHeight < height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.orientation === 'portrait' && width < height) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createPlaceholder() {\r\n    // tslint:disable-next-line:max-line-length\r\n    return document.createComment(` WGo component placeholder for ${this.component.constructor ? this.component.constructor.name : 'unknown'} ${JSON.stringify(this.params)} `);\r\n  }\r\n}\r\n","import { Color } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport { PlayerDOM } from '../..';\r\n\r\nexport default class PlayerTag implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  color: Color;\r\n  colorChar: 'B' | 'W';\r\n  colorName: 'black' | 'white';\r\n  playerNameElement: HTMLElement;\r\n  playerRankElement: HTMLElement;\r\n  playerTeamElement: HTMLElement;\r\n  playerCapsElement: HTMLElement;\r\n\r\n  constructor(color: Color.B | Color.W) {\r\n    this.color = color;\r\n    this.colorChar = color === Color.B ? 'B' : 'W';\r\n    this.colorName = color === Color.B ? 'black' : 'white';\r\n\r\n    this.setName = this.setName.bind(this);\r\n    this.setRank = this.setRank.bind(this);\r\n    this.setTeam = this.setTeam.bind(this);\r\n    this.setCaps = this.setCaps.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__player-tag';\r\n\r\n    const playerElement = document.createElement('div');\r\n    playerElement.className = 'wgo-player__player-tag__name';\r\n    this.element.appendChild(playerElement);\r\n\r\n    this.playerNameElement = document.createElement('span');\r\n    playerElement.appendChild(this.playerNameElement);\r\n\r\n    this.playerRankElement = document.createElement('small');\r\n    this.playerRankElement.className = 'wgo-player__player-tag__name__rank';\r\n    playerElement.appendChild(this.playerRankElement);\r\n\r\n    this.playerCapsElement = document.createElement('div');\r\n    this.playerCapsElement.className = `wgo-player__player-tag__color wgo-player__player-tag__color--${this.colorName}`;\r\n    this.playerCapsElement.textContent = '0';\r\n    this.element.appendChild(this.playerCapsElement);\r\n\r\n    // todo team\r\n    this.playerTeamElement = document.createElement('div');\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // attach Kifu listeners\r\n    this.player.on(`beforeInit.P${this.colorChar}`, this.setName); // property PB or PW\r\n    this.player.on(`beforeInit.${this.colorChar}R`, this.setRank); // property BR or WR\r\n    this.player.on(`beforeInit.${this.colorChar}T`, this.setTeam); // property BT or WT\r\n    this.player.on('applyNodeChanges', this.setCaps);\r\n\r\n    // set current (probably initial) values\r\n    this.initialSet();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off(`beforeInit.P${this.colorChar}`, this.setName);\r\n    this.player.off(`beforeInit.${this.colorChar}R`, this.setRank);\r\n    this.player.off(`beforeInit.${this.colorChar}T`, this.setTeam);\r\n    this.player.off('applyNodeChanges', this.setCaps);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  setName(event: LifeCycleEvent<string>) {\r\n    this.playerNameElement.textContent = event.value || this.colorName;\r\n  }\r\n\r\n  setRank(event: LifeCycleEvent<string>) {\r\n    this.playerRankElement.textContent = event.value;\r\n  }\r\n\r\n  setTeam(event: LifeCycleEvent<string>) {\r\n    this.playerTeamElement.textContent = event.value;\r\n  }\r\n\r\n  setCaps() {\r\n    this.playerCapsElement.textContent = this.player.game.position.capCount[this.colorName].toString();\r\n  }\r\n\r\n  private initialSet() {\r\n    if (this.player.rootNode) {\r\n      this.playerNameElement.textContent = this.player.rootNode.getProperty(`P${this.colorChar}`) || this.colorName;\r\n      this.playerRankElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}R`) || '';\r\n      this.playerTeamElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}T`) || '';\r\n    }\r\n    if (this.player.game) {\r\n      this.setCaps();\r\n    }\r\n  }\r\n}\r\n","import makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Color } from '../types';\r\nimport PlayerDOM, { PlayerDOMConfig, playerDOMDefaultConfig } from '../PlayerDOM/PlayerDOM';\r\nimport SVGBoardComponent, {\r\n  defaultSVGBoardComponentConfig,\r\n  SVGBoardComponentConfig,\r\n} from '../PlayerDOM/components/SVGBoardComponent';\r\nimport CommentsBox, { CommentBoxConfig, commentBoxDefaultConfig } from '../PlayerDOM/components/CommentsBox';\r\nimport GameInfoBox, { GameInfoBoxConfig, gameInfoBoxDefaultConfig } from '../PlayerDOM/components/GameInfoBox';\r\nimport { EditMode } from '../PlayerBase/plugins';\r\nimport { Container, ControlPanel, PlayerTag, ResponsiveComponent } from '../PlayerDOM/components';\r\nimport KifuNode from '../kifu/KifuNode';\r\n\r\ninterface SimplePlayerConfig extends PlayerDOMConfig {\r\n  board: SVGBoardComponentConfig;\r\n  comments: CommentBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  gameInfo: GameInfoBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  sgfFile: string | null;\r\n  sgf: string | null;\r\n}\r\n\r\nconst defaultConfig: SimplePlayerConfig = {\r\n  ...playerDOMDefaultConfig,\r\n  board: defaultSVGBoardComponentConfig,\r\n  comments: {\r\n    enabled: true,\r\n    ...commentBoxDefaultConfig,\r\n  },\r\n  gameInfo: {\r\n    enabled: true,\r\n    ...gameInfoBoxDefaultConfig,\r\n  },\r\n  sgfFile: null,\r\n  sgf: null,\r\n};\r\n\r\nexport default class SimplePlayer extends PlayerDOM {\r\n  element: HTMLElement;\r\n  config: SimplePlayerConfig;\r\n\r\n  constructor(elem: HTMLElement, config: PartialRecursive<SimplePlayerConfig> = {}) {\r\n    super();\r\n\r\n    // TODO - already partially done in PlayerDOM\r\n    this.config = makeConfig(defaultConfig, config);\r\n\r\n    this.element = elem;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const editMode = new EditMode();\r\n    this.use(editMode);\r\n\r\n    const svgBoardComponent = new SVGBoardComponent(this.config.board);\r\n\r\n    const controlPanelConfig = {\r\n      menuItems: [\r\n        ControlPanel.menuItems.editMode(editMode),\r\n        ControlPanel.menuItems.displayCoordinates(svgBoardComponent),\r\n        ControlPanel.menuItems.download(this),\r\n      ],\r\n    };\r\n\r\n    const component = new Container('column', [\r\n      new ResponsiveComponent({ maxWidth: 749 }, new Container('row', [\r\n        new PlayerTag(Color.B),\r\n        new PlayerTag(Color.W),\r\n      ])),\r\n      new Container('row', [\r\n        svgBoardComponent,\r\n        new ResponsiveComponent({ minWidth: 650 }, new Container('column', [\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.B)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.W)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new ControlPanel(controlPanelConfig)),\r\n          new GameInfoBox(this.config.gameInfo),\r\n          new CommentsBox(this.config.comments),\r\n        ])),\r\n      ]),\r\n      new ResponsiveComponent({ maxWidth: 749 }, new ControlPanel(controlPanelConfig)),\r\n      new ResponsiveComponent({ maxWidth: 649 }, new CommentsBox(this.config.comments)),\r\n    ]);\r\n\r\n    this.render(component, this.element);\r\n\r\n    if (this.config.sgf) {\r\n      this.loadKifu(KifuNode.fromSGF(this.config.sgf));\r\n    } else if (this.config.sgfFile) {\r\n      // TODO add some loading overlay and error state\r\n      fetch(this.config.sgfFile).then(\r\n        response => response.text(),\r\n      ).then(\r\n        value => this.loadKifu(KifuNode.fromSGF(value)),\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}