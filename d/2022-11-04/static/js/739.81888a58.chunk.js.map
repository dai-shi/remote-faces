{"version":3,"file":"static/js/739.81888a58.chunk.js","mappings":"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","sources":["../../node_modules/wgo/src/types.ts","../../node_modules/wgo/src/SGFParser/SGFSyntaxError.ts","../../node_modules/wgo/src/SGFParser/SGFParser.ts","../../node_modules/wgo/src/kifu/propertyValueTypes.ts","../../node_modules/wgo/src/kifu/KifuNode.ts","../../node_modules/wgo/src/Game/rules.ts","../../node_modules/wgo/src/Game/Position.ts","../../node_modules/wgo/src/Game/Game.ts","../../node_modules/wgo/src/BoardBase/BoardObject.ts","../../node_modules/wgo/src/BoardBase/FieldBoardObject.ts","../../node_modules/wgo/src/BoardBase/MarkupBoardObject.ts","../../node_modules/wgo/src/BoardBase/LabelBoardObject.ts","../../node_modules/wgo/src/BoardBase/LineBoardObject.ts","../../node_modules/wgo/src/utils/EventEmitter.ts","../../node_modules/wgo/src/utils/makeConfig.ts","../../node_modules/wgo/src/BoardBase/defaultConfig.ts","../../node_modules/wgo/src/BoardBase/BoardBase.ts","../../node_modules/wgo/src/SVGBoard/types.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Arrow.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGFieldDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGMarkupDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Circle.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Dim.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Dot.ts","../../node_modules/wgo/src/SVGBoard/generateId.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGStoneDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/GlassStoneBlack.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/GlassStoneWhite.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Label.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Line.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/ModernStoneBlack.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/ModernStoneWhite.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/RealisticStone.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SimpleStone.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Square.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Triangle.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/XMark.ts","../../node_modules/wgo/src/SVGBoard/createGrid.ts","../../node_modules/wgo/src/SVGBoard/createCoordinates.ts","../../node_modules/wgo/src/SVGBoard/defaultSVGTheme.ts","../../node_modules/wgo/src/SGFParser/sgfTypes.ts","../../node_modules/wgo/src/SVGBoard/SVGBoard.ts","../../node_modules/wgo/src/PlayerBase/basePropertyListeners.ts","../../node_modules/wgo/src/PlayerBase/PlayerBase.ts","../../node_modules/wgo/src/PlayerBase/plugins/EditMode.ts","../../node_modules/wgo/src/PlayerDOM/PlayerDOM.ts","../../node_modules/wgo/src/PlayerDOM/components/Container.ts","../../node_modules/wgo/src/PlayerDOM/components/GameInfoBox.ts","../../node_modules/wgo/src/PlayerDOM/components/ControlPanel.ts","../../node_modules/wgo/src/SVGBoard/SVGCustomFieldBoardObject.ts","../../node_modules/wgo/src/SVGBoard/SVGCustomLabelBoardObject.ts","../../node_modules/wgo/src/PlayerDOM/components/SVGBoardComponent.ts","../../node_modules/wgo/src/PlayerDOM/components/ResponsiveComponent.ts","../../node_modules/wgo/src/PlayerDOM/components/CommentsBox.ts","../../node_modules/wgo/src/PlayerDOM/components/PlayerTag.ts","../../node_modules/wgo/src/SimplePlayer/SimplePlayer.ts"],"sourcesContent":["/**\r\n * Enumeration representing stone color, can be used for representing board position.\r\n */\r\nexport enum Color {\r\n  BLACK = 1,\r\n  B = 1,\r\n  WHITE = -1,\r\n  W = -1,\r\n  EMPTY = 0,\r\n  E = 0,\r\n}\r\n\r\n/**\r\n * Simple 2 dimensional vector for referencing field on the board.\r\n */\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport type Vector = Point[];\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface Field extends Point {\r\n  c: Color;\r\n}\r\n\r\nexport interface Move extends Point {\r\n  c: Color.BLACK | Color.WHITE;\r\n}\r\n","import SGFParser from './SGFParser';\r\n\r\n/**\r\n * Class for syntax errors in SGF string.\r\n * @ extends Error\r\n */\r\nexport class SGFSyntaxError extends Error {\r\n  // tslint:disable-next-line:variable-name\r\n  __proto__: Error;\r\n\r\n  constructor(message: string, parser?: SGFParser) {\r\n    super(message);\r\n    this.__proto__ = new.target.prototype;\r\n\r\n    // var tempError = Error.apply(this);\r\n    this.name = this.name = 'SGFSyntaxError';\r\n    this.message = message || 'There was an unspecified syntax error in the SGF';\r\n\r\n    if (parser) {\r\n      this.message += ` on line ${parser.lineNo}, char ${parser.charNo}:\\n`;\r\n      this.message += `\\t${parser.sgfString.split('\\n')[parser.lineNo - 1]}\\n`;\r\n      this.message += `\\t${Array(parser.charNo + 1).join(' ')}^`;\r\n    }\r\n  }\r\n}\r\n\r\n// a small ES5 hack because currently in ES6 you can't extend Errors\r\n// SGFSyntaxError.prototype = Object.create(Error.prototype);\r\n// SGFSyntaxError.prototype.constructor = SGFSyntaxError;\r\n\r\nexport default SGFSyntaxError;\r\n","import SGFSyntaxError from './SGFSyntaxError';\r\nimport { PropIdent, SGFProperties, SGFCollection, SGFGameTree, SGFNode } from './sgfTypes';\r\n\r\n/**\r\n * Contains methods for parsing sgf string.\r\n * @module SGFParser\r\n */\r\n\r\nconst CODE_A = 'A'.charCodeAt(0);\r\nconst CODE_Z = 'Z'.charCodeAt(0);\r\nconst CODE_WHITE_CHAR = ' '.charCodeAt(0);\r\n\r\nfunction isCharUCLetter(char: string) {\r\n  if (!char) {\r\n    return false;\r\n  }\r\n\r\n  const charCode = char.charCodeAt(0);\r\n  return charCode >= CODE_A && charCode <= CODE_Z;\r\n}\r\n\r\n/**\r\n * Class for parsing of sgf files. Can be used for parsing of SGF fragments as well.\r\n */\r\n\r\nexport default class SGFParser {\r\n  /** SGF string to be parsed */\r\n  sgfString: string;\r\n\r\n  /** Current character position */\r\n  position: number = 0;\r\n\r\n  /** Current line number */\r\n  lineNo: number = 1;\r\n\r\n  /** Current char number (on the line) */\r\n  charNo: number = 0;\r\n\r\n  /**\r\n   * Creates new instance of SGF parser with SGF loaded ready to be parsed.\r\n   * @param sgf string to parse.\r\n   */\r\n  constructor(sgf: string) {\r\n    this.sgfString = sgf;\r\n  }\r\n\r\n  /**\r\n   * Returns current significant character (ignoring whitespace characters).\r\n   * If there is end of string, return undefined.\r\n   */\r\n  protected currentChar(): string {\r\n    while (this.sgfString.charCodeAt(this.position) <= CODE_WHITE_CHAR) {\r\n      // While the character is a whitespace, increase position pointer and line and column numbers.\r\n      this.nextChar();\r\n    }\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Move pointer to next character and return it (including whitespace).\r\n   */\r\n  protected nextChar() {\r\n    if (this.sgfString[this.position] === '\\n') {\r\n      this.charNo = 0;\r\n      this.lineNo++;\r\n    } else {\r\n      this.charNo++;\r\n    }\r\n    this.position++;\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Reads current significant character and if it isn't equal with the argument, throws an error.\r\n   * Then move pointer to next character.\r\n   */\r\n  protected processChar(char: string) {\r\n    if (this.currentChar() !== char) {\r\n      throw new SGFSyntaxError(`Unexpected character ${this.currentChar()}. Character ${char} was expected.`, this);\r\n    }\r\n\r\n    return this.nextChar();\r\n  }\r\n\r\n  /**\r\n   * Parse SGF property value - `\"[\" CValueType \"]\"`.\r\n   * @param optional\r\n   */\r\n  parsePropertyValue(optional?: boolean): string {\r\n    if (optional && this.currentChar() !== '[') {\r\n      return;\r\n    }\r\n\r\n    let value = '';\r\n\r\n    // process \"[\" and read first char\r\n    let char = this.processChar('[');\r\n\r\n    while (char !== ']') {\r\n      if (!char) {\r\n        // char mustn't be undefined\r\n        throw new SGFSyntaxError('End of SGF inside of property', this);\r\n      } else if (char === '\\\\') {\r\n        // if there is character '\\' save next character\r\n        char = this.nextChar();\r\n\r\n        if (!char) {\r\n          // char have to exist of course\r\n          throw new SGFSyntaxError('End of SGF inside of property', this);\r\n        } else if (char === '\\n') {\r\n          // ignore new line, otherwise save\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // save the character\r\n      value += char;\r\n\r\n      // and move to next one\r\n      char = this.nextChar();\r\n    }\r\n\r\n    this.processChar(']');\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Reads the property identifiers (One or more UC letters) - `UcLetter { UcLetter }`.\r\n   */\r\n  parsePropertyIdent(): PropIdent {\r\n    let ident = '';\r\n\r\n    // Read current significant character\r\n    let char = this.currentChar();\r\n\r\n    if (!isCharUCLetter(char)) {\r\n      throw new SGFSyntaxError('Property identifier must consists from upper case letters.', this);\r\n    }\r\n\r\n    ident += char;\r\n\r\n    while (char = this.nextChar()) {\r\n      if (!isCharUCLetter(char)) {\r\n        break;\r\n      }\r\n\r\n      ident += char;\r\n    }\r\n\r\n    return ident as PropIdent;\r\n  }\r\n\r\n  /**\r\n   * Parses sequence of property values - `PropValue { PropValue }`.\r\n   */\r\n  parsePropertyValues() {\r\n    const values: string[] = [];\r\n    let value = this.parsePropertyValue();\r\n\r\n    if (value) {\r\n      values.push(value);\r\n    }\r\n\r\n    while (value = this.parsePropertyValue(true)) {\r\n      values.push(value);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF property - `PropIdent PropValue { PropValue }`.\r\n   */\r\n  parseProperty(): [PropIdent, string[]] {\r\n    if (!isCharUCLetter(this.currentChar())) {\r\n      return;\r\n    }\r\n\r\n    return [this.parsePropertyIdent(), this.parsePropertyValues()];\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF node - `\";\" { Property }`.\r\n   */\r\n  parseNode(): SGFNode {\r\n    this.processChar(';');\r\n\r\n    const properties: SGFProperties = {};\r\n    let property: [PropIdent, string[]];\r\n\r\n    while (property = this.parseProperty()) {\r\n      properties[property[0]] = property[1];\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF Sequence - `Node { Node }`.\r\n   */\r\n  parseSequence(): SGFNode[] {\r\n    const sequence: SGFNode[] = [];\r\n\r\n    sequence.push(this.parseNode());\r\n\r\n    while (this.currentChar() === ';') {\r\n      sequence.push(this.parseNode());\r\n    }\r\n\r\n    return sequence;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *GameTree* - `\"(\" Sequence { GameTree } \")\"`.\r\n   */\r\n  parseGameTree(): SGFGameTree {\r\n    this.processChar('(');\r\n\r\n    const sequence = this.parseSequence();\r\n    let children: SGFGameTree[] = [];\r\n\r\n    if (this.currentChar() === '(') {\r\n      children = this.parseCollection();\r\n    }\r\n\r\n    this.processChar(')');\r\n\r\n    return { sequence, children };\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *Collection* - `Collection = GameTree { GameTree }`. This is the main method for parsing SGF file.\r\n   */\r\n  parseCollection(): SGFCollection {\r\n    const gameTrees: SGFCollection = [];\r\n    gameTrees.push(this.parseGameTree());\r\n\r\n    while (this.currentChar() === '(') {\r\n      gameTrees.push(this.parseGameTree());\r\n    }\r\n\r\n    return gameTrees;\r\n  }\r\n}\r\n","/**\r\n * From SGF specification, there are these types of property values:\r\n *\r\n * CValueType = (ValueType | *Compose*)\r\n * ValueType  = (*None* | *Number* | *Real* | *Double* | *Color* | *SimpleText* | *Text* | *Point*  | *Move* | *Stone*)\r\n *\r\n * WGo's kifu node (KNode object) implements similar types with few exceptions:\r\n *\r\n * - Types `Number`, `Real` and `Double` are implemented by javascript's `number`.\r\n * - Types `SimpleText` and `Text` are considered as the same.\r\n * - Types `Point`, `Move` and `Stone` are all the same, implemented as simple object with `x` and `y` coordinates.\r\n * - Type `None` is implemented as `true`\r\n *\r\n * Each `Compose` type, which is used in SGF, has its own type.\r\n *\r\n * - `Point ':' Point` (used in AR property) has special type `Line` - object with two sets of coordinates.\r\n * - `Point ':' Simpletext` (used in LB property) has special type `Label` - object with coordinates and text property\r\n * - `Simpletext \":\" Simpletext` (used in AP property) - not implemented\r\n * - `Number \":\" SimpleText` (used in FG property) - not implemented\r\n *\r\n * Moreover each property value has these settings:\r\n *\r\n * - *Single value* / *Array* (more values)\r\n * - *Not empty* / *Empty* (value or array can be empty)\r\n *\r\n * {@link http://www.red-bean.com/sgf/sgf4.html}\r\n */\r\n\r\nimport { Color, Point, Label, Vector } from '../types';\r\n\r\ninterface PropertyValueTransformer<T = any> {\r\n  read(str: string): T;\r\n  write(value: T): string;\r\n}\r\n\r\nexport const NONE = {\r\n  read: (str: string) => true,\r\n  write: (value: boolean) => '',\r\n};\r\n\r\nexport const NUMBER = {\r\n  read: (str: string) => parseFloat(str),\r\n  write: (value: number) => value.toString(10),\r\n};\r\n\r\nexport const TEXT = {\r\n  read: (str: string) => str,\r\n  write: (value: string) => value,\r\n};\r\n\r\nexport const COLOR = {\r\n  read: (str: string) => (str === 'w' || str === 'W' ? Color.WHITE : Color.BLACK),\r\n  write: (value: Color) => (value === Color.WHITE ? 'W' : 'B'),\r\n};\r\n\r\nexport const POINT = {\r\n  read: (str: string): Point => str ? {\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n  } : null,\r\n  write: (value?: Point) => value ? String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97) : '',\r\n};\r\n\r\nexport const LABEL = {\r\n  read: (str: string): Label => ({\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n    text: str.substr(3),\r\n  }),\r\n  write: (value: Label) => (\r\n    `${String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97)}:${value.text}`\r\n  ),\r\n};\r\n\r\nexport const VECTOR = {\r\n  read: (str: string): Vector => str ? [\r\n    {\r\n      x: str.charCodeAt(0) - 97,\r\n      y: str.charCodeAt(1) - 97,\r\n    },\r\n    {\r\n      x: str.charCodeAt(3) - 97,\r\n      y: str.charCodeAt(4) - 97,\r\n    },\r\n  ] : null,\r\n  write: (value?: Vector) => (\r\n    // tslint:disable-next-line:max-line-length\r\n    value ? `${String.fromCharCode(value[0].x + 97) + String.fromCharCode(value[0].y + 97)}:${String.fromCharCode(value[1].x + 97) + String.fromCharCode(value[1].y + 97)}` : ''\r\n  ),\r\n};\r\n\r\n/// Property definitions --------------------------------------------------------------------------\r\n\r\ninterface PropertyValueDefinition<T> {\r\n  transformer: PropertyValueTransformer<T>;\r\n  multiple: boolean;\r\n  notEmpty: boolean;\r\n}\r\n\r\nconst propertyValueTypes: {[propIdent: string]: PropertyValueDefinition<any>} = {\r\n  _default: {\r\n    transformer: TEXT,\r\n    multiple: false,\r\n    notEmpty: true,\r\n  },\r\n};\r\n\r\n/// Move properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.B = propertyValueTypes.W = {\r\n  transformer: POINT,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.KO = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.MN = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Setup properties ------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AB = propertyValueTypes.AW = propertyValueTypes.AE = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.PL = {\r\n  transformer: COLOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Node annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.C = propertyValueTypes.N = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.DM = propertyValueTypes.GB = propertyValueTypes.GW = propertyValueTypes.HO = propertyValueTypes.UC = propertyValueTypes.V = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Move annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.BM = propertyValueTypes.TE = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DO = propertyValueTypes.IT = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Markup properties -----------------------------------------------------------------------------\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.CR = propertyValueTypes.MA = propertyValueTypes.SL = propertyValueTypes.SQ = propertyValueTypes.TR = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.LB = {\r\n  transformer: LABEL,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.AR = propertyValueTypes.LN = {\r\n  transformer: VECTOR,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DD = propertyValueTypes.TB = propertyValueTypes.TW = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Root properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AP = propertyValueTypes.CA = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// note: rectangular board is not implemented (in SZ property)\r\npropertyValueTypes.FF = propertyValueTypes.GM = propertyValueTypes.ST = propertyValueTypes.SZ = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Game info properties --------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AN = propertyValueTypes.BR = propertyValueTypes.BT =\r\npropertyValueTypes.CP = propertyValueTypes.DT = propertyValueTypes.EV =\r\npropertyValueTypes.GN = propertyValueTypes.GC = propertyValueTypes.GN =\r\npropertyValueTypes.ON = propertyValueTypes.OT = propertyValueTypes.PB =\r\npropertyValueTypes.PC = propertyValueTypes.PW = propertyValueTypes.RE =\r\npropertyValueTypes.RO = propertyValueTypes.RU = propertyValueTypes.SO =\r\npropertyValueTypes.US = propertyValueTypes.WR = propertyValueTypes.WT = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.TM = propertyValueTypes.HA = propertyValueTypes.KM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Timing properties -----------------------------------------------------------------------------\r\n\r\npropertyValueTypes.BL = propertyValueTypes.WL = propertyValueTypes.OB = propertyValueTypes.OW = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Miscellaneous properties ----------------------------------------------------------------------\r\n\r\npropertyValueTypes.PM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// VW property must be specified as compressed list (ab:cd) and only one value is allowed\r\n// empty value [] will reset the viewport. Other options are not supported.\r\npropertyValueTypes.VW = {\r\n  transformer: VECTOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\nexport default propertyValueTypes;\r\n","import SGFParser, { SGFSyntaxError } from '../SGFParser';\r\nimport propertyValueTypes from './propertyValueTypes';\r\nimport { SGFGameTree, SGFProperties } from '../SGFParser/sgfTypes';\r\n\r\nconst processJSGF = function (gameTree: SGFGameTree, rootNode: KifuNode) {\r\n  rootNode.setSGFProperties(gameTree.sequence[0] || {});\r\n\r\n  let lastNode = rootNode;\r\n\r\n  for (let i = 1; i < gameTree.sequence.length; i++) {\r\n    const node = new KifuNode();\r\n    node.setSGFProperties(gameTree.sequence[i]);\r\n    lastNode.appendChild(node);\r\n    lastNode = node;\r\n  }\r\n\r\n  for (let i = 0; i < gameTree.children.length; i++) {\r\n    lastNode.appendChild(processJSGF(gameTree.children[i], new KifuNode()));\r\n  }\r\n\r\n  return rootNode;\r\n};\r\n\r\n// Characters, which has to be escaped when transforming to SGF\r\nconst escapeCharacters = ['\\\\\\\\', '\\\\]'];\r\n\r\nconst escapeSGFValue = function (value: string) {\r\n  return escapeCharacters.reduce((prev, current) => prev.replace(new RegExp(current, 'g'), current), value);\r\n};\r\n\r\n/**\r\n * Contains path to certain node in game tree.\r\n */\r\nexport interface Path {\r\n  /** Depth of node (for root node it is 0) */\r\n  depth: number;\r\n  /** Array of children array indexes of all predecessors which have siblings. */\r\n  forks: number[];\r\n}\r\n\r\n/**\r\n * Class representing one kifu node.\r\n */\r\nexport default class KifuNode {\r\n  parent: KifuNode | null;\r\n  children: KifuNode[];\r\n  properties: {[key: string]: any};\r\n\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.properties = {};\r\n  }\r\n\r\n  get root() {\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent != null) {\r\n      node = node.parent;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  set innerSGF(sgf: string) {\r\n    // clean up\r\n    this.clean();\r\n\r\n    let transformedSgf = sgf;\r\n\r\n    // create regular SGF from sgf-like string\r\n    if (transformedSgf[0] !== '(') {\r\n      if (transformedSgf[0] !== ';') {\r\n        transformedSgf = `;${transformedSgf}`;\r\n      }\r\n      transformedSgf = `(${transformedSgf})`;\r\n    }\r\n\r\n    KifuNode.fromSGF(transformedSgf, 0, this);\r\n  }\r\n\r\n  /**\r\n   * Kifu node representation as sgf-like string - will contain `;`, all properties and all children.\r\n   */\r\n  get innerSGF(): string {\r\n    let output = ';';\r\n\r\n    for (const propIdent in this.properties) {\r\n      if (this.properties.hasOwnProperty(propIdent)) {\r\n        output += `${propIdent}[${this.getSGFProperty(propIdent).map(escapeSGFValue).join('][')}]`;\r\n      }\r\n    }\r\n\r\n    if (this.children.length === 1) {\r\n      return `${output}${this.children[0].innerSGF}`;\r\n    }\r\n    if (this.children.length > 1) {\r\n      return this.children.reduce((prev, current) => `${prev}(${current.innerSGF})`, output);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent) {\r\n      path.depth++;\r\n      if (node.parent.children.length > 1) {\r\n        path.forks.unshift(node.parent.children.indexOf(node));\r\n      }\r\n      node = node.parent;\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /// GENERAL TREE NODE MANIPULATION METHODS (subset of DOM API's Node)\r\n\r\n  /**\r\n   * Insert a KNode as the last child node of this node.\r\n   *\r\n   * @throws  {Error} when argument is invalid.\r\n   * @param   {KifuNode} node to append.\r\n   * @returns {number} position(index) of appended node.\r\n   */\r\n\r\n  appendChild(node: KifuNode): number {\r\n    if (node == null || !(node instanceof KifuNode) || node === this) {\r\n      throw new Error('Invalid argument passed to `appendChild` method, KNode was expected.');\r\n    }\r\n\r\n    if (node.parent) {\r\n      node.parent.removeChild(node);\r\n    }\r\n\r\n    node.parent = this;\r\n\r\n    return this.children.push(node) - 1;\r\n  }\r\n\r\n  /**\r\n   * Returns a Boolean value indicating whether a node is a descendant of a given node or not.\r\n   *\r\n   * @param   {KifuNode}   node to be tested\r\n   * @returns {boolean} true, if this node contains given node.\r\n   */\r\n\r\n  contains(node: KifuNode): boolean {\r\n    if (this.children.indexOf(node) >= 0) {\r\n      return true;\r\n    }\r\n\r\n    return this.children.some(child => child.contains(node));\r\n  }\r\n\r\n  /**\r\n   * Inserts the first KNode given in a parameter immediately before the second, child of this KNode.\r\n   *\r\n   * @throws  {Error}   when argument is invalid.\r\n   * @param   {KifuNode}   newNode       node to be inserted\r\n   * @param   {(KifuNode)} referenceNode reference node, if omitted, new node will be inserted at the end.\r\n   * @returns {KifuNode}   this node\r\n   */\r\n\r\n  insertBefore(newNode: KifuNode, referenceNode?: KifuNode): KifuNode {\r\n    if (newNode == null || !(newNode instanceof KifuNode) || newNode === this) {\r\n      throw new Error('Invalid argument passed to `insertBefore` method, KNode was expected.');\r\n    }\r\n    if (referenceNode == null) {\r\n      this.appendChild(newNode);\r\n      return this;\r\n    }\r\n\r\n    if (newNode.parent) {\r\n      newNode.parent.removeChild(newNode);\r\n    }\r\n\r\n    newNode.parent = this;\r\n\r\n    this.children.splice(this.children.indexOf(referenceNode), 0, newNode);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a child node from the current element, which must be a child of the current node.\r\n   *\r\n   * @param   {KifuNode} child node to be removed\r\n   * @returns {KifuNode}  this node\r\n   */\r\n\r\n  removeChild(child: KifuNode): KifuNode {\r\n    this.children.splice(this.children.indexOf(child), 1);\r\n\r\n    child.parent = null;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Replaces one child Node of the current one with the second one given in parameter.\r\n   *\r\n   * @throws  {Error} when argument is invalid\r\n   * @param   {KifuNode} newChild node to be inserted\r\n   * @param   {KifuNode} oldChild node to be replaced\r\n   * @returns {KifuNode} this node\r\n   */\r\n\r\n  replaceChild(newChild: KifuNode, oldChild: KifuNode): KifuNode {\r\n    if (newChild == null || !(newChild instanceof KifuNode) || newChild === this) {\r\n      throw new Error('Invalid argument passed to `replaceChild` method, KNode was expected.');\r\n    }\r\n\r\n    this.insertBefore(newChild, oldChild);\r\n    this.removeChild(oldChild);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove all properties and children. Parent will remain.\r\n   */\r\n  clean() {\r\n    for (let i = this.children.length - 1; i >= 0; i--) {\r\n      this.removeChild(this.children[i]);\r\n    }\r\n    this.properties = {};\r\n  }\r\n\r\n  /// BASIC PROPERTY GETTER and SETTER\r\n\r\n  /**\r\n   * Gets property by SGF property identificator. Returns property value (type depends on property type)\r\n   *\r\n   * @param   {string}   propIdent - SGF property idetificator\r\n   * @returns {any}    property value or values or undefined, if property is missing.\r\n   */\r\n\r\n  getProperty(propIdent: string): any {\r\n    return this.properties[propIdent];\r\n  }\r\n\r\n  /**\r\n   * Sets property by SGF property identificator.\r\n   *\r\n   * @param   {string}  propIdent - SGF property idetificator\r\n   * @param   {any}     value - property value or values\r\n   */\r\n\r\n  setProperty(propIdent: string, value?: any) {\r\n    if (value === undefined) {\r\n      delete this.properties[propIdent];\r\n    } else {\r\n      this.properties[propIdent] = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Alias for `setProperty` without second parameter.\r\n   * @param propIdent\r\n   */\r\n  removeProperty(propIdent: string) {\r\n    this.setProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Iterates through all properties.\r\n   */\r\n  forEachProperty(callback: (propIdent: string, value: any) => void) {\r\n    Object.keys(this.properties).forEach((propIdent: string) => callback(propIdent, this.properties[propIdent]));\r\n  }\r\n\r\n  /// SGF RAW METHODS\r\n\r\n  /**\r\n   * Gets one SGF property value as string (with brackets `[` and `]`).\r\n   *\r\n   * @param   {string} propIdent SGF property identificator.\r\n   * @returns {string[]} Array of SGF property values or null if there is not such property.\r\n   */\r\n\r\n  getSGFProperty(propIdent: string): string[] {\r\n    if (this.properties[propIdent] !== undefined) {\r\n      const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n      if (propertyValueType.multiple) {\r\n        return this.properties[propIdent].map(\r\n          (propValue: any) => propertyValueType.transformer.write(propValue),\r\n        );\r\n      }\r\n\r\n      return [propertyValueType.transformer.write(this.properties[propIdent])];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets one SGF property.\r\n   *\r\n   * @param   {string}   propIdent SGF property identificator\r\n   * @param   {string[]} propValues SGF property values\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperty(propIdent: string, propValues?: string[]): KifuNode {\r\n    const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n    if (propValues === undefined) {\r\n      delete this.properties[propIdent];\r\n      return this;\r\n    }\r\n\r\n    if (propertyValueType.multiple) {\r\n      this.properties[propIdent] = propValues.map(val => propertyValueType.transformer.read(val));\r\n    } else {\r\n      this.properties[propIdent] = propertyValueType.transformer.read(propValues[0]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets multiple SGF properties.\r\n   *\r\n   * @param   {Object}   properties - map with signature propIdent -> propValues.\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperties(properties: SGFProperties): KifuNode {\r\n    for (const ident in properties) {\r\n      if (properties.hasOwnProperty(ident)) {\r\n        this.setSGFProperty(ident, properties[ident as keyof SGFProperties]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms KNode object to standard SGF string.\r\n   */\r\n  toSGF() {\r\n    return `(${this.innerSGF})`;\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the node. If node isn't root, its predecessors won't be cloned, and the node becomes root.\r\n   */\r\n  cloneNode(appendToParent?: boolean) {\r\n    const node = new KifuNode();\r\n    const properties = JSON.parse(JSON.stringify(this.properties));\r\n    node.properties = properties;\r\n\r\n    this.children.forEach((child) => {\r\n      node.appendChild(child.cloneNode());\r\n    });\r\n\r\n    if (appendToParent && this.parent) {\r\n      this.parent.appendChild(node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF transformed to JavaScript object.\r\n   *\r\n   * @param gameTree\r\n   */\r\n  static fromJS(gameTree: SGFGameTree, kifuNode = new KifuNode()) {\r\n    return processJSGF(gameTree, kifuNode);\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF string.\r\n   *\r\n   * @param sgf\r\n   * @param gameNo\r\n   */\r\n  static fromSGF(sgf: string, gameNo: number = 0, kifuNode = new KifuNode()) {\r\n    const parser = new SGFParser(sgf);\r\n    return KifuNode.fromJS(parser.parseCollection()[gameNo], kifuNode);\r\n  }\r\n}\r\n","/**\r\n * WGo's game engine offers to set 3 rules:\r\n *\r\n * - *checkRepeat* - one of `repeat.KO`, `repeat.ALL`, `repeat.NONE` - defines if or when a move can be repeated.\r\n * - *allowRewrite* - if set true a move can rewrite existing move (for uncommon applications)\r\n * - *allowSuicide* - if set true a suicide will be allowed (and stone will be immediately captured)\r\n *\r\n * In this module there are some common preset rule sets (Japanese, Chinese etc...).\r\n * Extend object `gameRules` if you wish to add some rule set. Names of the rules should correspond with\r\n * SGF `RU` property.\r\n */\r\n\r\nexport enum Repeating {\r\n  KO = 'KO',\r\n  ALL = 'ALL',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface GoRules {\r\n  repeating: Repeating;\r\n  allowRewrite: boolean;\r\n  allowSuicide: boolean;\r\n  komi: number;\r\n}\r\n\r\nexport const JAPANESE_RULES: GoRules = {\r\n  repeating: Repeating.KO,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 6.5,\r\n};\r\n\r\nexport const CHINESE_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const ING_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: true,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const NO_RULES: GoRules = {\r\n  repeating: Repeating.ALL,\r\n  allowRewrite: true,\r\n  allowSuicide: true,\r\n  komi: 0,\r\n};\r\n\r\nexport default {\r\n  Japanese: JAPANESE_RULES,\r\n  GOE: ING_RULES,\r\n  NZ: ING_RULES,\r\n  AGA: CHINESE_RULES,\r\n  Chinese: CHINESE_RULES,\r\n};\r\n","/**\r\n * Contains implementation of go position class.\r\n * @module Position\r\n */\r\n\r\nimport { Color, Field } from '../types';\r\n\r\n// creates 2-dim array\r\nfunction createGrid<T>(size: number) {\r\n  const grid: T[][] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    grid.push([]);\r\n  }\r\n  return grid;\r\n}\r\n\r\n/**\r\n * Position class represents a state of the go game in one moment in time. It is composed from a grid containing black\r\n * and white stones, capture counts, and actual turn. It is designed to be mutable.\r\n */\r\nexport default class Position {\r\n  /**\r\n\t * Size of the board.\r\n\t * @constant\r\n\t */\r\n\r\n  size: number;\r\n\r\n  /**\r\n   * One dimensional array containing stones of the position.\r\n   */\r\n  grid: Color[] = [];\r\n\r\n  /**\r\n   * Contains numbers of stones that both players captured.\r\n   *\r\n   * @property {number} black - Count of white stones captured by **black**.\r\n   * @property {number} white - Count of black stones captured by **white**.\r\n   */\r\n\r\n  capCount = {\r\n    black: 0,\r\n    white: 0,\r\n  };\r\n\r\n  /**\r\n   * Who plays next move.\r\n   */\r\n\r\n  turn: Color.BLACK | Color.WHITE = Color.BLACK;\r\n\r\n  /**\r\n   * Creates instance of position object.\r\n   *\r\n   * @alias WGo.Position\r\n   * @class\r\n   *\r\n   * @param {number} [size = 19] - Size of the board.\r\n   */\r\n  constructor(size: number = 19) {\r\n    this.size = size;\r\n\r\n    // init grid\r\n    this.clear();\r\n  }\r\n\r\n  isOnPosition(x: number, y: number) {\r\n    return x >= 0 && y >= 0 && x < this.size && y < this.size;\r\n  }\r\n\r\n  /**\r\n   * Returns stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @return {Color} Color\r\n   */\r\n  get(x: number, y: number): Color {\r\n    if (!this.isOnPosition(x, y)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.grid[x * this.size + y];\r\n  }\r\n\r\n  /**\r\n   * Sets stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {Color} c - Color\r\n   */\r\n  set(x: number, y: number, c: Color) {\r\n    if (!this.isOnPosition(x, y)) {\r\n      throw new TypeError('Attempt to set field outside of position.');\r\n    }\r\n\r\n    this.grid[x * this.size + y] = c;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the whole position (every value is set to EMPTY).\r\n   */\r\n  clear() {\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      this.grid[i] = Color.EMPTY;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones the whole position.\r\n   *\r\n   * @return {WGo.Position} Copy of the position.\r\n   * @todo Clone turn as well.\r\n   */\r\n\r\n  clone(): Position {\r\n    const clone = new Position(this.size);\r\n    clone.grid = this.grid.slice(0);\r\n    clone.capCount.black = this.capCount.black;\r\n    clone.capCount.white = this.capCount.white;\r\n    clone.turn = this.turn;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Compares this position with another position and return object with changes\r\n   *\r\n   * @param {WGo.Position} position - Position to compare to.\r\n   * @return {Field[]} Array of different fields\r\n   */\r\n\r\n  compare(position: Position): Field[] {\r\n    if (position.size !== this.size) {\r\n      throw new TypeError('Positions of different sizes cannot be compared.');\r\n    }\r\n\r\n    const diff: Field[] = [];\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      if (this.grid[i] !== position.grid[i]) {\r\n        diff.push({\r\n          x: Math.floor(i / this.size),\r\n          y: i % this.size,\r\n          c: position.grid[i],\r\n        });\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Sets stone on given coordinates and capture adjacent stones without liberties if there are any.\r\n   * If move is invalid, false is returned.\r\n   */\r\n  applyMove(x: number, y: number, c: Color = this.turn, allowSuicide = false, allowRewrite = false) {\r\n    // check if move is on empty field of the board\r\n    if (!(allowRewrite || this.get(x, y) === Color.EMPTY)) {\r\n      return false;\r\n    }\r\n\r\n    // clone position and add a stone\r\n    const prevColor = this.get(x, y);\r\n    this.set(x, y, c);\r\n\r\n    // check capturing of all surrounding stones\r\n    const capturesAbove = this.get(x, y - 1) === -c && this.captureIfNoLiberties(x, y - 1);\r\n    const capturesRight = this.get(x + 1, y) === -c && this.captureIfNoLiberties(x + 1, y);\r\n    const capturesBelow = this.get(x, y + 1) === -c && this.captureIfNoLiberties(x, y + 1);\r\n    const capturesLeft = this.get(x - 1, y) === -c && this.captureIfNoLiberties(x - 1, y);\r\n    const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n    // check suicide\r\n    if (!hasCaptured) {\r\n      if (!this.hasLiberties(x, y)) {\r\n        if (allowSuicide) {\r\n          this.capture(x, y, c);\r\n        } else {\r\n          // revert position\r\n          this.set(x, y, prevColor);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.turn = -c;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n   * that should be captured, they will be removed. Returns a new Position object.\r\n   * This position isn't modified.\r\n   */\r\n\r\n  validatePosition() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        this.captureIfNoLiberties(x - 1, y);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if stone or group on the given coordinates has at least one liberty.\r\n   */\r\n  hasLiberties(x: number, y: number, alreadyTested = createGrid(this.size), c = this.get(x, y)): boolean {\r\n    // out of the board there aren't liberties\r\n    if (!this.isOnPosition(x, y)) {\r\n      return false;\r\n    }\r\n\r\n    // however empty field means liberty\r\n    if (this.get(x, y) === Color.EMPTY) {\r\n      return true;\r\n    }\r\n\r\n    // already tested field or stone of enemy isn't a liberty.\r\n    if (alreadyTested[x][y] || this.get(x, y) === -c) {\r\n      return false;\r\n    }\r\n\r\n    // set this field as tested\r\n    alreadyTested[x][y] = true;\r\n\r\n    // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n    return (\r\n      this.hasLiberties(x, y - 1, alreadyTested, c) ||\r\n      this.hasLiberties(x, y + 1, alreadyTested, c) ||\r\n      this.hasLiberties(x - 1, y, alreadyTested, c) ||\r\n      this.hasLiberties(x + 1, y, alreadyTested, c)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if specified stone/group has zero liberties and if so it captures/removes stones from the position.\r\n   */\r\n  protected captureIfNoLiberties(x: number, y: number) {\r\n    // if it has zero liberties capture it\r\n    if (!this.hasLiberties(x, y)) {\r\n      // capture stones from game\r\n      this.capture(x, y);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n   */\r\n  capture(x: number, y: number, c: Color = this.get(x, y)) {\r\n    if (this.isOnPosition(x, y) && c !== Color.EMPTY && this.get(x, y) === c) {\r\n      this.set(x, y, Color.EMPTY);\r\n\r\n      if (c === Color.BLACK) {\r\n        this.capCount.white = this.capCount.white + 1;\r\n      } else {\r\n        this.capCount.black = this.capCount.black + 1;\r\n      }\r\n\r\n      this.capture(x, y - 1, c);\r\n      this.capture(x, y + 1, c);\r\n      this.capture(x - 1, y, c);\r\n      this.capture(x + 1, y, c);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For debug purposes.\r\n   */\r\n  toString() {\r\n    const TL = '┌';\r\n    const TM = '┬';\r\n    const TR = '┐';\r\n    const ML = '├';\r\n    const MM = '┼';\r\n    const MR = '┤';\r\n    const BL = '└';\r\n    const BM = '┴';\r\n    const BR = '┘';\r\n    const BS = '●';\r\n    const WS = '○';\r\n    const HF = '─'; // horizontal fill\r\n\r\n    let output = '   ';\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      output += i < 9 ? `${i} ` : i;\r\n    }\r\n\r\n    output += '\\n';\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        const color = this.grid[x * this.size + y];\r\n\r\n        if (x === 0) {\r\n          output += `${(y < 10 ? ` ${y}` : y)} `;\r\n        }\r\n\r\n        if (color !== Color.EMPTY) {\r\n          output += color === Color.BLACK ? BS : WS;\r\n        } else {\r\n          let char;\r\n\r\n          if (y === 0) {\r\n            // top line\r\n            if (x === 0) {\r\n              char = TL;\r\n            } else if (x < this.size - 1) {\r\n              char = TM;\r\n            } else {\r\n              char = TR;\r\n            }\r\n          } else if (y < this.size - 1) {\r\n            // middle line\r\n            if (x === 0) {\r\n              char = ML;\r\n            } else if (x < this.size - 1) {\r\n              char = MM;\r\n            } else {\r\n              char = MR;\r\n            }\r\n          } else {\r\n            // bottom line\r\n            if (x === 0) {\r\n              char = BL;\r\n            } else if (x < this.size - 1) {\r\n              char = BM;\r\n            } else {\r\n              char = BR;\r\n            }\r\n          }\r\n\r\n          output += char;\r\n        }\r\n\r\n        if (x === this.size - 1) {\r\n          if (y !== this.size - 1) {\r\n            output += '\\n';\r\n          }\r\n        } else {\r\n          output += HF;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns position grid as two dimensional array.\r\n   */\r\n  toTwoDimensionalArray() {\r\n    const arr: Color[][] = [];\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      arr[x] = [];\r\n      for (let y = 0; y < this.size; y++) {\r\n        arr[x][y] = this.grid[x * this.size + y];\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n\r\n// import { Color, Field, Move } from '../types';\r\n\r\n// /**\r\n//  * Position of the board (grid) is represented as 2 dimensional array of colors.\r\n//  */\r\n// export type Position = Color[][];\r\n\r\n// /**\r\n//  * Creates empty position (filled with Color.EMPTY) of specified size.\r\n//  * @param size\r\n//  */\r\n// export function createPosition(size: number) {\r\n//   const position: Color[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     const row: Color[] = [];\r\n//     for (let j = 0; j < size; j++) {\r\n//       row.push(Color.EMPTY);\r\n//     }\r\n//     position.push(row);\r\n//   }\r\n//   return position;\r\n// }\r\n\r\n// /**\r\n//  * Deep clones a position.\r\n//  * @param position\r\n//  */\r\n// export function clonePosition(position: Position) {\r\n//   return position.map(row => row.slice(0));\r\n// }\r\n\r\n// /**\r\n//  * Compares position `pos1` with position `pos2` and returns all differences on `pos2`.\r\n//  * @param pos1\r\n//  * @param pos2\r\n//  */\r\n// export function comparePositions(pos1: Position, pos2: Position): Field[] {\r\n//   if (pos1.length !== pos2.length) {\r\n//     throw new TypeError('Positions of different sizes cannot be compared.');\r\n//   }\r\n\r\n//   const diff: Field[] = [];\r\n\r\n//   for (let x = 0; x < pos1.length; x++) {\r\n//     for (let y = 0; y < pos2.length; y++) {\r\n//       if (pos1[x][y] !== pos2[x][y]) {\r\n//         diff.push({ x, y, c: pos2[x][y] });\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return diff;\r\n// }\r\n\r\n// function isOnBoard(position: Position, x: number, y: number) {\r\n//   return x >= 0 && x < position.length && y >= 0 && y < position.length;\r\n// }\r\n\r\n// /**\r\n//  * Creates new position with specified move (with rules applied - position won't contain captured stones).\r\n//  * If move is invalid, null is returned.\r\n//  */\r\n// export function applyMove(position: Position, x: number, y: number, c: Color.B | Color.W, allowSuicide = false) {\r\n//   // check if move is on empty field of the board\r\n//   if (!isOnBoard(position, x, y) || position[x][y] !== Color.EMPTY) {\r\n//     return null;\r\n//   }\r\n\r\n//   // clone position and add a stone\r\n//   const newPosition = clonePosition(position);\r\n//   newPosition[x][y] = c;\r\n\r\n//   // check capturing of all surrounding stones\r\n//   const capturesAbove = captureIfNoLiberties(newPosition, x, y - 1, -c);\r\n//   const capturesRight = captureIfNoLiberties(newPosition, x + 1, y, -c);\r\n//   const capturesBelow = captureIfNoLiberties(newPosition, x, y + 1, -c);\r\n//   const capturesLeft = captureIfNoLiberties(newPosition, x - 1, y, -c);\r\n//   const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n//   // check suicide\r\n//   if (!hasCaptured) {\r\n//     if (!hasLiberties(newPosition, x, y)) {\r\n//       if (allowSuicide) {\r\n//         capture(newPosition, x, y, c);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n//  * that should be captured, they will be removed. Returns a new Position object.\r\n//  */\r\n\r\n// export function getValidatedPosition(position: Position) {\r\n//   const newPosition = clonePosition(position);\r\n\r\n//   for (let x = 0; x < position.length; x++) {\r\n//     for (let y = 0; y < position.length; y++) {\r\n//       captureIfNoLiberties(newPosition, x, y);\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Capture stone or group of stones if they are zero liberties. Mutates the given position.\r\n//  *\r\n//  * @param position\r\n//  * @param x\r\n//  * @param y\r\n//  * @param c\r\n//  */\r\n// function captureIfNoLiberties(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   let hasCaptured = false;\r\n\r\n//   // is there a stone possible to capture?\r\n//   if (isOnBoard(position, x, y) && c !== Color.EMPTY && position[x][y] === c) {\r\n//     // if it has zero liberties capture it\r\n//     if (!hasLiberties(position, x, y)) {\r\n//       // capture stones from game\r\n//       capture(position, x, y, c);\r\n//       hasCaptured = true;\r\n//     }\r\n//   }\r\n\r\n//   return hasCaptured;\r\n// }\r\n\r\n// function createTestGrid(size: number) {\r\n//   const grid: boolean[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     grid.push([]);\r\n//   }\r\n//   return grid;\r\n// }\r\n\r\n// /**\r\n//  * Returns true if stone or group on the given position has at least one liberty.\r\n//  */\r\n// function hasLiberties(\r\n//   position: Position,\r\n//   x: number,\r\n//   y: number,\r\n//   alreadyTested = createTestGrid(position.length),\r\n//   c = position[x][y],\r\n// ): boolean {\r\n//   // out of the board there aren't liberties\r\n//   if (!isOnBoard(position, x, y)) {\r\n//     return false;\r\n//   }\r\n\r\n//   // however empty field means liberty\r\n//   if (position[x][y] === Color.EMPTY) {\r\n//     return true;\r\n//   }\r\n\r\n//   // already tested field or stone of enemy isn't a liberty.\r\n//   if (alreadyTested[x][y] || position[x][y] === -c) {\r\n//     return false;\r\n//   }\r\n\r\n//   // set this field as tested\r\n//   alreadyTested[x][y] = true;\r\n\r\n//   // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n//   return (\r\n//     hasLiberties(position, x, y - 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x, y + 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x - 1, y, alreadyTested, c) ||\r\n//     hasLiberties(position, x + 1, y, alreadyTested, c)\r\n//   );\r\n// }\r\n\r\n// /**\r\n//  * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n//  * Mutates the given position.\r\n//  */\r\n// function capture(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   if (isOnBoard(position, x, y) && position[x][y] !== Color.EMPTY && position[x][y] === c) {\r\n//     position[x][y] = Color.EMPTY;\r\n\r\n//     capture(position, x, y - 1, c);\r\n//     capture(position, x, y + 1, c);\r\n//     capture(position, x - 1, y, c);\r\n//     capture(position, x + 1, y, c);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * For debug purposes.\r\n//  */\r\n// export function stringifyPosition(position: Position) {\r\n//   const TL = '┌';\r\n//   const TM = '┬';\r\n//   const TR = '┐';\r\n//   const ML = '├';\r\n//   const MM = '┼';\r\n//   const MR = '┤';\r\n//   const BL = '└';\r\n//   const BM = '┴';\r\n//   const BR = '┘';\r\n//   const BS = '●';\r\n//   const WS = '○';\r\n//   const HF = '─'; // horizontal fill\r\n\r\n//   let output = '   ';\r\n\r\n//   for (let i = 0; i < position.length; i++) {\r\n//     output += i < 9 ? `${i} ` : i;\r\n//   }\r\n\r\n//   output += '\\n';\r\n\r\n//   for (let y = 0; y < position.length; y++) {\r\n//     for (let x = 0; x < position.length; x++) {\r\n//       const color = position[x][y];\r\n\r\n//       if (x === 0) {\r\n//         output += `${(y < 10 ? ` ${y}` : y)} `;\r\n//       }\r\n\r\n//       if (color !== Color.EMPTY) {\r\n//         output += color === Color.BLACK ? BS : WS;\r\n//       } else {\r\n//         let char;\r\n\r\n//         if (y === 0) {\r\n//           // top line\r\n//           if (x === 0) {\r\n//             char = TL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = TM;\r\n//           } else {\r\n//             char = TR;\r\n//           }\r\n//         } else if (y < position.length - 1) {\r\n//           // middle line\r\n//           if (x === 0) {\r\n//             char = ML;\r\n//           } else if (x < position.length - 1) {\r\n//             char = MM;\r\n//           } else {\r\n//             char = MR;\r\n//           }\r\n//         } else {\r\n//           // bottom line\r\n//           if (x === 0) {\r\n//             char = BL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = BM;\r\n//           } else {\r\n//             char = BR;\r\n//           }\r\n//         }\r\n\r\n//         output += char;\r\n//       }\r\n\r\n//       if (x === position.length - 1) {\r\n//         if (y !== position.length - 1) {\r\n//           output += '\\n';\r\n//         }\r\n//       } else {\r\n//         output += HF;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return output;\r\n// }\r\n","import { GoRules, JAPANESE_RULES, Repeating } from './rules';\r\nimport Position from './Position';\r\nimport { Color } from '../types';\r\n\r\nexport default class Game {\r\n  size: number;\r\n  rules: GoRules;\r\n  komi: number;\r\n  positionStack: Position[];\r\n\r\n  /**\r\n   * Creates instance of game class.\r\n   *\r\n   * @class\r\n   * This class implements game logic. It basically analyses given moves and returns capture stones.\r\n   * WGo.Game also stores every position from beginning, so it has ability to check repeating positions\r\n   * and it can effectively restore old positions.\r\n   *\r\n   *\r\n   * @param {number} [size = 19] Size of the board\r\n   * @param {string} [checkRepeat = KO] How to handle repeated position:\r\n   *\r\n   * * KO - ko is properly handled - position cannot be same like previous position\r\n   * * ALL - position cannot be same like any previous position - e.g. it forbids triple ko\r\n   * * NONE - position can be repeated\r\n   *\r\n   * @param {boolean} [allowRewrite = false] Allow to play moves, which were already played\r\n   * @param {boolean} [allowSuicide = false] Allow to play suicides, stones are immediately captured\r\n   */\r\n\r\n  constructor(size: number = 19, rules: GoRules = JAPANESE_RULES) {\r\n    this.size = size;\r\n    this.rules = rules;\r\n    this.komi = rules.komi;\r\n    this.positionStack = [new Position(size)];\r\n  }\r\n\r\n  get position() {\r\n    return this.positionStack[this.positionStack.length - 1];\r\n  }\r\n\r\n  set position(pos) {\r\n    this.positionStack[this.positionStack.length - 1] = pos;\r\n  }\r\n\r\n  get turn() {\r\n    return this.position.turn;\r\n  }\r\n\r\n  set turn(color: Color.WHITE | Color.BLACK) {\r\n    this.position.turn = color;\r\n  }\r\n\r\n  get capCount() {\r\n    return this.position.capCount;\r\n  }\r\n\r\n  /**\r\n   * Play move. You can specify color.\r\n   */\r\n  play(x: number, y: number) {\r\n    const nextPosition = this.tryToPlay(x, y);\r\n\r\n    if (nextPosition) {\r\n      this.pushPosition(nextPosition);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Tries to play on given coordinates, returns new position after the play, or error code.\r\n   */\r\n  protected tryToPlay(x: number, y: number) {\r\n    const nextPosition = this.position.clone();\r\n    const success = nextPosition.applyMove(x, y, nextPosition.turn, this.rules.allowSuicide, this.rules.allowRewrite);\r\n\r\n    if (success && !this.hasPositionRepeated(nextPosition)) {\r\n      return nextPosition;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Position} position to check\r\n   * @return {boolean} Returns true if the position didn't occurred in the past (according to the rule set)\r\n   */\r\n  hasPositionRepeated(position: Position): boolean {\r\n    let depth: number;\r\n\r\n    if (this.rules.repeating === Repeating.KO && this.positionStack.length - 2 >= 0) {\r\n      depth = this.positionStack.length - 2;\r\n    } else if (this.rules.repeating === Repeating.NONE) {\r\n      depth = 0;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    for (let i = this.positionStack.length - 1; i >= depth; i--) {\r\n      if (this.positionStack[i].compare(position).length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Play pass.\r\n   *\r\n   * @param {(BLACK|WHITE)} c color\r\n   */\r\n\r\n  pass(c: Color.BLACK | Color.WHITE = this.turn) {\r\n    const nextPosition = this.position.clone();\r\n    nextPosition.turn = -(c || this.turn);\r\n    this.pushPosition(nextPosition);\r\n  }\r\n\r\n  /**\r\n   * Finds out validity of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move can be played.\r\n   */\r\n\r\n  isValid(x: number, y: number): boolean {\r\n    return !!this.tryToPlay(x, y);\r\n  }\r\n\r\n  /**\r\n   * Controls position of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move is on board.\r\n   */\r\n\r\n  isOnBoard(x: number, y: number): boolean {\r\n    return this.position.isOnPosition(x, y);\r\n  }\r\n\r\n  /**\r\n   * Inserts move into current position. Use for setting position, for example in handicap game. Field must be empty.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {Color} c color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  addStone(x: number, y: number, c: Color.BLACK | Color.WHITE): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) === Color.EMPTY) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes move from current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  removeStone(x: number, y: number): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) !== Color.EMPTY) {\r\n      this.position.set(x, y, Color.EMPTY);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set or insert move of current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {(BLACK|WHITE)} [c] color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  setStone(x: number, y: number, c: Color): boolean {\r\n    if (this.isOnBoard(x, y)) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get stone on given position.s\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {(Color|null)} color\r\n   */\r\n\r\n  getStone(x: any, y: any): (Color | null) {\r\n    return this.position.get(x, y);\r\n  }\r\n\r\n  /**\r\n   * Add position to stack. If position isn't specified current position is cloned and stacked.\r\n   * Pointer of actual position is moved to the new position.\r\n   *\r\n   * @param {WGo.Position} tmp position (optional)\r\n   */\r\n\r\n  pushPosition(pos: Position) {\r\n    return this.positionStack.push(pos);\r\n  }\r\n\r\n  /**\r\n   * Remove current position from stack. Pointer of actual position is moved to the previous position.\r\n   */\r\n\r\n  popPosition() {\r\n    if (this.positionStack.length > 1) {\r\n      return this.positionStack.pop();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes all positions except the initial.\r\n   */\r\n\r\n  clear() {\r\n    this.positionStack = [this.positionStack[0]];\r\n  }\r\n}\r\n","/**\r\n * Represents generic board object specified by type, which can be painted on the board.\r\n * It contains z-index and opacity.\r\n */\r\nexport default class BoardObject {\r\n  type: string;\r\n  zIndex: number = 0;\r\n  opacity: number = 1;\r\n\r\n  constructor(type: string) {\r\n    this.type = type;\r\n  }\r\n}\r\n","import BoardObject from './BoardObject';\r\n\r\n/**\r\n * Represents board object specified by type, which can be painted on the specific field of the board.\r\n * It can be also transformed.\r\n */\r\nexport default class FieldBoardObject extends BoardObject {\r\n  x: number;\r\n  y: number;\r\n  scaleX: number = 1;\r\n  scaleY: number = 1;\r\n  rotate: number = 0;\r\n\r\n  constructor(type: string, x = 0, y = 0) {\r\n    super(type);\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setPosition(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setScale(factor: number) {\r\n    this.scaleX = factor;\r\n    this.scaleY = factor;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport FieldBoardObject from './FieldBoardObject';\r\n\r\n/**\r\n * Board markup object is special type of field object, which can have 3 variations - for empty field\r\n * and for black and white stone.\r\n */\r\nexport default class MarkupBoardObject extends FieldBoardObject {\r\n  variation: Color;\r\n\r\n  constructor(type: string, x = 0, y = 0, variation: Color = Color.E) {\r\n    super(type, x, y);\r\n    this.variation = variation;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport MarkupBoardObject from './MarkupBoardObject';\r\n\r\n/**\r\n * Board label object is special type of markup object, which renders text on the field.\r\n */\r\nexport default class LabelBoardObject extends MarkupBoardObject {\r\n  text: string;\r\n\r\n  constructor(text: string, x = 0, y = 0, variation?: Color) {\r\n    super('LB', x, y, variation);\r\n\r\n    this.text = text;\r\n  }\r\n}\r\n","import { Point } from '../types';\r\nimport BoardObject from './BoardObject';\r\n\r\n/**\r\n * Board line object is special type of object, which consist from start and end point.\r\n */\r\nexport default class LineBoardObject extends BoardObject {\r\n  start: Point;\r\n  end: Point;\r\n\r\n  constructor(type: string, start: Point, end: Point) {\r\n    super(type);\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n}\r\n","/**\r\n * Simple base class for event handling. It tries to follow Node.js EventEmitter class API,\r\n * but contains only basic methods.\r\n */\r\nexport default class EventEmitter {\r\n  // tslint:disable-next-line:variable-name\r\n  private _events: {[eventName: string]: Function[]} = {};\r\n\r\n  on(evName: string, callback: Function) {\r\n    this._events[evName] = this._events[evName] || [];\r\n    this._events[evName].push(callback);\r\n  }\r\n\r\n  off(evName: string, callback: Function) {\r\n    if (this._events[evName]) {\r\n      if (callback == null) {\r\n        this._events[evName] = [];\r\n      }\r\n      this._events[evName] = this._events[evName].filter(fn => fn !== callback);\r\n    }\r\n  }\r\n\r\n  emit(evName: string, ...args: any[]) {\r\n    if (this._events[evName]) {\r\n      this._events[evName].forEach(fn => fn(...args));\r\n    }\r\n  }\r\n}\r\n","export type PartialRecursive<T> = {\r\n  [P in keyof T]?: T[P] | PartialRecursive<T[P]>;\r\n};\r\n\r\n/**\r\n * Helper function for merging default config with provided config.\r\n *\r\n * @param defaults\r\n * @param config\r\n */\r\nexport default function makeConfig<T>(defaults: T, config: PartialRecursive<T> & { [key: string]: any }): T {\r\n  const mergedConfig: any = {};\r\n  const defaultKeys = Object.keys(defaults);\r\n  defaultKeys.forEach((key) => {\r\n    const val = (config as any)[key];\r\n    const defVal = (defaults as any)[key];\r\n\r\n    if (val != null && val.constructor === Object && !Array.isArray(val) && defVal != null) {\r\n      mergedConfig[key] = makeConfig(defVal, val);\r\n    } else if (val !== undefined) {\r\n      mergedConfig[key] = val;\r\n    } else {\r\n      mergedConfig[key] = defVal;\r\n    }\r\n  });\r\n\r\n  Object.keys(config).forEach((key) => {\r\n    if (defaultKeys.indexOf(key) === -1) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    }\r\n  });\r\n\r\n  return mergedConfig;\r\n}\r\n","export const defaultBoardBaseTheme = {\r\n  // basic\r\n  stoneSize: 0.47,\r\n  marginSize: 0.25,\r\n  font: 'calibri',\r\n  backgroundColor: '#CEB053',\r\n  backgroundImage: '',\r\n\r\n  // markup\r\n  markupBlackColor: 'rgba(255,255,255,0.9)',\r\n  markupWhiteColor: 'rgba(0,0,0,0.7)',\r\n  markupNoneColor: 'rgba(0,0,0,0.7)',\r\n  markupLineWidth: 0.05,\r\n\r\n  // shadows\r\n  shadowColor: 'rgba(62,32,32,0.5)',\r\n  shadowTransparentColor: 'rgba(62,32,32,0)',\r\n  shadowBlur: 0.25,\r\n  shadowOffsetX: 0.07,\r\n  shadowOffsetY: 0.13,\r\n\r\n  // grid\r\n  grid: {\r\n    linesWidth: 0.03,\r\n    linesColor: '#654525',\r\n    starColor: '#531',\r\n    starSize: 0.07,\r\n  },\r\n\r\n  // coordinates\r\n  coordinates: {\r\n    color: '#531',\r\n    bold: false,\r\n    labelsX: 'ABCDEFGHJKLMNOPQRSTUVWXYZ',\r\n    labelsY: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n  },\r\n\r\n  starPoints: {\r\n    5: [{ x: 2, y: 2 }],\r\n    7: [{ x: 3, y: 3 }],\r\n    8: [{ x: 2, y: 2 }, { x: 5, y: 2 }, { x: 2, y: 5 }, { x: 5, y: 5 }],\r\n    9: [{ x: 2, y: 2 }, { x: 6, y: 2 }, { x: 4, y: 4 }, { x: 2, y: 6 }, { x: 6, y: 6 }],\r\n    10: [{ x: 2, y: 2 }, { x: 7, y: 2 }, { x: 2, y: 7 }, { x: 7, y: 7 }],\r\n    11: [{ x: 2, y: 2 }, { x: 8, y: 2 }, { x: 5, y: 5 }, { x: 2, y: 8 }, { x: 8, y: 8 }],\r\n    12: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 }],\r\n    13: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 6, y: 6 }, { x: 3, y: 9 }, { x: 9, y: 9 }],\r\n    14: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 }],\r\n    15: [{ x: 3, y: 3 }, { x: 11, y: 3 }, { x: 7, y: 7 }, { x: 3, y: 11 }, { x: 11, y: 11 }],\r\n    16: [{ x: 3, y: 3 }, { x: 12, y: 3 }, { x: 3, y: 12 }, { x: 12, y: 12 }],\r\n    17: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 13, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 },\r\n    { x: 13, y: 8 }, { x: 3, y: 13 }, { x: 8, y: 13 }, { x: 13, y: 13 }],\r\n    18: [{ x: 3, y: 3 }, { x: 14, y: 3 }, { x: 3, y: 14 }, { x: 14, y: 14 }],\r\n    19: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 15, y: 3 }, { x: 3, y: 9 }, { x: 9, y: 9 },\r\n    { x: 15, y: 9 }, { x: 3, y: 15 }, { x: 9, y: 15 }, { x: 15, y: 15 }],\r\n    20: [{ x: 3, y: 3 }, { x: 16, y: 3 }, { x: 3, y: 16 }, { x: 16, y: 16 }],\r\n    21: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 17, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 },\r\n    { x: 17, y: 10 }, { x: 3, y: 17 }, { x: 10, y: 17 }, { x: 17, y: 17 }],\r\n  },\r\n};\r\n\r\nexport const defaultBoardBaseConfig = {\r\n  size: 19,\r\n  width: 0,\r\n  height: 0,\r\n  viewport: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  coordinates: false,\r\n  theme: defaultBoardBaseTheme,\r\n};\r\n","import EventEmitter from '../utils/EventEmitter';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Board, BoardBaseConfig, BoardViewport } from './types';\r\nimport { BoardObject } from '.';\r\nimport FieldBoardObject from './FieldBoardObject';\r\nimport { defaultBoardBaseConfig } from './defaultConfig';\r\n\r\n/**\r\n * Board class with basic functionality which can be used for creating custom boards.\r\n */\r\nexport default class BoardBase extends EventEmitter implements Board {\r\n  config: BoardBaseConfig;\r\n  element: HTMLElement;\r\n  objects: BoardObject[] = [];\r\n\r\n  constructor(element: HTMLElement, config: PartialRecursive<BoardBaseConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.element = element;\r\n    this.config = makeConfig(defaultBoardBaseConfig, config);\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    // subclass may do resize things here\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    // subclass should implement this\r\n  }\r\n\r\n  /**\r\n   * Add board object. Main function for adding graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.addObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!this.hasObject(boardObject)) {\r\n      this.objects.push(boardObject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to update board object. Can be called, when some params of boardObject changes.\r\n   * It is similar to redraw(), but only boardObject can be redrawn, so performance can/should be better.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  updateObject(boardObject: BoardObject | BoardObject[]) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Remove board object. Main function for removing graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.removeObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const objectPos = this.objects.indexOf(boardObject);\r\n\r\n    if (objectPos === -1) {\r\n      // object isn't on the board, ignore it\r\n      return;\r\n    }\r\n\r\n    this.objects.splice(objectPos, 1);\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on specified field.\r\n   *\r\n   * @param x\r\n   * @param y\r\n   */\r\n  removeObjectsAt(x: number, y: number) {\r\n    this.objects.forEach((obj) => {\r\n      if (obj instanceof FieldBoardObject && obj.x === x && obj.y === y) {\r\n        this.removeObject(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on the board.\r\n   */\r\n  removeAllObjects() {\r\n    this.objects = [];\r\n  }\r\n\r\n  /**\r\n   * Returns true if object is already on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  hasObject(boardObject: BoardObject) {\r\n    return this.objects.indexOf(boardObject) >= 0;\r\n  }\r\n\r\n  /**\r\n   * Sets width of the board, height will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   */\r\n  setWidth(width: number) {\r\n    this.config.width = width;\r\n    this.config.height = 0;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets height of the board, width will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param height\r\n   */\r\n  setHeight(height: number) {\r\n    this.config.width = 0;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets exact dimensions of the board. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   * @param height\r\n   */\r\n  setDimensions(width: number, height: number) {\r\n    this.config.width = width;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n\t * Get currently visible section of the board.\r\n\t */\r\n\r\n  getViewport() {\r\n    return this.config.viewport;\r\n  }\r\n\r\n  /**\r\n\t * Set section of the board to be displayed.\r\n\t */\r\n  setViewport(viewport: BoardViewport) {\r\n    this.config.viewport = viewport;\r\n  }\r\n\r\n  /**\r\n   * Helper to get board size.\r\n   */\r\n  getSize() {\r\n    return this.config.size;\r\n  }\r\n\r\n  /**\r\n   * Helper to set board size.\r\n   */\r\n  setSize(size: number = 19) {\r\n    this.config.size = size;\r\n  }\r\n\r\n  /**\r\n   * Returns true, if coordinates around board are visible.\r\n   */\r\n  getCoordinates() {\r\n    return this.config.coordinates;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable coordinates around board.\r\n   */\r\n  setCoordinates(coordinates: boolean) {\r\n    this.config.coordinates = coordinates;\r\n  }\r\n}\r\n","import { BoardBaseConfig, BoardBaseTheme } from '../BoardBase/types';\r\nimport { BoardObject } from '../BoardBase';\r\n\r\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\r\nexport const SVG_OBJECTS = 'objects';\r\nexport const SVG_GRID_MASK = 'gridMask';\r\nexport const SVG_SHADOWS = 'shadows';\r\n\r\nexport interface BoardObjectSVGElements {\r\n  [key: string]: SVGElement;\r\n}\r\n\r\nexport interface SVGDrawHandler {\r\n  /** Should return SVG element representing the board object, can be <g> for multiple elements. */\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  /** This will be called any time, board object changes. */\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardObject, config: SVGBoardConfig): void;\r\n}\r\n\r\nexport interface SVGBoardTheme extends BoardBaseTheme {\r\n  markupGridMask: number;\r\n\r\n  coordinates: BoardBaseTheme['coordinates'] & {\r\n    fontSize: number,\r\n    top: boolean,\r\n    right: boolean,\r\n    bottom: boolean,\r\n    left: boolean,\r\n  };\r\n\r\n  drawHandlers: {\r\n    [key: string]: SVGDrawHandler;\r\n  };\r\n}\r\n\r\nexport interface SVGBoardConfig extends BoardBaseConfig {\r\n  theme: SVGBoardTheme;\r\n}\r\n\r\nexport interface SVGCustomObject extends BoardObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n\r\nexport type SVGBoardObject = BoardObject | SVGCustomObject;\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport { LineBoardObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Arrow implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    return {\r\n      [SVG_OBJECTS]: this.createSVGElements(),\r\n      [SVG_GRID_MASK]: this.createSVGElements(),\r\n    };\r\n  }\r\n\r\n  protected createSVGElements() {\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    const startCircle = document.createElementNS(SVG_NS, 'circle');\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const endTriangle = document.createElementNS(SVG_NS, 'polygon');\r\n\r\n    group.appendChild(startCircle);\r\n    group.appendChild(line);\r\n    group.appendChild(endTriangle);\r\n    return group;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LineBoardObject, config: SVGBoardConfig) {\r\n    // basic UI definitions\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('fill', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    this.updateSVGElements(elem[SVG_OBJECTS], boardObject);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute(\r\n      'stroke-width',\r\n      (this.params.lineWidth || config.theme.markupLineWidth) * 3 as any,\r\n    );\r\n    this.updateSVGElements(elem[SVG_GRID_MASK], boardObject);\r\n  }\r\n\r\n  protected updateSVGElements(elem: SVGElement, boardObject: LineBoardObject) {\r\n    // SVG elements of arrow\r\n    const startCircle = elem.children[0];\r\n    const line = elem.children[1];\r\n    const endTriangle = elem.children[2];\r\n\r\n    const x1 = boardObject.start.x;\r\n    const y1 = boardObject.start.y;\r\n    const x2 = boardObject.end.x;\r\n    const y2 = boardObject.end.y;\r\n\r\n    // length of the main line\r\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\r\n    // line parametric functions\r\n    const getLineX = (t: number) => x1 + t * (x2 - x1);\r\n    const getLineY = (t: number) => y1 + t * (y2 - y1);\r\n\r\n    // triangle base line position on the main line\r\n    const triangleLen = 1 / length / 2.5;\r\n    const tx = getLineX(1 - triangleLen);\r\n    const ty = getLineY(1 - triangleLen);\r\n\r\n    // triangle base line parametric functions\r\n    const getBaseLineX = (t: number) => tx + t * (y2 - y1);\r\n    const getBaseLineY = (t: number) => ty + t * (x1 - x2);\r\n\r\n    // initial circle length\r\n    const circleLen = 0.1;\r\n\r\n    // draw initial circle\r\n    startCircle.setAttribute('cx', x1 as any);\r\n    startCircle.setAttribute('cy', y1 as any);\r\n    startCircle.setAttribute('r', circleLen as any);\r\n\r\n    // draw line\r\n    line.setAttribute('x1', getLineX(1 / length * circleLen) as any);\r\n    line.setAttribute('y1', getLineY(1 / length * circleLen) as any);\r\n    line.setAttribute('x2', tx as any);\r\n    line.setAttribute('y2', ty as any);\r\n\r\n    // draw triangle at the end to make arrow\r\n    endTriangle.setAttribute('points', `\r\n      ${getBaseLineX(- triangleLen / 1.75)},${getBaseLineY(- triangleLen / 1.75)}\r\n      ${getBaseLineX(triangleLen / 1.75)},${getBaseLineY(triangleLen / 1.75)}\r\n      ${x2},${y2}\r\n    `);\r\n  }\r\n}\r\n","\r\nimport { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { FieldBoardObject } from '../../BoardBase';\r\n\r\nexport default abstract class SVGFieldDrawHandler implements SVGDrawHandler {\r\n  // tslint:disable-next-line:max-line-length\r\n  abstract createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: FieldBoardObject, config: SVGBoardConfig) {\r\n    const transform = `translate(${boardObject.x}, ${boardObject.y})`;\r\n    const scale = `scale(${boardObject.scaleX}, ${boardObject.scaleY})`;\r\n    const rotate = `rotate(${boardObject.rotate})`;\r\n\r\n    Object.keys(elem).forEach((ctx) => {\r\n      elem[ctx].setAttribute('transform', `${transform} ${scale} ${rotate}`);\r\n      elem[ctx].setAttribute('opacity', boardObject.opacity as any);\r\n    });\r\n  }\r\n}\r\n","import { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { MarkupBoardObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport interface SVGMarkupDrawHandlerParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n  fillColor?: string;\r\n}\r\n\r\nexport default abstract class SVGMarkupDrawHandler extends SVGFieldDrawHandler {\r\n  params: SVGMarkupDrawHandlerParams;\r\n\r\n  constructor(params: SVGMarkupDrawHandlerParams = {}) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: MarkupBoardObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    if (boardObject.variation === Color.B) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupBlackColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else if (boardObject.variation === Color.W) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupWhiteColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    }\r\n\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Circle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.25');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.35');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: circle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dim extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const rect = document.createElementNS(SVG_NS, 'rect');\r\n    rect.setAttribute('x', '-0.5');\r\n    rect.setAttribute('y', '-0.5');\r\n    rect.setAttribute('width', '1');\r\n    rect.setAttribute('height', '1');\r\n    rect.setAttribute('fill', this.params.color);\r\n\r\n    return rect;\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dot extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.15');\r\n    circle.setAttribute('fill', this.params.color);\r\n\r\n    return circle;\r\n  }\r\n}\r\n","export default function generateId(prefix: string) {\r\n  return `${prefix}-${Math.floor(Math.random() * 1000000000).toString(36)}`;\r\n}\r\n","import SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, BoardObjectSVGElements } from '../types';\r\nimport generateId from '../generateId';\r\n\r\nexport default abstract class SVGStoneDrawHandler extends SVGFieldDrawHandler {\r\n  shadowFilterElement: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements {\r\n    /*if (!this.shadowFilterElement) {\r\n      this.shadowFilterElement = document.createElementNS(NS, 'filter');\r\n      this.shadowFilterElement.setAttribute('id', generateId('filter'));\r\n      this.shadowFilterElement.innerHTML = `\r\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"0.05\" />\r\n        <feOffset dx=\"0.03\" dy=\"0.03\" result=\"offsetblur\" />\r\n        <feComponentTransfer>\r\n          <feFuncA type=\"linear\" slope=\"0.5\" />\r\n        </feComponentTransfer>\r\n        <feMerge>\r\n          <feMergeNode />\r\n          <feMergeNode in=\"SourceGraphic\" />\r\n        </feMerge>\r\n      `;\r\n\r\n      addDef(this.shadowFilterElement);\r\n    }*/\r\n\r\n    return null;\r\n  }\r\n\r\n  createShadow(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    const stoneRadius = config.theme.stoneSize;\r\n\r\n    if (!this.shadowFilterElement) {\r\n      const shadowFilterElement = document.createElementNS(SVG_NS, 'radialGradient');\r\n      const blur = config.theme.shadowBlur;\r\n\r\n      const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n      const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n      shadowFilterElement.setAttribute('id', generateId('shadowFilter'));\r\n      shadowFilterElement.setAttribute('fr', String(startRadius));\r\n      shadowFilterElement.setAttribute('r', String(stopRadius));\r\n      shadowFilterElement.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"${config.theme.shadowColor}\" />\r\n        <stop offset=\"100%\" stop-color=\"${config.theme.shadowTransparentColor}\" />\r\n      `;\r\n\r\n      addDef(shadowFilterElement);\r\n      this.shadowFilterElement = shadowFilterElement;\r\n    }\r\n\r\n    const shadow = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    shadow.setAttribute('cx', String(config.theme.shadowOffsetX));\r\n    shadow.setAttribute('cy', String(config.theme.shadowOffsetY));\r\n    shadow.setAttribute('r', String(stoneRadius));\r\n    shadow.setAttribute('fill', `url(#${this.shadowFilterElement.id})`);\r\n\r\n    return shadow;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneBlack extends SVGStoneDrawHandler {\r\n  filterElement: SVGFilterElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement) {\r\n      const filter = document.createElementNS(SVG_NS, 'filter');\r\n\r\n      filter.setAttribute('id', generateId('filter'));\r\n      filter.setAttribute('x', '-300%');\r\n      filter.setAttribute('y', '-300%');\r\n      filter.setAttribute('width', '600%');\r\n      filter.setAttribute('height', '600%');\r\n\r\n      const blur = document.createElementNS(SVG_NS, 'feGaussianBlur');\r\n\r\n      blur.setAttribute('in', 'SourceGraphic');\r\n      blur.setAttribute('stdDeviation', 0.3 * config.theme.stoneSize as any);\r\n      filter.appendChild(blur);\r\n\r\n      this.filterElement = filter;\r\n      addDef(filter);\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#000');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('cy', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('r', 0.25 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', '#fff');\r\n    glow1.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('cy', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('r', 0.15 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', '#fff');\r\n    glow2.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('fx', '30%');\r\n      filter1.setAttribute('fy', '30%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.9)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n\r\n      const filter2 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter2.setAttribute('id', generateId('filter'));\r\n      filter2.setAttribute('fx', '70%');\r\n      filter2.setAttribute('fy', '70%');\r\n      filter2.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.7)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter2);\r\n      this.filterElement2 = filter2;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#ccc');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', '0');\r\n    glow1.setAttribute('cy', '0');\r\n    glow1.setAttribute('r', config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', '0');\r\n    glow2.setAttribute('cy', '0');\r\n    glow2.setAttribute('r', config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', `url(#${this.filterElement2.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler, { SVGMarkupDrawHandlerParams } from './SVGMarkupDrawHandler';\r\nimport { LabelBoardObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\n\r\ninterface LabelParams extends SVGMarkupDrawHandlerParams {\r\n  font?: string;\r\n  maxWidth?: number;\r\n}\r\n\r\nexport default class Label extends SVGMarkupDrawHandler {\r\n  params: LabelParams;\r\n\r\n  constructor(params: LabelParams = {}) {\r\n    super(params);\r\n\r\n    if (!params.maxWidth && params.maxWidth !== 0) {\r\n      params.maxWidth = 0.95;\r\n    }\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const text = document.createElementNS(SVG_NS, 'text');\r\n    text.setAttribute('text-anchor', 'middle');\r\n    text.setAttribute('dominant-baseline', 'middle');\r\n    text.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'text');\r\n    mask.setAttribute('text-anchor', 'middle');\r\n    mask.setAttribute('dominant-baseline', 'middle');\r\n    mask.setAttribute('stroke-width', '0.2');\r\n    mask.setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    mask.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: text,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LabelBoardObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    let fontSize = 0.5;\r\n    if (boardObject.text.length === 1) {\r\n      fontSize = 0.7;\r\n    } else if (boardObject.text.length === 2) {\r\n      fontSize = 0.6;\r\n    }\r\n\r\n    if (this.params.color) {\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.color);\r\n    } else {\r\n      if (boardObject.variation === Color.B) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupBlackColor);\r\n      } else if (boardObject.variation === Color.W) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupWhiteColor);\r\n      } else {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupNoneColor);\r\n      }\r\n    }\r\n\r\n    elem[SVG_OBJECTS].removeAttribute('stroke');\r\n    elem[SVG_OBJECTS].setAttribute('font-family', this.params.font || config.theme.font);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', '0');\r\n    elem[SVG_OBJECTS].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_OBJECTS].textContent = boardObject.text;\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_GRID_MASK].textContent = boardObject.text;\r\n\r\n    if (this.params.maxWidth > 0) {\r\n      if ((elem[SVG_OBJECTS] as SVGTextElement).getComputedTextLength() > this.params.maxWidth) {\r\n        elem[SVG_OBJECTS].setAttribute('textLength', `${this.params.maxWidth}`);\r\n        elem[SVG_GRID_MASK].setAttribute('textLength', `${this.params.maxWidth}`);\r\n      } else {\r\n        elem[SVG_OBJECTS].removeAttribute('textLength');\r\n        elem[SVG_GRID_MASK].removeAttribute('textLength');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, BoardObjectSVGElements, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport { LineBoardObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Line implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const mask = document.createElementNS(SVG_NS, 'line');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: line,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LineBoardObject, config: SVGBoardConfig) {\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    elem[SVG_OBJECTS].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_OBJECTS].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y2', boardObject.end.y as any);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute(\r\n      'stroke-width',\r\n      (this.params.lineWidth || config.theme.markupLineWidth) * 2 as any,\r\n    );\r\n    elem[SVG_GRID_MASK].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_GRID_MASK].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y2', boardObject.end.y as any);\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(48,48,48,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(16,16,16,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(0,0,0,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(255,255,255,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(215,215,215,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(170,170,170,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, SVG_OBJECTS } from '../types';\r\n\r\nexport default class RealisticStone extends SVGStoneDrawHandler {\r\n  paths: string[];\r\n  fallback: SVGFieldDrawHandler;\r\n  randSeed: number;\r\n  loadedPaths: { [path: string]: boolean };\r\n\r\n  constructor (paths: string[], fallback: SVGFieldDrawHandler) {\r\n    super();\r\n    this.fallback = fallback;\r\n    this.randSeed = Math.ceil(Math.random() * 9999999);\r\n    this.paths = paths;\r\n    this.loadedPaths = {};\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    const id = Math.floor(Math.random() * this.paths.length);\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    let fallbackElement: any;\r\n\r\n    if (!this.loadedPaths[id]) {\r\n      fallbackElement = this.fallback.createElement(config, addDef);\r\n\r\n      if (!(fallbackElement instanceof SVGElement)) {\r\n        fallbackElement = fallbackElement[SVG_OBJECTS];\r\n      }\r\n\r\n      group.appendChild(fallbackElement);\r\n    }\r\n\r\n    const image = document.createElementNS(SVG_NS, 'image');\r\n    image.setAttribute('href', this.paths[id]);\r\n    image.setAttribute('width', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('height', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('x', -config.theme.stoneSize as any);\r\n    image.setAttribute('y', -config.theme.stoneSize as any);\r\n    if (!this.loadedPaths[id]) {\r\n      image.setAttribute('opacity', '0');\r\n    }\r\n    image.addEventListener('load', () => {\r\n      if (fallbackElement) {\r\n        image.setAttribute('opacity', '1');\r\n        group.removeChild(fallbackElement as SVGElement);\r\n        this.loadedPaths[id] = true;\r\n      }\r\n    });\r\n\r\n    group.appendChild(image);\r\n\r\n    return group;\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class SimpleStone extends SVGFieldDrawHandler {\r\n  color: string;\r\n\r\n  constructor(color: string) {\r\n    super();\r\n    this.color = color;\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stone.setAttribute('fill', this.color);\r\n\r\n    return stone;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Square extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const square = document.createElementNS(SVG_NS, 'rect');\r\n    square.setAttribute('x', '-0.25');\r\n    square.setAttribute('y', '-0.25');\r\n    square.setAttribute('width', '0.50');\r\n    square.setAttribute('height', '0.50');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'rect');\r\n    mask.setAttribute('x', '-0.35');\r\n    mask.setAttribute('y', '-0.35');\r\n    mask.setAttribute('width', '0.70');\r\n    mask.setAttribute('height', '0.70');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: square,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Triangle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const triangle = document.createElementNS(SVG_NS, 'polygon');\r\n    triangle.setAttribute('points', '0,-0.25 -0.25,0.166666 0.25,0.166666');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'polygon');\r\n    mask.setAttribute('points', '0,-0.35 -0.35,0.2333333 0.35,0.2333333');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: triangle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class XMark extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const path = document.createElementNS(SVG_NS, 'path');\r\n    path.setAttribute('d', 'M -0.20,-0.20 L 0.20,0.20 M 0.20,-0.20 L -0.20,0.20');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.15');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: path,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction line(fromX: number, fromY: number, toX: number, toY: number) {\r\n  const line = document.createElementNS(SVG_NS, 'line');\r\n  line.setAttribute('x1', fromX as any);\r\n  line.setAttribute('y1', fromY as any);\r\n  line.setAttribute('x2', toX as any);\r\n  line.setAttribute('y2', toY as any);\r\n\r\n  return line;\r\n}\r\n\r\nfunction star(x: number, y: number, starSize: number) {\r\n  const star = document.createElementNS(SVG_NS, 'circle');\r\n  star.setAttribute('cx', x as any);\r\n  star.setAttribute('cy', y as any);\r\n  star.setAttribute('r', starSize as any);\r\n  star.setAttribute('fill', '#553310');\r\n  star.setAttribute('stroke-width', '0');\r\n\r\n  return star;\r\n}\r\n\r\nexport default function createGrid(config: SVGBoardConfig) {\r\n  const { linesWidth } = config.theme.grid;\r\n\r\n  const grid = document.createElementNS(SVG_NS, 'g');\r\n  grid.setAttribute('stroke', config.theme.grid.linesColor);\r\n  grid.setAttribute('stroke-width', linesWidth.toString());\r\n  grid.setAttribute('fill', config.theme.grid.starColor);\r\n\r\n  for (let i = 0; i < config.size; i++) {\r\n    grid.appendChild(line(i, 0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2));\r\n    grid.appendChild(line(0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2, i));\r\n  }\r\n\r\n  const starPoints = config.theme.starPoints[config.size];\r\n\r\n  if (starPoints) {\r\n    starPoints.forEach((starPoint) => {\r\n      grid.appendChild(star(starPoint.x, starPoint.y, config.theme.grid.starSize));\r\n    });\r\n  }\r\n  return grid;\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction letter(x: number, y: number, str: string) {\r\n  const text = document.createElementNS(SVG_NS, 'text');\r\n  text.setAttribute('x', x as any);\r\n  text.setAttribute('y', y as any);\r\n  text.textContent = str;\r\n\r\n  return text;\r\n}\r\n\r\nexport default function createCoordinates(config: SVGBoardConfig) {\r\n  const coordinates = document.createElementNS(SVG_NS, 'g');\r\n  coordinates.style.userSelect = 'none';\r\n\r\n  const { size } = config;\r\n  const {\r\n    fontSize,\r\n    color,\r\n    labelsX,\r\n    labelsY,\r\n    top,\r\n    bottom,\r\n    right,\r\n    left,\r\n  } = config.theme.coordinates;\r\n\r\n  coordinates.setAttribute('font-family', config.theme.font);\r\n  coordinates.setAttribute('font-size', fontSize as any);\r\n  coordinates.setAttribute('text-anchor', 'middle');\r\n  coordinates.setAttribute('dominant-baseline', 'middle');\r\n\r\n  if (config.theme.coordinates.bold) {\r\n    coordinates.setAttribute('font-weight', 'bold');\r\n  }\r\n\r\n  coordinates.setAttribute('fill', color);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    if (top) {\r\n      coordinates.appendChild(letter(i, -0.75, labelsX[i] as string));\r\n    }\r\n    if (bottom) {\r\n      coordinates.appendChild(letter(i, size - 0.25, labelsX[i] as string));\r\n    }\r\n    if (left) {\r\n      coordinates.appendChild(letter(-0.75, size - i - 1, labelsY[i] as string));\r\n    }\r\n    if (right) {\r\n      coordinates.appendChild(letter(size - 0.25, size - i - 1, labelsY[i] as string));\r\n    }\r\n  }\r\n\r\n  return coordinates;\r\n}\r\n","import { defaultBoardBaseTheme } from '../BoardBase/defaultConfig';\r\nimport { SVGBoardTheme } from './types';\r\nimport * as drawHandlers from './svgDrawHandlers';\r\nimport ModernStoneWhite from './svgDrawHandlers/ModernStoneWhite';\r\nimport ModernStoneBlack from './svgDrawHandlers/ModernStoneBlack';\r\n\r\nconst defaultSVGTheme: SVGBoardTheme = {\r\n  ...defaultBoardBaseTheme,\r\n  // backgroundImage: 'images/wood1.jpg',\r\n  markupGridMask: 0.8,\r\n  stoneSize: 0.48,\r\n\r\n  coordinates: {\r\n    ...defaultBoardBaseTheme.coordinates,\r\n    fontSize: 0.5,\r\n    top: true,\r\n    right: true,\r\n    bottom: true,\r\n    left: true,\r\n  },\r\n\r\n  grid: {\r\n    ...defaultBoardBaseTheme.grid,\r\n    linesWidth: 0.03,\r\n    starSize: 0.09,\r\n  },\r\n\r\n  drawHandlers: {\r\n    CR: new drawHandlers.Circle(),\r\n    SQ: new drawHandlers.Square(),\r\n    LB: new drawHandlers.Label(),\r\n    TR: new drawHandlers.Triangle(),\r\n    MA: new drawHandlers.XMark({ lineWidth: 0.075 }),\r\n    SL: new drawHandlers.Dot({ color: 'rgba(32, 32, 192, 0.75)' }),\r\n    LN: new drawHandlers.Line(),\r\n    AR: new drawHandlers.Arrow(),\r\n    DD: new drawHandlers.Dim({ color: 'rgba(0, 0, 0, 0.5)' }),\r\n    // B: new drawHandlers.GlassStoneBlack(),\r\n    // W: new drawHandlers.GlassStoneWhite(),\r\n    W: new ModernStoneWhite(),\r\n    B: new ModernStoneBlack(),\r\n    /*B: new drawHandlers.RealisticStone([\r\n      'images/stones/black00_128.png',\r\n      'images/stones/black01_128.png',\r\n      'images/stones/black02_128.png',\r\n      'images/stones/black03_128.png',\r\n    ], new drawHandlers.GlassStoneBlack()),\r\n    W: new drawHandlers.RealisticStone([\r\n      'images/stones/white00_128.png',\r\n      'images/stones/white01_128.png',\r\n      'images/stones/white02_128.png',\r\n      'images/stones/white03_128.png',\r\n      'images/stones/white04_128.png',\r\n      'images/stones/white05_128.png',\r\n      'images/stones/white06_128.png',\r\n      'images/stones/white07_128.png',\r\n      'images/stones/white08_128.png',\r\n      'images/stones/white09_128.png',\r\n      'images/stones/white10_128.png',\r\n    ], new drawHandlers.GlassStoneWhite()),*/\r\n  },\r\n};\r\n\r\nexport default defaultSVGTheme;\r\n","export enum PropIdent {\r\n  // Move Properties\r\n  BLACK_MOVE = 'B',\r\n  EXECUTE_ILLEGAL = 'KO',\r\n  MOVE_NUMBER = 'MN',\r\n  WHITE_MOVE = 'W',\r\n\r\n  // Setup Properties\r\n  ADD_BLACK = 'AB',\r\n  CLEAR_FIELD = 'AE',\r\n  ADD_WHITE = 'AW',\r\n  SET_TURN = 'PL',\r\n\r\n  // Node Annotation Properties\r\n  COMMENT = 'C',\r\n  EVEN_POSITION = 'DM',\r\n  GOOD_FOR_BLACK = 'GB',\r\n  GOOD_FOR_WHITE = 'GW',\r\n  HOTSPOT = 'HO',\r\n  NODE_NAME = 'N',\r\n  UNCLEAR_POSITION = 'UC',\r\n  NODE_VALUE = 'V',\r\n\r\n  // Move Annotation Properties\r\n  BAD_MOVE = 'BM',\r\n  DOUBTFUL_MOVE = 'DM',\r\n  INTERESTING_MOVE = 'IT',\r\n  GOOD_MOVE = 'TE',\r\n\r\n  // Markup Properties\r\n  ARROW = 'AR',\r\n  CIRCLE = 'CR',\r\n  DIM = 'DD',\r\n  LABEL = 'LB',\r\n  LINE = 'LN',\r\n  X_MARK = 'MA',\r\n  SELECTED = 'SL',\r\n  SQUARE = 'SQ',\r\n  TRIANGLE = 'TR',\r\n\r\n  // Root Properties\r\n  APPLICATION = 'AP',\r\n  CHARSET = 'CA',\r\n  SGF_VERSION = 'FF',\r\n  GAME_TYPE = 'GM',\r\n  VARIATIONS_STYLE = 'ST',\r\n  BOARD_SIZE = 'SZ',\r\n\r\n  // Game Info Properties\r\n  ANNOTATOR = 'AN',\r\n  BLACK_RANK = 'BR',\r\n  BLACK_TEAM = 'BT',\r\n  COPYRIGHT = 'CP',\r\n  DATE = 'DT',\r\n  EVENT = 'EV',\r\n  GAME_NAME = 'GN',\r\n  GAME_COMMENT = 'GC',\r\n  OPENING_INFO = 'ON',\r\n  OVER_TIME = 'OT',\r\n  BLACK_NAME = 'BN',\r\n  PLACE = 'PC',\r\n  WHITE_NAME = 'PW',\r\n  RESULT = 'RE',\r\n  ROUND = 'RO',\r\n  RULES = 'RU',\r\n  SOURCE = 'SO',\r\n  TIME_LIMITS = 'TM',\r\n  AUTHOR = 'US',\r\n  WHITE_RANK = 'WR',\r\n  WHITE_TEAM = 'WT',\r\n\r\n  // Timing Properties\r\n  BLACK_TIME_LEFT = 'BL',\r\n  BLACK_STONES_LEFT = 'OB',\r\n  WHITE_STONES_LEFT = 'OW',\r\n  WHITE_TIME_LEFT = 'WL',\r\n\r\n  // Miscellaneous Properties\r\n  FIGURE = 'FG',\r\n  PRINT_MOVE_NUMBERS = 'PM',\r\n  BOARD_SECTION = 'VW',\r\n  HANDICAP = 'HA',\r\n\r\n  // GO specific Properties\r\n  KOMI = 'KM',\r\n  BLACK_TERRITORY = 'TB',\r\n  WHITE_TERRITORY = 'TW',\r\n}\r\n\r\nexport type SGFProperties = {\r\n  [key in PropIdent]?: string[];\r\n};\r\n\r\nexport type SGFNode = SGFProperties;\r\n\r\nexport interface SGFGameTree {\r\n  sequence: SGFNode[];\r\n  children: SGFGameTree[];\r\n}\r\n\r\nexport type SGFCollection = SGFGameTree[];\r\n","import { BoardBase, BoardViewport } from '../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport createGrid from './createGrid';\r\nimport createCoordinates from './createCoordinates';\r\nimport {\r\n  SVGDrawHandler,\r\n  SVGBoardConfig,\r\n  SVG_NS,\r\n  SVG_OBJECTS,\r\n  BoardObjectSVGElements,\r\n  SVG_GRID_MASK,\r\n  SVG_SHADOWS,\r\n  SVGBoardObject,\r\n} from './types';\r\nimport { defaultBoardBaseConfig } from '../BoardBase/defaultConfig';\r\nimport defaultSVGTheme from './defaultSVGTheme';\r\nimport generateId from './generateId';\r\nimport { Point } from '../types';\r\n\r\nconst svgBoardDefaultConfig: SVGBoardConfig = {\r\n  ...defaultBoardBaseConfig,\r\n  theme: defaultSVGTheme,\r\n};\r\n\r\nexport default class SVGBoard extends BoardBase {\r\n  config: SVGBoardConfig;\r\n  boardElement: HTMLElement;\r\n  touchArea: HTMLElement;\r\n  svgElement: SVGElement;\r\n  defsElement: SVGElement;\r\n  objects: SVGBoardObject[] = [];\r\n  objectsElementMap: Map<SVGBoardObject, BoardObjectSVGElements>;\r\n  top: number;\r\n  left: number;\r\n  bottom: number;\r\n  right: number;\r\n\r\n  /** Drawing contexts - elements to put additional board objects. Similar to layers. */\r\n  contexts: {\r\n    [key: string]: SVGElement;\r\n  } = {};\r\n\r\n  constructor (elem: HTMLElement, config: PartialRecursive<SVGBoardConfig> = {}) {\r\n    super(elem, makeConfig(svgBoardDefaultConfig, config));\r\n\r\n    this.boardElement = document.createElement('div');\r\n    this.boardElement.style.display = 'inline-block';\r\n    this.boardElement.style.position = 'relative';\r\n    this.boardElement.style.verticalAlign = 'middle';\r\n    this.boardElement.style.userSelect = 'none';\r\n    this.element.appendChild(this.boardElement);\r\n\r\n    this.touchArea = document.createElement('div');\r\n    this.touchArea.style.position = 'absolute';\r\n    this.touchArea.style.top = '0';\r\n    this.touchArea.style.left = '0';\r\n    this.touchArea.style.bottom = '0';\r\n    this.touchArea.style.right = '0';\r\n    this.touchArea.style.zIndex = '1';\r\n    this.touchArea.style.borderTop = '#F0E7A7 solid 1px';\r\n    this.touchArea.style.borderRight = '#D1A974 solid 1px';\r\n    this.touchArea.style.borderLeft = '#CCB467 solid 1px';\r\n    this.touchArea.style.borderBottom = '#665926 solid 1px';\r\n    this.boardElement.appendChild(this.touchArea);\r\n\r\n    this.svgElement = document.createElementNS(SVG_NS, 'svg');\r\n    this.svgElement.style.display = 'block';\r\n    this.boardElement.appendChild(this.svgElement);\r\n\r\n    this.defsElement = document.createElementNS(SVG_NS, 'defs');\r\n    this.svgElement.appendChild(this.defsElement);\r\n\r\n    this.setViewport();\r\n    this.resize();\r\n    this.redraw();\r\n  }\r\n\r\n  resize() {\r\n    if (this.config.width && this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else if (this.config.width) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = 'auto';\r\n    } else if (this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = 'auto';\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else {\r\n      this.boardElement.style.width = '100%';\r\n      this.svgElement.style.width = '100%';\r\n      this.svgElement.style.height = 'auto';\r\n    }\r\n  }\r\n\r\n  redraw() {\r\n    this.svgElement.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n    if (this.config.theme.backgroundImage) {\r\n      this.svgElement.style.backgroundImage = `url('${this.config.theme.backgroundImage}')`;\r\n    } else {\r\n      this.svgElement.style.backgroundImage = '';\r\n    }\r\n\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.drawObjects();\r\n  }\r\n\r\n  drawGrid() {\r\n    if (this.contexts[SVG_GRID_MASK]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_GRID_MASK]);\r\n    }\r\n\r\n    if (this.contexts.gridElement) {\r\n      this.svgElement.removeChild(this.contexts.gridElement);\r\n    }\r\n\r\n    // create grid mask\r\n    const { size } = this.config;\r\n    this.contexts[SVG_GRID_MASK] = document.createElementNS(SVG_NS, 'mask');\r\n    this.contexts[SVG_GRID_MASK].id = generateId('mask');\r\n    this.contexts[SVG_GRID_MASK].innerHTML = `<rect x=\"-0.5\" y=\"-0.5\" width=\"${size}\" height=\"${size}\" fill=\"white\" />`;\r\n    this.svgElement.appendChild(this.contexts[SVG_GRID_MASK]);\r\n\r\n    // create grid\r\n    this.contexts.gridElement = createGrid(this.config);\r\n    this.contexts.gridElement.setAttribute('mask', `url(#${this.contexts[SVG_GRID_MASK].id})`);\r\n    this.svgElement.appendChild(this.contexts.gridElement);\r\n  }\r\n\r\n  drawCoordinates() {\r\n    if (this.contexts.coordinatesElement) {\r\n      this.svgElement.removeChild(this.contexts.coordinatesElement);\r\n    }\r\n\r\n    this.contexts.coordinatesElement = createCoordinates(this.config);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.svgElement.appendChild(this.contexts.coordinatesElement);\r\n  }\r\n\r\n  drawObjects() {\r\n    // remove old shadows layer\r\n    if (this.contexts[SVG_SHADOWS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_SHADOWS]);\r\n    }\r\n\r\n    // remove old objects layer\r\n    if (this.contexts[SVG_OBJECTS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_OBJECTS]);\r\n    }\r\n\r\n    // append new shadows layer\r\n    this.contexts[SVG_SHADOWS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_SHADOWS]);\r\n\r\n    // append new object layer\r\n    this.contexts[SVG_OBJECTS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_OBJECTS]);\r\n\r\n    // prepare map for objects and add all objects\r\n    this.objectsElementMap = new Map();\r\n    this.objects.forEach(boardObject => this.createObjectElements(boardObject));\r\n  }\r\n\r\n  addObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.addObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      if (this.objectsElementMap.get(boardObject)) {\r\n        // already added - just redraw it\r\n        this.updateObject(boardObject);\r\n        return;\r\n      }\r\n\r\n      this.createObjectElements(boardObject);\r\n    }\r\n  }\r\n\r\n  protected createObjectElements(boardObject: SVGBoardObject) {\r\n    const handler = this.getObjectHandler(boardObject);\r\n\r\n    // create element or elements and add them to the svg\r\n    const elem = handler.createElement(this.config, (def: SVGElement) => this.defsElement.appendChild(def));\r\n    let elements: BoardObjectSVGElements;\r\n\r\n    if (elem instanceof SVGElement) {\r\n      elements = { [SVG_OBJECTS]: elem };\r\n    } else {\r\n      elements = elem;\r\n    }\r\n    this.objectsElementMap.set(boardObject, elements);\r\n    Object.keys(elements).forEach(key => this.contexts[key].appendChild(elements[key]));\r\n\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  getObjectHandler(boardObject: SVGBoardObject) {\r\n    return 'handler' in boardObject ? boardObject.handler : this.config.theme.drawHandlers[boardObject.type];\r\n  }\r\n\r\n  removeObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.removeObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      const elements = this.objectsElementMap.get(boardObject);\r\n      if (elements) {\r\n        this.objectsElementMap.delete(boardObject);\r\n        Object.keys(elements).forEach(key => this.contexts[key].removeChild(elements[key]));\r\n      }\r\n    }\r\n  }\r\n\r\n  updateObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.updateObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const elements = this.objectsElementMap.get(boardObject);\r\n\r\n    if (!elements) {\r\n      // updated object isn't on board - ignore, add or warning?\r\n      return;\r\n    }\r\n\r\n    const handler = this.getObjectHandler(boardObject);\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  setViewport(viewport: BoardViewport = this.config.viewport) {\r\n    super.setViewport(viewport);\r\n\r\n    const { coordinates, theme, size } = this.config;\r\n    const {\r\n      marginSize,\r\n      coordinates: {\r\n        fontSize,\r\n        top: coordinatesTop,\r\n        left: coordinatesLeft,\r\n        bottom: coordinatesBottom,\r\n        right: coordinatesRight,\r\n      },\r\n    } = theme;\r\n\r\n    this.top = viewport.top - 0.5 - (coordinates && coordinatesTop && !viewport.top ? fontSize : 0) - marginSize;\r\n    this.left = viewport.left - 0.5 - (coordinates && coordinatesLeft && !viewport.left ? fontSize : 0) - marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.bottom = size - 0.5 - this.top - viewport.bottom + (coordinates && coordinatesBottom && !viewport.bottom ? fontSize : 0) + marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.right = size - 0.5 - this.left - viewport.right + (coordinates && coordinatesRight && !viewport.right ? fontSize : 0) + marginSize;\r\n    this.svgElement.setAttribute('viewBox', `${this.left} ${this.top} ${this.right} ${this.bottom}`);\r\n  }\r\n\r\n  setSize(size: number = 19) {\r\n    super.setSize(size);\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.setViewport();\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    super.setCoordinates(coordinates);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.setViewport();\r\n  }\r\n\r\n  on(type: string, callback: (event: UIEvent, point: Point) => void) {\r\n    super.on(type, callback);\r\n    this.registerBoardListener(type);\r\n  }\r\n\r\n  registerBoardListener(type: string) {\r\n    this.touchArea.addEventListener(type, (evt) => {\r\n      if ((evt as any).layerX != null) {\r\n        const pos = this.getRelativeCoordinates((evt as any).layerX, (evt as any).layerY);\r\n        this.emit(type, evt, pos);\r\n      } else {\r\n        this.emit(type, evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRelativeCoordinates(absoluteX: number, absoluteY: number) {\r\n    // new hopefully better translation of coordinates\r\n\r\n    const fieldWidth = this.touchArea.offsetWidth / (this.right);\r\n    const fieldHeight = this.touchArea.offsetHeight / (this.bottom);\r\n\r\n    const x = Math.round((absoluteX / fieldWidth + this.left));\r\n    const y = Math.round((absoluteY / fieldHeight + this.top));\r\n\r\n    if (x < 0 || x >= this.config.size || y < 0 || y >= this.config.size) {\r\n      return null;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { LifeCycleEvent } from './types';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../types';\r\nimport { goRules } from '../Game';\r\n\r\nexport function beforeInitSZ(event: LifeCycleEvent<number>) {\r\n  event.target.params.size = event.value;\r\n}\r\n\r\nexport function beforeInitRU(event: LifeCycleEvent<string>) {\r\n  if ((goRules as any)[event.value]) {\r\n    event.target.params.rules = (goRules as any)[event.value];\r\n  }\r\n}\r\n\r\nexport function applyGameChangesHA(event: LifeCycleEvent<number>) {\r\n  if (\r\n    event.value > 1 &&\r\n    event.target.currentNode === event.target.rootNode &&\r\n    !event.target.getProperty(PropIdent.SET_TURN)\r\n  ) {\r\n    event.target.game.position.turn = Color.WHITE;\r\n  }\r\n}\r\n\r\nexport function applyGameChangesMove(event: LifeCycleEvent<Point>) {\r\n  const color = event.propIdent === 'B' ? Color.B : Color.W;\r\n\r\n  // if this is false, move is pass\r\n  if (event.value) {\r\n    event.target.game.position.applyMove(event.value.x, event.value.y, color, true, true);\r\n  }\r\n\r\n  event.target.game.position.turn = -color;\r\n}\r\n\r\nexport function applyGameChangesPL(event: LifeCycleEvent<Color.BLACK | Color.WHITE>) {\r\n  event.target.game.turn = event.value;\r\n}\r\n\r\nexport function applyGameChangesSetup(event: LifeCycleEvent<Point[]>) {\r\n  let color: Color;\r\n  switch (event.propIdent) {\r\n    case 'AB': color = Color.B; break;\r\n    case 'AW': color = Color.W; break;\r\n    case 'AE': color = Color.E; break;\r\n  }\r\n\r\n  event.value.forEach((value) => {\r\n    // add stone\r\n    event.target.game.setStone(value.x, value.y, color);\r\n  });\r\n}\r\n","import KifuNode, { Path } from '../kifu/KifuNode';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport { Game, goRules, GoRules, JAPANESE_RULES } from '../Game';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport PropertyHandler from './PropertyHandler';\r\nimport { PlayerInitParams } from './types';\r\nimport * as basePropertyListeners from './basePropertyListeners';\r\nimport { Color } from '../types';\r\nimport PlayerPlugin from './PlayerPlugin';\r\n\r\nexport default class PlayerBase extends EventEmitter {\r\n  rootNode: KifuNode;\r\n  currentNode: KifuNode;\r\n  game: Game;\r\n  params: PlayerInitParams;\r\n  plugins: PlayerPlugin[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.loadKifu(new KifuNode());\r\n    this.plugins = [];\r\n\r\n    this.on('beforeInit.SZ', basePropertyListeners.beforeInitSZ);\r\n    this.on('beforeInit.RU', basePropertyListeners.beforeInitRU);\r\n    this.on('applyGameChanges.HA', basePropertyListeners.applyGameChangesHA);\r\n    this.on('applyGameChanges.B', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.W', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.PL', basePropertyListeners.applyGameChangesPL);\r\n    this.on('applyGameChanges.AB', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AW', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AE', basePropertyListeners.applyGameChangesSetup);\r\n  }\r\n\r\n  /**\r\n   * Load game (kifu) from KifuNode.\r\n   */\r\n  loadKifu(rootNode: KifuNode) {\r\n    this.rootNode = rootNode;\r\n    this.currentNode = rootNode;\r\n\r\n    this.emit('loadKifu', {\r\n      name: 'loadKifu',\r\n      kifuNode: rootNode,\r\n      target: this,\r\n    });\r\n    this.executeRoot();\r\n  }\r\n\r\n  /**\r\n   * Create new game (kifu) and init player with it.\r\n   */\r\n  newGame(size?: number, rules?: GoRules) {\r\n    const rootNode = new KifuNode();\r\n\r\n    if (size) {\r\n      rootNode.setProperty('SZ', size);\r\n    }\r\n\r\n    if (rules) {\r\n      // TODO: handle rules more correctly\r\n      const rulesName = Object.keys(goRules).find(name => (goRules as any)[name] === rules);\r\n      if (rulesName) {\r\n        rootNode.setProperty('RU', rulesName);\r\n      }\r\n    }\r\n\r\n    this.loadKifu(rootNode);\r\n  }\r\n\r\n  /**\r\n   * Executes root properties during initialization. If some properties change, call this to re-init player.\r\n   */\r\n  protected executeRoot() {\r\n    this.params = {\r\n      size: 19,\r\n      rules: JAPANESE_RULES,\r\n    };\r\n\r\n    this.emitNodeLifeCycleEvent('beforeInit');\r\n    this.game = new Game(this.params.size, this.params.rules);\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  protected executeNode() {\r\n    this.emitNodeLifeCycleEvent('applyGameChanges');\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Change current node to specified next node and executes its properties.\r\n   */\r\n  protected executeNext(i: number) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n\r\n    this.game.pushPosition(this.game.position.clone());\r\n    this.currentNode = this.currentNode.children[i];\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Change current node to previous/parent next node and executes its properties.\r\n   */\r\n  protected executePrevious() {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n\r\n    this.game.popPosition();\r\n    this.currentNode = this.currentNode.parent;\r\n\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Emits node life cycle method (for every property)\r\n   */\r\n  protected emitNodeLifeCycleEvent(name: keyof PropertyHandler<any, any>) {\r\n    this.emit(name, {\r\n      name,\r\n      target: this,\r\n    });\r\n\r\n    this.currentNode.forEachProperty((propIdent, value) => {\r\n      this.emit(`${name}.${propIdent}`, {\r\n        name,\r\n        target: this,\r\n        propIdent,\r\n        value,\r\n      });\r\n    });\r\n  }\r\n\r\n  protected getPropertyHandler(propIdent: string) {\r\n    return (this.constructor as any).propertyHandlers[propIdent] as PropertyHandler<any, any>;\r\n  }\r\n\r\n  /**\r\n   * Gets property of current node.\r\n   */\r\n  getProperty(propIdent: PropIdent) {\r\n    return this.currentNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Sets property of current node and execute changes.\r\n   */\r\n  setProperty(propIdent: PropIdent, value?: any) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n    this.currentNode.setProperty(propIdent, value);\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Gets property of root node.\r\n   */\r\n  getRootProperty(propIdent: PropIdent) {\r\n    return this.rootNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Returns array of next nodes (children).\r\n   */\r\n  getNextNodes() {\r\n    return this.currentNode.children;\r\n  }\r\n\r\n  /**\r\n   * Go to (specified) next node and execute it.\r\n   */\r\n  next(node: number | KifuNode = 0) {\r\n    if (this.currentNode.children.length) {\r\n      let i: number;\r\n\r\n      if (typeof node === 'number') {\r\n        i = node;\r\n      } else {\r\n        i = this.currentNode.children.indexOf(node);\r\n      }\r\n\r\n      if (this.currentNode.children[i]) {\r\n        this.executeNext(i);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the previous node.\r\n   */\r\n  previous() {\r\n    if (this.currentNode.parent) {\r\n      this.executePrevious();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the first position - root node.\r\n   */\r\n  first() {\r\n    // not sure if effective - TODO: check if there is a better way to do this\r\n    while (this.previous()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to the last position.\r\n   */\r\n  last() {\r\n    while (this.next()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to a node specified by path or move number.\r\n   */\r\n  goTo(pathOrMoveNumber: Path | number) {\r\n    // TODO: check if there is a better way to do this\r\n    const path = typeof pathOrMoveNumber === 'number' ? { depth: pathOrMoveNumber, forks: [] } : pathOrMoveNumber;\r\n    this.first();\r\n\r\n    for (let i = 0, j = 0; i < path.depth; i++) {\r\n      if (this.currentNode.children.length > 1) {\r\n        this.next(path.forks[j++]);\r\n      } else {\r\n        this.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get path to current node\r\n   */\r\n  getCurrentPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n\r\n    if (this.currentNode) {\r\n      let node = this.currentNode;\r\n\r\n      while (node.parent) {\r\n        path.depth++;\r\n\r\n        if (node.parent.children.length > 1) {\r\n          path.forks.push(node.parent.children.indexOf(node));\r\n        }\r\n\r\n        node = node.parent;\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /**\r\n\t * Go to previous fork (a node with more than one child).\r\n\t */\r\n  previousFork() {\r\n    while (this.previous()) {\r\n      if (this.currentNode.children.length > 1) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a move. New kifu node will be created and move to it\r\n   */\r\n  play(x: number, y: number) {\r\n    const node = new KifuNode();\r\n\r\n    if (this.game.turn === Color.W) {\r\n      node.setProperty(PropIdent.WHITE_MOVE, { x, y });\r\n    } else {\r\n      node.setProperty(PropIdent.BLACK_MOVE, { x, y });\r\n    }\r\n\r\n    const i = this.currentNode.appendChild(node);\r\n    this.next(i);\r\n  }\r\n\r\n  /**\r\n   * Register player's plugin.\r\n   *\r\n   * @param plugin\r\n   */\r\n  use(plugin: PlayerPlugin) {\r\n    if (!plugin || typeof plugin.apply !== 'function') {\r\n      throw new TypeError('Plugin must implement an `apply` method.');\r\n    }\r\n    plugin.apply(this);\r\n    this.plugins.push(plugin);\r\n  }\r\n}\r\n","import { FieldBoardObject } from '../../BoardBase';\r\nimport KifuNode, { Path } from '../../kifu/KifuNode';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../../types';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerBase from '../PlayerBase';\r\nimport PlayerPlugin from '../PlayerPlugin';\r\n\r\ninterface EditModeConfig {\r\n  /**\r\n   * Set true, if edit mode should be enabled during player initialization.\r\n   * Default value: `false`\r\n   */\r\n  enabled: boolean;\r\n\r\n  /**\r\n   * Set true, to show variation markup during edit mode. This overrides SGF and player config.\r\n   * Default value: `true`\r\n   */\r\n  showVariations: boolean;\r\n}\r\n\r\ninterface GameState {\r\n  rootNode: KifuNode;\r\n  path: Path;\r\n}\r\n\r\nconst defaultEditModeConfig = {\r\n  enabled: false,\r\n  showVariations: true,\r\n};\r\n\r\n/**\r\n * Edit mode plugin. It allows to edit game kifu without changing it - when edit mode is disabled\r\n * all changes are reverted. It provides event `editMode.change` to enable/disable edit mode.\r\n * It contains integration with board via these events:\r\n * - board.updateTemporaryObject\r\n * - board.addTemporaryObject\r\n * - board.removeTemporaryObject\r\n * - board.mouseMove\r\n * - board.mouseOut\r\n * - board.click\r\n */\r\nexport default class EditMode implements PlayerPlugin {\r\n  config: EditModeConfig;\r\n  player: PlayerBase;\r\n\r\n  private gameStateStack: GameState[] = [];\r\n\r\n  private _boardMouseMoveEvent: Function;\r\n  private _boardMouseOutEvent: Function;\r\n  private _boardClickEvent: Function;\r\n  private _nodeChange: Function;\r\n\r\n  constructor(config: PartialRecursive<EditModeConfig> = {}) {\r\n    this.config = makeConfig(defaultEditModeConfig, config);\r\n  }\r\n\r\n  apply(player: PlayerBase) {\r\n    if (this.player) {\r\n      throw new Error('This plugin instance has already been applied to a player object.');\r\n    }\r\n\r\n    this.player = player;\r\n    this.player.on('editMode.change', this.handleChange);\r\n\r\n    if (this.config.enabled) {\r\n      this.enable();\r\n    }\r\n  }\r\n\r\n  /*public destroy() {\r\n    this.player.off('editMode.change', this.handleChange);\r\n  }*/\r\n\r\n  /**\r\n   * Enable/disable edit mode. Event `editMode.change` is triggered.\r\n   *\r\n   * @param value\r\n   */\r\n  setEnabled(value: boolean) {\r\n    if (value !== this.config.enabled) {\r\n      this.player.emit('editMode.change', value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play move if edit mode is enabled. This move will be discarded, when edit mode is disabled.\r\n   *\r\n   * @param point\r\n   */\r\n  play(point: Point) {\r\n    if (!this.config.enabled) {\r\n      return;\r\n    }\r\n\r\n    // check, whether some of the next node contains this move\r\n    for (let i = 0; i < this.player.currentNode.children.length; i++) {\r\n      const childNode = this.player.currentNode.children[i];\r\n      const move = childNode.getProperty('B') || childNode.getProperty('W');\r\n      if (move.x === point.x && move.y === point.y) {\r\n        this.player.next(i);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // otherwise play if valid\r\n    if (this.player.game.isValid(point.x, point.y)) {\r\n      this.player.play(point.x, point.y);\r\n    }\r\n  }\r\n\r\n  private handleChange = (value: boolean) => {\r\n    if (value && !this.config.enabled) {\r\n      this.enable();\r\n    } else if (!value && this.config.enabled) {\r\n      this.disable();\r\n    }\r\n  }\r\n\r\n  private enable() {\r\n    this.saveGameState();\r\n    if (this.config.showVariations) {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 0);\r\n    } else {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 2);\r\n    }\r\n    this.config.enabled = true;\r\n\r\n    let lastX = -1;\r\n    let lastY = -1;\r\n\r\n    const blackStone = new FieldBoardObject('B');\r\n    blackStone.opacity = 0.35;\r\n\r\n    const whiteStone = new FieldBoardObject('W');\r\n    whiteStone.opacity = 0.35;\r\n\r\n    let addedStone: FieldBoardObject = null;\r\n\r\n    this._boardMouseMoveEvent = (p: Point) => {\r\n      if (lastX !== p.x || lastY !== p.y) {\r\n        if (this.player.game.isValid(p.x, p.y)) {\r\n          const boardObject = this.player.game.turn === Color.BLACK ? blackStone : whiteStone;\r\n          boardObject.setPosition(p.x, p.y);\r\n\r\n          if (addedStone) {\r\n            this.player.emit('board.updateTemporaryObject', boardObject);\r\n          } else {\r\n            this.player.emit('board.addTemporaryObject', boardObject);\r\n            addedStone = boardObject;\r\n          }\r\n\r\n        } else {\r\n          this._boardMouseOutEvent();\r\n        }\r\n        lastX = p.x;\r\n        lastY = p.y;\r\n      }\r\n    };\r\n\r\n    this._boardMouseOutEvent = () => {\r\n      if (addedStone) {\r\n        this.player.emit('board.removeTemporaryObject', addedStone);\r\n        addedStone = null;\r\n      }\r\n      lastX = -1;\r\n      lastY = -1;\r\n    };\r\n\r\n    this._boardClickEvent = (p: Point) => {\r\n      this._boardMouseOutEvent();\r\n\r\n      if (p == null) {\r\n        return;\r\n      }\r\n\r\n      this.play(p);\r\n    };\r\n\r\n    this._nodeChange = () => {\r\n      const current = { x: lastX, y: lastY };\r\n      this._boardMouseOutEvent();\r\n      this._boardMouseMoveEvent(current);\r\n    };\r\n\r\n    this.player.on('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.on('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.on('board.click', this._boardClickEvent);\r\n\r\n    this.player.on('applyNodeChanges', this._nodeChange);\r\n  }\r\n\r\n  private disable() {\r\n    this.player.off('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.off('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.off('board.click', this._boardClickEvent);\r\n\r\n    this.player.off('applyNodeChanges', this._nodeChange);\r\n\r\n    this.config.enabled = false;\r\n    this.restoreGameState();\r\n  }\r\n\r\n  /**\r\n   * Saves current player game state - Kifu and path object.\r\n   */\r\n  private saveGameState() {\r\n    this.gameStateStack.push({\r\n      rootNode: this.player.rootNode.cloneNode(),\r\n      path: this.player.getCurrentPath(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restores player from previously saved state.\r\n   */\r\n  private restoreGameState() {\r\n    const lastState = this.gameStateStack.pop();\r\n    if (lastState) {\r\n      // revert all node changes\r\n      this.player.first();\r\n\r\n      // load stored kifu\r\n      this.player.loadKifu(lastState.rootNode);\r\n\r\n      // go to stored path\r\n      this.player.goTo(lastState.path);\r\n    }\r\n  }\r\n}\r\n","import { PlayerBase } from '../PlayerBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport PlayerDOMComponent from './components/PlayerDOMComponent';\r\n\r\nexport interface PlayerDOMConfig {\r\n  enableMouseWheel: boolean;\r\n  enableKeys: boolean;\r\n  fastReplay: number;\r\n}\r\n\r\nexport const playerDOMDefaultConfig = {\r\n  enableMouseWheel: true,\r\n  enableKeys: true,\r\n  fastReplay: 2000,\r\n};\r\n\r\n/**\r\n * Player with support to render visual elements into the DOM.\r\n */\r\nexport default class PlayerDOM extends PlayerBase {\r\n  config: PlayerDOMConfig;\r\n  components: Map<HTMLElement, PlayerDOMComponent> = new Map();\r\n  fastReplayTimeout: number;\r\n  fastReplayEnabled = false;\r\n\r\n  constructor(config: PartialRecursive<PlayerDOMConfig> = {}) {\r\n    super();\r\n    this.config = makeConfig(playerDOMDefaultConfig, config);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    document.addEventListener('keydown', this.handleKeydown);\r\n    document.addEventListener('keyup', this.handleKeyup);\r\n  }\r\n\r\n  /**\r\n   * Renders PlayerDOM component into specified HTML element. If there is content inside that element\r\n   * it will be removed. Render method can be called multiple times - this allows to have player's component\r\n   * anywhere you want.\r\n   *\r\n   * @param component\r\n   * @param container\r\n   */\r\n  render(component: PlayerDOMComponent, container: HTMLElement) {\r\n    // clear content of the container\r\n    container.innerHTML = '';\r\n\r\n    // creates wrapper\r\n    const wrapper = this.createWrapper();\r\n    container.appendChild(wrapper);\r\n\r\n    // creates the component HTML element\r\n    wrapper.appendChild(component.element);\r\n    component.create(this);\r\n\r\n    this.components.set(container, component);\r\n  }\r\n\r\n  /**\r\n   * Removes component rendered via `render` method. Call this to clean event listeners of the component.\r\n   *\r\n   * @param container\r\n   */\r\n  clear(container: HTMLElement) {\r\n    const component = this.components.get(container);\r\n\r\n    if (component && typeof component.destroy === 'function') {\r\n      component.destroy();\r\n    }\r\n\r\n    const wrapper = container.firstChild as HTMLDivElement;\r\n    wrapper.removeEventListener('wheel', this.handleMouseWheel);\r\n    container.removeChild(wrapper);\r\n\r\n    this.components.delete(container);\r\n  }\r\n\r\n  private createWrapper() {\r\n    const element = document.createElement('div');\r\n    element.className = 'wgo-player';\r\n    element.tabIndex = 1;\r\n\r\n    element.addEventListener('wheel', this.handleMouseWheel);\r\n\r\n    return element;\r\n  }\r\n\r\n  private handleResize = () => {\r\n    this.emit('resize');\r\n  }\r\n\r\n  private handleMouseWheel = (e: WheelEvent) => {\r\n    if (this.config.enableMouseWheel) {\r\n      if (e.deltaY > 0) {\r\n        this.next();\r\n      } else if (e.deltaY < 0) {\r\n        this.previous();\r\n      }\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  private handleKeydown = (e: KeyboardEvent) => {\r\n    if (this.config.enableKeys && this.hasFocus()) {\r\n      if (this.config.fastReplay >= 0 && !this.fastReplayTimeout) {\r\n        this.fastReplayTimeout = window.setTimeout(() => {\r\n          this.fastReplayEnabled = true;\r\n        }, this.config.fastReplay);\r\n      }\r\n\r\n      if (e.key === 'ArrowRight') {\r\n        this.next();\r\n        if (this.fastReplayEnabled) {\r\n          this.next();\r\n          this.next();\r\n        }\r\n      } else if (e.key === 'ArrowLeft') {\r\n        this.previous();\r\n        if (this.fastReplayEnabled) {\r\n          this.previous();\r\n          this.previous();\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private handleKeyup = () => {\r\n    window.clearTimeout(this.fastReplayTimeout);\r\n    this.fastReplayTimeout = null;\r\n    this.fastReplayEnabled = false;\r\n  }\r\n\r\n  private hasFocus() {\r\n    for (const elem of this.components.keys()) {\r\n      if (elem.firstChild === document.activeElement) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport default class Container implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  children: PlayerDOMComponent[];\r\n  direction: string;\r\n\r\n  constructor(direction: string, children: PlayerDOMComponent[] = []) {\r\n    this.direction = direction;\r\n    this.children = children;\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = `wgo-player__container wgo-player__container--${this.direction}`;\r\n    this.children.forEach(child => this.element.appendChild(child.element));\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.children.forEach(child => child.create(player));\r\n  }\r\n\r\n  destroy() {\r\n    this.children.forEach(child => typeof child.destroy === 'function' && child.destroy());\r\n  }\r\n}\r\n","import { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface GameInfoBoxConfig {\r\n  gameInfoProperties: { [key: string]: string };\r\n  hideResult: boolean;\r\n}\r\n\r\nexport const gameInfoBoxDefaultConfig = {\r\n  gameInfoProperties: {\r\n    DT: 'Date',\r\n    KM: 'Komi',\r\n    HA: 'Handicap',\r\n    AN: 'Annotations',\r\n    CP: 'Copyright',\r\n    GC: 'Game comments',\r\n    GN: 'Game name',\r\n    ON: 'Fuseki',\r\n    OT: 'Overtime',\r\n    TM: 'Basic time',\r\n    RE: 'Result',\r\n    RO: 'Round',\r\n    RU: 'Rules',\r\n    US: 'Recorder',\r\n    PC: 'Place',\r\n    EV: 'Event',\r\n    SO: 'Source',\r\n  },\r\n  hideResult: true,\r\n};\r\n\r\nexport default class GameInfoBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  infoTable: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: GameInfoBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<GameInfoBoxConfig> = {}) {\r\n    this.config = makeConfig(gameInfoBoxDefaultConfig, config);\r\n    this.printInfo = this.printInfo.bind(this);\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content';\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Game information';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    const tableWrapper = document.createElement('div');\r\n    tableWrapper.className = 'wgo-player__box__content';\r\n    this.element.appendChild(tableWrapper);\r\n\r\n    this.infoTable = document.createElement('table');\r\n    this.infoTable.className = 'wgo-player__box__game-info';\r\n    tableWrapper.appendChild(this.infoTable);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('beforeInit', this.printInfo);\r\n    this.printInfo();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('beforeInit', this.printInfo);\r\n    this.player = null;\r\n  }\r\n\r\n  addInfo(propIdent: string, value: string, hide: boolean) {\r\n    const row = document.createElement('tr');\r\n    row.dataset.propIdent = propIdent;\r\n    this.infoTable.appendChild(row);\r\n\r\n    const label = document.createElement('th');\r\n    label.textContent = this.config.gameInfoProperties[propIdent];\r\n    row.appendChild(label);\r\n\r\n    const valueElement = document.createElement('td');\r\n    if (hide) {\r\n      const link = document.createElement('a');\r\n      link.href = '#';\r\n      link.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        valueElement.textContent = value;\r\n      });\r\n      link.textContent = 'show';\r\n      valueElement.appendChild(link);\r\n    } else {\r\n      valueElement.textContent = value;\r\n    }\r\n    row.appendChild(valueElement);\r\n  }\r\n\r\n  removeInfo(propIdent: string) {\r\n    const elem = this.infoTable.querySelector(`[data-id='${propIdent}']`);\r\n    this.infoTable.removeChild(elem);\r\n  }\r\n\r\n  printInfo() {\r\n    this.infoTable.innerHTML = '';\r\n    if (this.player.rootNode) {\r\n      this.player.rootNode.forEachProperty((propIdent, value) => {\r\n        if (this.config.gameInfoProperties[propIdent]) {\r\n          this.addInfo(propIdent, value, this.config.hideResult && propIdent === PropIdent.RESULT);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { SVGBoardComponent } from '.';\r\nimport { PlayerBase } from '../../PlayerBase';\r\nimport { EditMode } from '../../PlayerBase/plugins';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport GameInfoBox from './GameInfoBox';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface MenuItem {\r\n  /** Title of the menu item. */\r\n  name: string;\r\n\r\n  /** If true, there can be check state of the menu item. */\r\n  checkable?: boolean;\r\n\r\n  /** Function executed upon click. If checkable, should return new check state. */\r\n  handleClick(): boolean | void;\r\n\r\n  /** If checkable, function which return initial check state. */\r\n  defaultChecked?(): boolean;\r\n}\r\n\r\ninterface ControlPanelConfig {\r\n  menuItems: MenuItem[];\r\n}\r\n\r\nconst defaultConfig: ControlPanelConfig = {\r\n  menuItems: [],\r\n};\r\n\r\nexport default class ControlPanel implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  moveNumber: HTMLInputElement;\r\n  first: HTMLButtonElement;\r\n  previous: HTMLButtonElement;\r\n  next: HTMLButtonElement;\r\n  last: HTMLButtonElement;\r\n  config: ControlPanelConfig;\r\n\r\n  constructor(config: PartialRecursive<ControlPanelConfig> = {}) {\r\n    this.config = makeConfig(defaultConfig, config);\r\n    this.update = this.update.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__control-panel';\r\n\r\n    const buttonGroup = document.createElement('form');\r\n    buttonGroup.className = 'wgo-player__button-group';\r\n    this.element.appendChild(buttonGroup);\r\n    buttonGroup.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n\r\n    this.first = document.createElement('button');\r\n    this.first.type = 'button';\r\n    this.first.className = 'wgo-player__button';\r\n    this.first.innerHTML = '<span class=\"wgo-player__icon-to-end wgo-player__icon--reverse\"></span>';\r\n    this.first.addEventListener('click', () => this.player.first());\r\n    buttonGroup.appendChild(this.first);\r\n\r\n    this.previous = document.createElement('button');\r\n    this.previous.type = 'button';\r\n    this.previous.className = 'wgo-player__button';\r\n    this.previous.innerHTML = '<span class=\"wgo-player__icon-play wgo-player__icon--reverse\"></span>';\r\n    this.previous.addEventListener('click', () => this.player.previous());\r\n    buttonGroup.appendChild(this.previous);\r\n\r\n    this.moveNumber = document.createElement('input');\r\n    this.moveNumber.className = 'wgo-player__button wgo-player__move-number';\r\n    this.moveNumber.value = '0';\r\n    this.moveNumber.addEventListener('blur', (e) => {\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n    buttonGroup.appendChild(this.moveNumber);\r\n\r\n    this.next = document.createElement('button');\r\n    this.next.type = 'button';\r\n    this.next.className = 'wgo-player__button';\r\n    this.next.innerHTML = '<span class=\"wgo-player__icon-play\"></span>';\r\n    this.next.addEventListener('click', () => this.player.next());\r\n    buttonGroup.appendChild(this.next);\r\n\r\n    this.last = document.createElement('button');\r\n    this.last.type = 'button';\r\n    this.last.className = 'wgo-player__button';\r\n    this.last.innerHTML = '<span class=\"wgo-player__icon-to-end\"></span>';\r\n    this.last.addEventListener('click', () => this.player.last());\r\n    buttonGroup.appendChild(this.last);\r\n\r\n    if (this.config.menuItems.length) {\r\n      const menuWrapper = document.createElement('div');\r\n      menuWrapper.className = 'wgo-player__menu-wrapper';\r\n      this.element.appendChild(menuWrapper);\r\n\r\n      const menuButton = document.createElement('button');\r\n      menuButton.type = 'button';\r\n      menuButton.className = 'wgo-player__button wgo-player__button--menu';\r\n      menuButton.innerHTML = '<span class=\"wgo-player__icon-menu\"></span>';\r\n      menuWrapper.appendChild(menuButton);\r\n\r\n      const menu = document.createElement('div');\r\n      menu.className = 'wgo-player__menu';\r\n      this.createMenuItems(menu);\r\n      menuWrapper.appendChild(menu);\r\n    }\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('applyNodeChanges', this.update);\r\n\r\n    if (this.player.currentNode) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.update);\r\n    this.player = null;\r\n  }\r\n\r\n  update() {\r\n    this.moveNumber.value = String(this.player.getCurrentPath().depth);\r\n\r\n    if (!this.player.currentNode.parent) {\r\n      this.first.disabled = true;\r\n      this.previous.disabled = true;\r\n    } else {\r\n      this.first.disabled = false;\r\n      this.previous.disabled = false;\r\n    }\r\n\r\n    if (this.player.currentNode.children.length === 0) {\r\n      this.next.disabled = true;\r\n      this.last.disabled = true;\r\n    } else {\r\n      this.next.disabled = false;\r\n      this.last.disabled = false;\r\n    }\r\n  }\r\n\r\n  createMenuItems(menu: HTMLElement) {\r\n    this.config.menuItems.forEach((menuItem) => {\r\n      const menuItemElement = document.createElement('a');\r\n      menuItemElement.className = 'wgo-player__menu-item';\r\n      menuItemElement.tabIndex = 0;\r\n      menuItemElement.textContent = menuItem.name;\r\n      menuItemElement.href = 'javascript: void(0)';\r\n\r\n      if (menuItem.defaultChecked && menuItem.defaultChecked()) {\r\n        menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n      }\r\n\r\n      menuItemElement.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        const res = menuItem.handleClick();\r\n\r\n        if (menuItem.checkable) {\r\n          if (!res) {\r\n            menuItemElement.classList.remove('wgo-player__menu-item--checked');\r\n          } else {\r\n            menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n          }\r\n        }\r\n\r\n        menuItemElement.blur();\r\n      });\r\n\r\n      menu.appendChild(menuItemElement);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Some common menu items, probably just temporary.\r\n   */\r\n  static menuItems = {\r\n    /** Renders menu item with SGF download link */\r\n    download: (player: PlayerBase) => ({\r\n      name: 'Download SGF',\r\n      handleClick() {\r\n        const name = player.rootNode.getProperty(PropIdent.GAME_NAME) || 'game';\r\n        const sgf = player.rootNode.toSGF();\r\n\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', `data:application/x-go-sgf;charset=utf-8,${encodeURIComponent(sgf)}`);\r\n        element.setAttribute('download', `${name}.sgf`);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n      },\r\n    }),\r\n\r\n    /** Renders menu item to toggle coordinates of SVGBoardComponent */\r\n    displayCoordinates: (boardComponent: SVGBoardComponent) => ({\r\n      name: 'Display coordinates',\r\n      checkable: true,\r\n      handleClick() {\r\n        boardComponent.setCoordinates(!boardComponent.config.coordinates);\r\n        return boardComponent.config.coordinates;\r\n      },\r\n      defaultChecked: () => boardComponent.config.coordinates,\r\n    }),\r\n\r\n    /** Renders menu item to toggle edit mode (using EditMode plugin) */\r\n    editMode: (editMode: EditMode) => ({\r\n      name: 'Edit mode',\r\n      checkable: true,\r\n      handleClick() {\r\n        editMode.setEnabled(!editMode.config.enabled);\r\n        return editMode.config.enabled;\r\n      },\r\n      defaultChecked: () => editMode.config.enabled,\r\n    }),\r\n\r\n    gameInfo: (player: PlayerDOM, callback: (modalWrapper: HTMLElement) => void) => ({\r\n      name: 'Game info',\r\n      handleClick() {\r\n        const overlay = document.createElement('div');\r\n        overlay.className = 'wgo-player__overlay';\r\n\r\n        const overlayClose = document.createElement('div');\r\n        overlayClose.className = 'wgo-player__overlay__close';\r\n        overlayClose.addEventListener('click', () => {\r\n          overlay.parentElement.removeChild(overlay);\r\n          gameInfo.destroy();\r\n        });\r\n        overlay.appendChild(overlayClose);\r\n\r\n        const modal = document.createElement('div');\r\n        modal.className = 'wgo-player__modal';\r\n        overlay.appendChild(modal);\r\n\r\n        const modalContent = document.createElement('div');\r\n        modalContent.className = 'wgo-player__modal__content';\r\n        modal.appendChild(modalContent);\r\n\r\n        const gameInfo = new GameInfoBox({\r\n          hideResult: false,\r\n        });\r\n        gameInfo.create(player);\r\n        modalContent.appendChild(gameInfo.element);\r\n\r\n        const wgoInfo = document.createElement('div');\r\n        wgoInfo.className = 'wgo-player__wgo-info';\r\n        // tslint:disable-next-line:max-line-length\r\n        wgoInfo.innerHTML = 'Game viewed in open source JS player <a href=\"https://github.com/waltheri/wgo.js\" target=\"_blank\">WGo</a>.';\r\n        modalContent.appendChild(wgoInfo);\r\n\r\n        callback(overlay);\r\n      },\r\n    }),\r\n  };\r\n}\r\n","import { FieldBoardObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomFieldBoardObject extends FieldBoardObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n\r\n  constructor(handler: SVGDrawHandler, x = 0, y = 0) {\r\n    super('custom', x, y);\r\n    this.handler = handler;\r\n  }\r\n}\r\n","import { LabelBoardObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomLabelBoardObject extends LabelBoardObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n","import { SVGBoard } from '../../SVGBoard';\r\nimport {\r\n  FieldBoardObject,\r\n  LabelBoardObject,\r\n  MarkupBoardObject,\r\n  BoardObject,\r\n  LineBoardObject,\r\n  BoardViewport,\r\n} from '../../BoardBase';\r\nimport { Color, Point, Label, Vector } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport { SVGBoardObject, SVGDrawHandler, SVGBoardTheme } from '../../SVGBoard/types';\r\nimport SVGCustomFieldBoardObject from '../../SVGBoard/SVGCustomFieldBoardObject';\r\nimport SVGCustomLabelBoardObject from '../../SVGBoard/SVGCustomLabelBoardObject';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport { Circle, Label as SVGLabel } from '../../SVGBoard/svgDrawHandlers';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\n\r\nconst colorsMap: { [key: string]: Color } = {\r\n  B: Color.BLACK,\r\n  W: Color.WHITE,\r\n};\r\n\r\nexport interface SVGBoardComponentConfig {\r\n  coordinates: boolean;\r\n  currentMoveBlackMark: SVGDrawHandler;\r\n  currentMoveWhiteMark: SVGDrawHandler;\r\n  variationDrawHandler: SVGDrawHandler;\r\n  highlightCurrentMove: boolean;\r\n  showVariations: boolean;\r\n  showCurrentVariations: boolean;\r\n  theme?: PartialRecursive<SVGBoardTheme>;\r\n}\r\n\r\nexport const defaultSVGBoardComponentConfig: SVGBoardComponentConfig = {\r\n  coordinates: true,\r\n  currentMoveBlackMark: new Circle({ color: 'rgba(255,255,255,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  currentMoveWhiteMark: new Circle({ color: 'rgba(0,0,0,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  variationDrawHandler: new SVGLabel({ color: '#33f' }),\r\n  highlightCurrentMove: true,\r\n  showVariations: true,\r\n  showCurrentVariations: false,\r\n};\r\n\r\nexport default class SVGBoardComponent implements PlayerDOMComponent {\r\n  // Underlying SVG board object\r\n  board: SVGBoard;\r\n  config: SVGBoardComponentConfig;\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n\r\n  // Current board objects for stones - should match the position object of the game\r\n  stoneBoardsObjects: FieldBoardObject[];\r\n\r\n  // Temporary board object, will be removed after each node update\r\n  temporaryBoardObjects: SVGBoardObject[];\r\n\r\n  // Board viewport stack, for efficient reverting of board viewport\r\n  viewportStack: BoardViewport[];\r\n\r\n  boardMouseX: number;\r\n  boardMouseY: number;\r\n\r\n  constructor(config: PartialRecursive<SVGBoardComponentConfig> = {}) {\r\n    this.config = makeConfig(defaultSVGBoardComponentConfig, config);\r\n    this.viewportStack = [];\r\n\r\n    this.applyNodeChanges = this.applyNodeChanges.bind(this);\r\n    this.clearNodeChanges = this.clearNodeChanges.bind(this);\r\n    this.applyMarkupProperty = this.applyMarkupProperty.bind(this);\r\n    this.applyLabelMarkupProperty = this.applyLabelMarkupProperty.bind(this);\r\n    this.applyLineMarkupProperty = this.applyLineMarkupProperty.bind(this);\r\n    this.applyViewportProperty = this.applyViewportProperty.bind(this);\r\n    this.clearViewportProperty = this.clearViewportProperty.bind(this);\r\n    this.applyMoveProperty = this.applyMoveProperty.bind(this);\r\n    this.addTemporaryBoardObject = this.addTemporaryBoardObject.bind(this);\r\n    this.removeTemporaryBoardObject = this.removeTemporaryBoardObject.bind(this);\r\n    this.updateTemporaryBoardObject = this.updateTemporaryBoardObject.bind(this);\r\n    this.setCoordinates = this.setCoordinates.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__board';\r\n\r\n    this.stoneBoardsObjects = [];\r\n    this.temporaryBoardObjects = [];\r\n\r\n    this.board = new SVGBoard(this.element, {\r\n      coordinates: this.config.coordinates,\r\n      theme: this.config.theme,\r\n    });\r\n\r\n    this.board.on('click', (event, point) => {\r\n      this.handleBoardClick(point);\r\n    });\r\n\r\n    this.board.on('mousemove', (event, point) => {\r\n      if (!point) {\r\n        if (this.boardMouseX != null) {\r\n          this.boardMouseX = null;\r\n          this.boardMouseY = null;\r\n          this.handleBoardMouseOut();\r\n        }\r\n        return;\r\n      }\r\n      if (point.x !== this.boardMouseX || point.y !== this.boardMouseY) {\r\n        this.boardMouseX = point.x;\r\n        this.boardMouseY = point.y;\r\n        this.handleBoardMouseMove(point);\r\n      }\r\n    });\r\n\r\n    this.board.on('mouseout', (event, point) => {\r\n      if (!point && this.boardMouseX != null) {\r\n        this.boardMouseX = null;\r\n        this.boardMouseY = null;\r\n        this.handleBoardMouseOut();\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // add general node listeners - for setting stones on board based on position\r\n    this.player.on('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.on('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    // temporary board markup listeners - add\r\n    this.player.on('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.DD', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.on('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.on('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    // viewport SGF property listeners\r\n    this.player.on('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.on('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    // add current move marker\r\n    this.player.on('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.on('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.on('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.on('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.on('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.on('board.setCoordinates', this.setCoordinates);\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.DD', this.applyMarkupProperty);\r\n\r\n    this.player.off('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.off('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.off('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    this.player.off('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.off('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    this.player.off('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.off('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.off('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.off('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.off('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.off('board.setCoordinates', this.setCoordinates);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  protected updateStones() {\r\n    // Remove missing stones in current position\r\n    this.stoneBoardsObjects = this.stoneBoardsObjects.filter((boardObject) => {\r\n      if (this.player.game.getStone(boardObject.x, boardObject.y) !== colorsMap[boardObject.type as string]) {\r\n        this.board.removeObject(boardObject);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    // Add new stones from current position\r\n    const position = this.player.game.position;\r\n\r\n    for (let x = 0; x < position.size; x++) {\r\n      for (let y = 0; y < position.size; y++) {\r\n        const c = position.get(x, y);\r\n        if (c && !this.stoneBoardsObjects.some(\r\n          boardObject => boardObject.x === x && boardObject.y === y && c === colorsMap[boardObject.type as string],\r\n        )) {\r\n          const boardObject = new FieldBoardObject(c === Color.B ? 'B' : 'W', x, y);\r\n          this.board.addObject(boardObject);\r\n          this.stoneBoardsObjects.push(boardObject);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected addVariationMarkup() {\r\n    const moves = this.getVariations();\r\n\r\n    if (moves.length > 1) {\r\n      moves.forEach((move, i) => {\r\n        if (move) {\r\n          const obj = new SVGCustomLabelBoardObject(String.fromCodePoint(65 + i), move.x, move.y);\r\n          obj.handler = this.config.variationDrawHandler;\r\n          this.addTemporaryBoardObject(obj);\r\n        }\r\n      });\r\n      if (this.boardMouseX != null) {\r\n        this.handleVariationCursor(this.boardMouseX, this.boardMouseY, moves);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected clearTemporaryBoardObjects() {\r\n    if (this.temporaryBoardObjects.length) {\r\n      this.board.removeObject(this.temporaryBoardObjects);\r\n      this.temporaryBoardObjects = [];\r\n    }\r\n  }\r\n\r\n  protected handleBoardClick(point: Point) {\r\n    this.player.emit('board.click', point);\r\n\r\n    const moves = this.getVariations();\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === point.x && move.y === point.y);\r\n\r\n      if (ind >= 0) {\r\n        if (this.shouldShowCurrentVariations()) {\r\n          this.player.previous();\r\n          this.player.next(ind);\r\n        } else {\r\n          this.player.next(ind);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected handleBoardMouseMove(point: Point) {\r\n    this.player.emit('board.mouseMove', point);\r\n    this.handleVariationCursor(point.x, point.y, this.getVariations());\r\n  }\r\n\r\n  protected handleBoardMouseOut() {\r\n    this.player.emit('board.mouseOut');\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private handleVariationCursor(x: number, y: number, moves: Point[]) {\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === x && move.y === y);\r\n\r\n      if (ind >= 0) {\r\n        this.element.style.cursor = 'pointer';\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private removeVariationCursor() {\r\n    if (this.element.style.cursor) {\r\n      this.element.style.cursor = '';\r\n    }\r\n  }\r\n\r\n  private applyNodeChanges() {\r\n    this.updateStones();\r\n    this.addVariationMarkup();\r\n  }\r\n\r\n  private clearNodeChanges() {\r\n    this.clearTemporaryBoardObjects();\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private applyMarkupProperty(event: LifeCycleEvent<Point[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new MarkupBoardObject(\r\n        event.propIdent,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLabelMarkupProperty(event: LifeCycleEvent<Label[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new LabelBoardObject(\r\n        value.text,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLineMarkupProperty(event: LifeCycleEvent<Vector[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new LineBoardObject(event.propIdent, value[0], value[1]);\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyViewportProperty(event: LifeCycleEvent<Vector>) {\r\n    const currentViewport = this.board.getViewport();\r\n    this.viewportStack.push(currentViewport);\r\n\r\n    if (event.value) {\r\n      const minX = Math.min(event.value[0].x, event.value[1].x);\r\n      const minY = Math.min(event.value[0].y, event.value[1].y);\r\n      const maxX = Math.max(event.value[0].x, event.value[1].x);\r\n      const maxY = Math.max(event.value[0].y, event.value[1].y);\r\n\r\n      this.board.setViewport({\r\n        left: minX,\r\n        top: minY,\r\n        right: this.board.getSize() - maxX - 1,\r\n        bottom: this.board.getSize() - maxY - 1,\r\n      });\r\n    } else {\r\n      this.board.setViewport({\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  private clearViewportProperty() {\r\n    const previousViewport = this.viewportStack.pop();\r\n    if (previousViewport) {\r\n      this.board.setViewport(previousViewport);\r\n    }\r\n  }\r\n\r\n  private applyMoveProperty(event: LifeCycleEvent<Point>) {\r\n    if (this.config.highlightCurrentMove) {\r\n      if (!event.value) {\r\n        // no markup when pass\r\n        return;\r\n      }\r\n      if (isThereMarkup(event.value, this.player.currentNode.properties)) {\r\n        // don't show current move markup, when there is markup in kifu node\r\n        return;\r\n      }\r\n\r\n      if (this.getVariations().length > 1 && this.shouldShowCurrentVariations()) {\r\n        // don't show current move markup, if there is multiple variations and \"show current variations\" style set\r\n        return;\r\n      }\r\n\r\n      // add current move mark\r\n      const boardMarkup = new SVGCustomFieldBoardObject(\r\n        event.propIdent === 'B' ? this.config.currentMoveBlackMark : this.config.currentMoveWhiteMark,\r\n        event.value.x,\r\n        event.value.y,\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    }\r\n  }\r\n\r\n  addTemporaryBoardObject(obj: BoardObject) {\r\n    this.temporaryBoardObjects.push(obj);\r\n    this.board.addObject(obj);\r\n  }\r\n\r\n  removeTemporaryBoardObject(obj: FieldBoardObject) {\r\n    this.temporaryBoardObjects = this.temporaryBoardObjects.filter(o => o !== obj);\r\n    this.board.removeObject(obj);\r\n  }\r\n\r\n  updateTemporaryBoardObject(obj: FieldBoardObject) {\r\n    this.board.updateObject(obj);\r\n  }\r\n\r\n  setCoordinates(b: boolean) {\r\n    this.config.coordinates = b;\r\n    this.board.setCoordinates(b);\r\n  }\r\n\r\n  getVariations(): Point[] {\r\n    if (this.shouldShowVariations()) {\r\n      if (this.shouldShowCurrentVariations()) {\r\n        if (this.player.currentNode.parent) {\r\n          return this.player.currentNode.parent.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n        }\r\n      } else {\r\n        return this.player.currentNode.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  shouldShowVariations() {\r\n    // look in kifu, whether to show variation markup\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !(st & 2);\r\n    }\r\n\r\n    // otherwise use configuration value\r\n    return this.config.showVariations;\r\n  }\r\n\r\n  shouldShowCurrentVariations() {\r\n    // in edit mode not possible\r\n    // if (this.editMode) {\r\n    //   return false;\r\n    // }\r\n\r\n    // look at variation style in kifu\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !!(st & 1);\r\n    }\r\n\r\n    // or use variation style from configuration\r\n    return this.config.showCurrentVariations;\r\n  }\r\n}\r\n\r\nfunction samePoint(p1: Point, p2: any) {\r\n  return p2 && p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\nfunction isThereMarkup(field: Point, properties: { [key: string]: any }) {\r\n  const propIdents = Object.keys(properties);\r\n\r\n  for (let i = 0; i < propIdents.length; i++) {\r\n    if (propIdents[i] === 'B' || propIdents[i] === 'W') {\r\n      continue;\r\n    }\r\n\r\n    const value = properties[propIdents[i]];\r\n    if (Array.isArray(value)) {\r\n      for (let j = 0; j < value.length; j++) {\r\n        if (samePoint(field, value[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    } else if (samePoint(field, value)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface ResponsiveComponentParams {\r\n  minWidth?: number;\r\n  maxWidth?: number;\r\n  minHeight?: number;\r\n  maxHeight?: number;\r\n  orientation?: 'portrait' | 'landscape';\r\n}\r\n\r\nexport default class ResponsiveComponent implements PlayerDOMComponent {\r\n  element: Node;\r\n  player: PlayerDOM;\r\n  visible: boolean;\r\n\r\n  constructor(private params: ResponsiveComponentParams, private component: PlayerDOMComponent) {\r\n    this.resize = this.resize.bind(this);\r\n    this.visible = true;\r\n    this.element = this.component.element;\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('resize', this.resize);\r\n    this.component.create(this.player);\r\n\r\n    this.resize();\r\n  }\r\n\r\n  resize() {\r\n    const shouldRenderComponent = this.shouldRenderComponent();\r\n\r\n    if (this.visible && !shouldRenderComponent) {\r\n      // replace component element by placeholder\r\n      const placeholder = this.createPlaceholder();\r\n      this.element.parentElement.replaceChild(placeholder, this.element);\r\n      this.element = placeholder;\r\n      this.visible = false;\r\n    } else if (!this.visible && shouldRenderComponent) {\r\n      // replaces placeholder by component element\r\n      const componentElement = this.component.element;\r\n      this.element.parentElement.replaceChild(componentElement, this.element);\r\n      this.element = componentElement;\r\n      this.visible = true;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('resize', this.resize);\r\n    this.player = null;\r\n\r\n    if (typeof this.component.destroy === 'function') {\r\n      this.component.destroy();\r\n    }\r\n  }\r\n\r\n  private shouldRenderComponent() {\r\n    const width = this.element.parentElement.offsetWidth;\r\n    const height = this.element.parentElement.offsetHeight;\r\n\r\n    if (this.params.minWidth != null && this.params.minWidth > width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.minHeight != null && this.params.minHeight > height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxWidth != null && this.params.maxWidth < width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxHeight != null && this.params.maxHeight < height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.orientation === 'portrait' && width < height) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createPlaceholder() {\r\n    // tslint:disable-next-line:max-line-length\r\n    return document.createComment(` WGo component placeholder for ${this.component.constructor ? this.component.constructor.name : 'unknown'} ${JSON.stringify(this.params)} `);\r\n  }\r\n}\r\n","import { MarkupBoardObject } from '../../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface CommentBoxConfig {\r\n  formatMoves: boolean;\r\n  formatNicks: boolean;\r\n}\r\n\r\nexport const commentBoxDefaultConfig = {\r\n  formatMoves: true,\r\n  formatNicks: true,\r\n};\r\n\r\nexport default class CommentsBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  commentsElement: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: CommentBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<CommentBoxConfig> = {}) {\r\n    this.config = makeConfig(commentBoxDefaultConfig, config);\r\n    this.setComments = this.setComments.bind(this);\r\n    this.clearComments = this.clearComments.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content';\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Comments';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    this.commentsElement = document.createElement('div');\r\n    this.commentsElement.className = 'wgo-player__box__content';\r\n    this.element.appendChild(this.commentsElement);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    this.player.on('applyNodeChanges.C', this.setComments);\r\n    this.player.on('clearNodeChanges.C', this.clearComments);\r\n\r\n    if (this.player.currentNode) {\r\n      const comment = this.player.currentNode.getProperty('C');\r\n      if (comment) {\r\n        this.setComments({ value: comment });\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges.C', this.setComments);\r\n    this.player.off('clearNodeChanges.C', this.clearComments);\r\n    this.player = null;\r\n  }\r\n\r\n  setComments(event: { value: string }) {\r\n    this.commentsElement.innerHTML = this.formatComment(event.value);\r\n\r\n    if (this.config.formatMoves) {\r\n      [].forEach.call(this.commentsElement.querySelectorAll('.wgo-player__move-link'), (link: HTMLElement) => {\r\n        const point = coordinatesToPoint(link.textContent, this.player.game.size);\r\n        const boardObject = new MarkupBoardObject('MA', point.x, point.y, this.player.game.getStone(point.x, point.y));\r\n        boardObject.zIndex = 20;\r\n\r\n        link.addEventListener('mouseenter', () => {\r\n          this.player.emit('board.addTemporaryObject', boardObject);\r\n        });\r\n\r\n        link.addEventListener('mouseleave', () => {\r\n          this.player.emit('board.removeTemporaryObject', boardObject);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  clearComments() {\r\n    this.commentsElement.textContent = '';\r\n  }\r\n\r\n  formatComment(text: string) {\r\n    // remove HTML tags from text\r\n    let formattedText = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n\r\n    // divide text into paragraphs\r\n    formattedText = `<p>${formattedText.replace(/\\n/g, '</p><p>')}</p>`;\r\n\r\n    if (this.config.formatNicks) {\r\n      formattedText = formattedText.replace(/(<p>)([^:]{3,}:)\\s/g, '<p><span class=\"wgo-player__nick\">$2</span> ');\r\n    }\r\n\r\n    if (this.config.formatMoves) {\r\n      // tslint:disable-next-line:max-line-length\r\n      formattedText = formattedText.replace(/\\b[a-zA-Z]1?\\d\\b/g, '<a href=\"javascript:void(0)\" class=\"wgo-player__move-link\">$&</a>');\r\n    }\r\n\r\n    return formattedText;\r\n  }\r\n}\r\n\r\nfunction coordinatesToPoint(coordinates: string, boardSize: number) {\r\n  const x = coordinates.toLowerCase().charCodeAt(0) - 97; // char code of \"a\"\r\n  const y = parseInt(coordinates.substr(1), 10) - 1;\r\n  return { x, y: boardSize - 1 - y };\r\n}\r\n","import { Color } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport { PlayerDOM } from '../..';\r\n\r\nexport default class PlayerTag implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  color: Color;\r\n  colorChar: 'B' | 'W';\r\n  colorName: 'black' | 'white';\r\n  playerNameElement: HTMLElement;\r\n  playerRankElement: HTMLElement;\r\n  playerTeamElement: HTMLElement;\r\n  playerCapsElement: HTMLElement;\r\n\r\n  constructor(color: Color.B | Color.W) {\r\n    this.color = color;\r\n    this.colorChar = color === Color.B ? 'B' : 'W';\r\n    this.colorName = color === Color.B ? 'black' : 'white';\r\n\r\n    this.setName = this.setName.bind(this);\r\n    this.setRank = this.setRank.bind(this);\r\n    this.setTeam = this.setTeam.bind(this);\r\n    this.setCaps = this.setCaps.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__player-tag';\r\n\r\n    const playerElement = document.createElement('div');\r\n    playerElement.className = 'wgo-player__player-tag__name';\r\n    this.element.appendChild(playerElement);\r\n\r\n    this.playerNameElement = document.createElement('span');\r\n    playerElement.appendChild(this.playerNameElement);\r\n\r\n    this.playerRankElement = document.createElement('small');\r\n    this.playerRankElement.className = 'wgo-player__player-tag__name__rank';\r\n    playerElement.appendChild(this.playerRankElement);\r\n\r\n    this.playerCapsElement = document.createElement('div');\r\n    this.playerCapsElement.className = `wgo-player__player-tag__color wgo-player__player-tag__color--${this.colorName}`;\r\n    this.playerCapsElement.textContent = '0';\r\n    this.element.appendChild(this.playerCapsElement);\r\n\r\n    // todo team\r\n    this.playerTeamElement = document.createElement('div');\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // attach Kifu listeners\r\n    this.player.on(`beforeInit.P${this.colorChar}`, this.setName); // property PB or PW\r\n    this.player.on(`beforeInit.${this.colorChar}R`, this.setRank); // property BR or WR\r\n    this.player.on(`beforeInit.${this.colorChar}T`, this.setTeam); // property BT or WT\r\n    this.player.on('applyNodeChanges', this.setCaps);\r\n\r\n    // set current (probably initial) values\r\n    this.initialSet();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off(`beforeInit.P${this.colorChar}`, this.setName);\r\n    this.player.off(`beforeInit.${this.colorChar}R`, this.setRank);\r\n    this.player.off(`beforeInit.${this.colorChar}T`, this.setTeam);\r\n    this.player.off('applyNodeChanges', this.setCaps);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  setName(event: LifeCycleEvent<string>) {\r\n    this.playerNameElement.textContent = event.value || this.colorName;\r\n  }\r\n\r\n  setRank(event: LifeCycleEvent<string>) {\r\n    this.playerRankElement.textContent = event.value;\r\n  }\r\n\r\n  setTeam(event: LifeCycleEvent<string>) {\r\n    this.playerTeamElement.textContent = event.value;\r\n  }\r\n\r\n  setCaps() {\r\n    this.playerCapsElement.textContent = this.player.game.position.capCount[this.colorName].toString();\r\n  }\r\n\r\n  private initialSet() {\r\n    if (this.player.rootNode) {\r\n      this.playerNameElement.textContent = this.player.rootNode.getProperty(`P${this.colorChar}`) || this.colorName;\r\n      this.playerRankElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}R`) || '';\r\n      this.playerTeamElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}T`) || '';\r\n    }\r\n    if (this.player.game) {\r\n      this.setCaps();\r\n    }\r\n  }\r\n}\r\n","import makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Color } from '../types';\r\nimport PlayerDOM, { PlayerDOMConfig, playerDOMDefaultConfig } from '../PlayerDOM/PlayerDOM';\r\nimport SVGBoardComponent, {\r\n  defaultSVGBoardComponentConfig,\r\n  SVGBoardComponentConfig,\r\n} from '../PlayerDOM/components/SVGBoardComponent';\r\nimport CommentsBox, { CommentBoxConfig, commentBoxDefaultConfig } from '../PlayerDOM/components/CommentsBox';\r\nimport GameInfoBox, { GameInfoBoxConfig, gameInfoBoxDefaultConfig } from '../PlayerDOM/components/GameInfoBox';\r\nimport { EditMode } from '../PlayerBase/plugins';\r\nimport { Container, ControlPanel, PlayerTag, ResponsiveComponent } from '../PlayerDOM/components';\r\nimport KifuNode from '../kifu/KifuNode';\r\nimport PlayerDOMComponent from '../PlayerDOM/components/PlayerDOMComponent';\r\n\r\ninterface SimplePlayerConfig extends PlayerDOMConfig {\r\n  board: SVGBoardComponentConfig;\r\n  comments: CommentBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  gameInfo: GameInfoBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  sgfFile: string | null;\r\n  sgf: string | null;\r\n}\r\n\r\nconst defaultConfig: SimplePlayerConfig = {\r\n  ...playerDOMDefaultConfig,\r\n  board: defaultSVGBoardComponentConfig,\r\n  comments: {\r\n    enabled: true,\r\n    ...commentBoxDefaultConfig,\r\n  },\r\n  gameInfo: {\r\n    enabled: true,\r\n    ...gameInfoBoxDefaultConfig,\r\n  },\r\n  sgfFile: null,\r\n  sgf: null,\r\n};\r\n\r\nexport default class SimplePlayer extends PlayerDOM {\r\n  element: HTMLElement;\r\n  config: SimplePlayerConfig;\r\n\r\n  constructor(elem: HTMLElement, config: PartialRecursive<SimplePlayerConfig> = {}) {\r\n    super();\r\n\r\n    // TODO - already partially done in PlayerDOM\r\n    this.config = makeConfig(defaultConfig, config);\r\n\r\n    this.element = elem;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const editMode = new EditMode();\r\n    this.use(editMode);\r\n\r\n    const svgBoardComponent = new SVGBoardComponent(this.config.board);\r\n\r\n    const controlPanelConfig = {\r\n      menuItems: [\r\n        ControlPanel.menuItems.editMode(editMode),\r\n        ControlPanel.menuItems.displayCoordinates(svgBoardComponent),\r\n        ControlPanel.menuItems.download(this),\r\n        ControlPanel.menuItems.gameInfo(this, elem => this.element.firstChild.appendChild(elem)),\r\n      ],\r\n    };\r\n\r\n    const rightColumn: PlayerDOMComponent[] = [];\r\n    const bottom: PlayerDOMComponent[] = [];\r\n\r\n    if (this.config.gameInfo.enabled) {\r\n      rightColumn.push(new GameInfoBox(this.config.gameInfo));\r\n    }\r\n\r\n    if (this.config.comments.enabled) {\r\n      rightColumn.push(new CommentsBox(this.config.comments));\r\n      bottom.push(new ResponsiveComponent({ maxWidth: 649 }, new CommentsBox(this.config.comments)));\r\n    }\r\n\r\n    const component = new Container('column', [\r\n      new ResponsiveComponent({ maxWidth: 749 }, new Container('row', [\r\n        new PlayerTag(Color.B),\r\n        new PlayerTag(Color.W),\r\n      ])),\r\n      new Container('row', [\r\n        svgBoardComponent,\r\n        new ResponsiveComponent({ minWidth: 650 }, new Container('column', [\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.B)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.W)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new ControlPanel(controlPanelConfig)),\r\n          ...rightColumn,\r\n        ])),\r\n      ]),\r\n      new ResponsiveComponent({ maxWidth: 749 }, new ControlPanel(controlPanelConfig)),\r\n      ...bottom,\r\n    ]);\r\n\r\n    this.render(component, this.element);\r\n\r\n    if (this.config.sgf) {\r\n      this.loadKifu(KifuNode.fromSGF(this.config.sgf));\r\n    } else if (this.config.sgfFile) {\r\n      // TODO add some loading overlay and error state\r\n      fetch(this.config.sgfFile).then(\r\n        response => response.text(),\r\n      ).then(\r\n        value => this.loadKifu(KifuNode.fromSGF(value)),\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["Color","message","parser","_super","_this","__proto__","_newTarget","prototype","name","lineNo","charNo","sgfString","split","Array","join","__extends","Error","CODE_A","charCodeAt","CODE_Z","CODE_WHITE_CHAR","isCharUCLetter","char","charCode","sgf","position","this","SGFParser","nextChar","currentChar","SGFSyntaxError","optional","value","processChar","ident","values","parsePropertyValue","push","parsePropertyIdent","parsePropertyValues","property","properties","parseProperty","sequence","parseNode","parseSequence","children","parseCollection","gameTrees","parseGameTree","NONE","read","str","write","NUMBER","parseFloat","toString","TEXT","COLOR","WHITE","BLACK","POINT","x","y","String","fromCharCode","LABEL","text","substr","VECTOR","propertyValueTypes","_default","transformer","multiple","notEmpty","B","W","KO","MN","AB","AW","AE","PL","C","N","DM","GB","GW","HO","UC","V","BM","TE","DO","IT","CR","MA","SL","SQ","TR","LB","AR","LN","DD","TB","TW","AP","CA","FF","GM","ST","SZ","AN","BR","BT","CP","DT","EV","GN","GC","ON","OT","PB","PC","PW","RE","RO","RU","SO","US","WR","WT","TM","HA","KM","BL","WL","OB","OW","PM","VW","Repeating","processJSGF","gameTree","rootNode","setSGFProperties","lastNode","i","length","node","KifuNode","appendChild","escapeCharacters","escapeSGFValue","reduce","prev","current","replace","RegExp","parent","Object","output","propIdent","hasOwnProperty","getSGFProperty","map","innerSGF","clean","transformedSgf","fromSGF","path","depth","forks","unshift","indexOf","removeChild","some","child","contains","newNode","referenceNode","splice","newChild","oldChild","insertBefore","undefined","setProperty","callback","keys","forEach","propertyValueType_1","propValue","propValues","propertyValueType","val","setSGFProperty","appendToParent","JSON","parse","stringify","cloneNode","kifuNode","gameNo","fromJS","JAPANESE_RULES","repeating","allowRewrite","allowSuicide","komi","CHINESE_RULES","ING_RULES","NO_RULES","ALL","Japanese","GOE","NZ","AGA","Chinese","createGrid","size","grid","capCount","black","white","turn","clear","Position","isOnPosition","c","TypeError","EMPTY","clone","slice","diff","Math","floor","get","prevColor","set","capturesAbove","captureIfNoLiberties","capturesRight","capturesBelow","capturesLeft","hasLiberties","capture","alreadyTested","TL","ML","MM","MR","BS","WS","HF","color","arr","rules","positionStack","Game","pos","nextPosition","tryToPlay","pushPosition","applyMove","hasPositionRepeated","compare","isOnBoard","pop","type","zIndex","opacity","FieldBoardObject","factor","scaleX","scaleY","BoardObject","variation","E","MarkupBoardObject","start","end","_events","EventEmitter","evName","filter","fn","args","__spread","makeConfig","defaults","config","mergedConfig","defaultKeys","key","defVal","constructor","isArray","defaultBoardBaseTheme","stoneSize","marginSize","font","backgroundColor","backgroundImage","markupBlackColor","markupWhiteColor","markupNoneColor","markupLineWidth","shadowColor","shadowTransparentColor","shadowBlur","shadowOffsetX","shadowOffsetY","linesWidth","linesColor","starColor","starSize","coordinates","bold","labelsX","labelsY","starPoints","defaultBoardBaseConfig","width","height","viewport","top","right","bottom","left","theme","element","BoardBase","boardObject","addObject","hasObject","objects","removeObject","objectPos","obj","resize","SVG_NS","SVG_OBJECTS","SVG_GRID_MASK","SVG_SHADOWS","params","Arrow","createSVGElements","_a","group","document","createElementNS","startCircle","line","endTriangle","elem","setAttribute","lineWidth","updateSVGElements","markupGridMask","x1","y1","x2","y2","sqrt","getLineX","t","getLineY","triangleLen","tx","ty","getBaseLineX","getBaseLineY","circleLen","SVGFieldDrawHandler","transform","scale","rotate","ctx","SVGMarkupDrawHandler","updateElement","call","fillColor","Circle","circle","mask","Dim","rect","Dot","generateId","prefix","random","SVGStoneDrawHandler","addDef","stoneRadius","shadowFilterElement","blur_1","startRadius","max","stopRadius","innerHTML","shadow","id","GlassStoneBlack","createElement","filterElement","stoneGroup","stone","glow1","glow2","createShadow","GlassStoneWhite","filterElement1","filter1","filter2","filterElement2","maxWidth","Label","fontSize","removeAttribute","textContent","getComputedTextLength","Line","paths","fallback","randSeed","ceil","loadedPaths","RealisticStone","fallbackElement","SVGElement","image","addEventListener","SimpleStone","Square","square","Triangle","triangle","XMark","fromX","fromY","toX","toY","star","starPoint","letter","createCoordinates","style","userSelect","PropIdent","defaultSVGTheme","drawHandlers","drawHandlers.Circle","drawHandlers.Square","drawHandlers.Label","drawHandlers.Triangle","drawHandlers.XMark","drawHandlers.Dot","drawHandlers.Line","drawHandlers.Arrow","drawHandlers.Dim","ModernStoneWhite","ModernStoneBlack","svgBoardDefaultConfig","boardElement","display","verticalAlign","touchArea","borderTop","borderRight","borderLeft","borderBottom","svgElement","defsElement","setViewport","redraw","SVGBoard","drawGrid","drawCoordinates","drawObjects","contexts","gridElement","coordinatesElement","objectsElementMap","Map","createObjectElements","updateObject","elements","handler","getObjectHandler","def","elements_1","delete","_b","coordinatesTop","coordinatesLeft","coordinatesBottom","coordinatesRight","setSize","setCoordinates","on","registerBoardListener","evt","layerX","getRelativeCoordinates","layerY","emit","absoluteX","absoluteY","fieldWidth","offsetWidth","fieldHeight","offsetHeight","round","beforeInitSZ","event","target","beforeInitRU","goRules","applyGameChangesHA","currentNode","getProperty","SET_TURN","game","applyGameChangesMove","applyGameChangesPL","applyGameChangesSetup","setStone","loadKifu","plugins","basePropertyListeners.beforeInitSZ","basePropertyListeners.beforeInitRU","basePropertyListeners.applyGameChangesHA","basePropertyListeners.applyGameChangesMove","basePropertyListeners.applyGameChangesPL","basePropertyListeners.applyGameChangesSetup","PlayerBase","executeRoot","rulesName","find","emitNodeLifeCycleEvent","executeNode","popPosition","forEachProperty","propertyHandlers","executeNext","executePrevious","previous","next","pathOrMoveNumber","first","j","WHITE_MOVE","BLACK_MOVE","plugin","apply","defaultEditModeConfig","enabled","showVariations","gameStateStack","handleChange","enable","disable","EditMode","player","point","childNode","move","isValid","play","saveGameState","VARIATIONS_STYLE","lastX","lastY","blackStone","whiteStone","addedStone","_boardMouseMoveEvent","p","setPosition","_boardMouseOutEvent","_boardClickEvent","_nodeChange","off","restoreGameState","getCurrentPath","lastState","goTo","playerDOMDefaultConfig","enableMouseWheel","enableKeys","fastReplay","e","deltaY","preventDefault","hasFocus","fastReplayTimeout","window","setTimeout","fastReplayEnabled","clearTimeout","handleResize","handleKeydown","handleKeyup","PlayerDOM","component","container","wrapper","createWrapper","create","components","destroy","firstChild","removeEventListener","handleMouseWheel","className","tabIndex","_c","activeElement","direction","Container","gameInfoBoxDefaultConfig","gameInfoProperties","hideResult","printInfo","bind","title","tableWrapper","infoTable","GameInfoBox","hide","row","dataset","label","valueElement","link","href","querySelector","addInfo","RESULT","defaultConfig","menuItems","update","createDOM","ControlPanel","buttonGroup","parseInt","moveNumber","last","menuWrapper","menuButton","menu","createMenuItems","disabled","menuItem","menuItemElement","defaultChecked","classList","add","res","handleClick","checkable","remove","blur","download","GAME_NAME","toSGF","encodeURIComponent","body","click","displayCoordinates","boardComponent","editMode","setEnabled","gameInfo","overlay","overlayClose","parentElement","modal","modalContent","wgoInfo","LabelBoardObject","colorsMap","defaultSVGBoardComponentConfig","currentMoveBlackMark","currentMoveWhiteMark","variationDrawHandler","SVGLabel","highlightCurrentMove","showCurrentVariations","viewportStack","applyNodeChanges","clearNodeChanges","applyMarkupProperty","applyLabelMarkupProperty","applyLineMarkupProperty","applyViewportProperty","clearViewportProperty","applyMoveProperty","addTemporaryBoardObject","removeTemporaryBoardObject","updateTemporaryBoardObject","SVGBoardComponent","stoneBoardsObjects","temporaryBoardObjects","board","handleBoardClick","boardMouseX","boardMouseY","handleBoardMouseMove","handleBoardMouseOut","getStone","this_1","moves","getVariations","SVGCustomLabelBoardObject","fromCodePoint","handleVariationCursor","ind","findIndex","shouldShowCurrentVariations","removeVariationCursor","cursor","updateStones","addVariationMarkup","clearTemporaryBoardObjects","boardMarkup","LineBoardObject","currentViewport","getViewport","minX","min","minY","maxX","maxY","getSize","previousViewport","isThereMarkup","SVGCustomFieldBoardObject","o","b","shouldShowVariations","st","samePoint","p1","p2","field","propIdents","visible","ResponsiveComponent","shouldRenderComponent","placeholder","createPlaceholder","replaceChild","componentElement","minWidth","minHeight","maxHeight","orientation","createComment","commentBoxDefaultConfig","formatMoves","formatNicks","setComments","clearComments","commentsElement","CommentsBox","comment","formatComment","querySelectorAll","coordinatesToPoint","formattedText","boardSize","toLowerCase","colorChar","colorName","setName","setRank","setTeam","setCaps","playerElement","playerNameElement","playerRankElement","playerCapsElement","playerTeamElement","PlayerTag","initialSet","comments","sgfFile","init","SimplePlayer","use","svgBoardComponent","controlPanelConfig","rightColumn","render","fetch","then","response"],"sourceRoot":""}