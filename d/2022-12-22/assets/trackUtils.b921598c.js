const i=new WeakMap,g=(e,a)=>{if(i.has(e))return e;i.set(e,!0);const r=(t=1e3)=>{if(e.readyState==="ended")return;const n=a.getTransceivers().find(o=>o.receiver.track===e);n&&(n.currentDirection==="inactive"||n.currentDirection==="sendonly")?(e.stop(),e.dispatchEvent(new Event("ended"))):t<64e3&&setTimeout(()=>{r(t*2)},t)};return e.addEventListener("mute",()=>r()),e},m=e=>new Promise(async(a,r)=>{try{const t=new RTCPeerConnection,n=new RTCPeerConnection;t.addEventListener("icecandidate",({candidate:c})=>{c&&n.addIceCandidate(c)}),n.addEventListener("icecandidate",({candidate:c})=>{c&&t.addIceCandidate(c)}),n.addEventListener("track",c=>{a(c.track)}),e.addEventListener("ended",()=>{t.close(),n.close()}),t.addTrack(e);const o=await t.createOffer();await t.setLocalDescription(o),await n.setRemoteDescription(o);const s=await n.createAnswer();await n.setLocalDescription(s),await t.setRemoteDescription(s)}catch(t){r(t)}}),w=async e=>{if(e.kind!=="video")throw new Error("track kind is not video");const a=document.createElement("canvas"),r=a.getContext("2d"),t=new ImageCapture(e);return{getImage:async()=>{try{const o=await t.grabFrame();return a.width=o.width,a.height=o.height,r.drawImage(o,0,0),a.toDataURL("image/jpeg")}catch(o){return console.log("failed to grab frame from viedeo track",o),null}}}},d=e=>new Promise((a,r)=>{const t=new Image;t.onload=()=>a(t),t.onerror=r,t.src=e}),v=()=>{const e=document.createElement("canvas"),a=e.getContext("2d"),r=e.captureStream(),[t]=r.getVideoTracks();return{videoTrack:t,setImage:async o=>{const s=await d(o);e.width=s.width,e.height=s.height,a.drawImage(s,0,0)}}};export{v as i,m as l,g as s,w as v};
