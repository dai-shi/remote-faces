{"version":3,"file":"static/js/326.fc92be0f.chunk.js","mappings":"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","sources":["../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/bufferbuilder.js","../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/binarypack.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/utils.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","../../node_modules/peerjs/node_modules/sdp/sdp.js","../../node_modules/peerjs/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/edge_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/common_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_factory.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_core.js","../../node_modules/peerjs/lib/adapter.ts","../../node_modules/peerjs/lib/supports.ts","../../node_modules/peerjs/lib/util.ts","../../node_modules/peerjs/node_modules/eventemitter3/index.js","../../node_modules/peerjs/lib/logger.ts","../../node_modules/peerjs/lib/enums.ts","../../node_modules/peerjs/lib/socket.ts","../../node_modules/peerjs/lib/negotiator.ts","../../node_modules/peerjs/lib/baseconnection.ts","../../node_modules/peerjs/lib/mediaconnection.ts","../../node_modules/peerjs/lib/encodingQueue.ts","../../node_modules/peerjs/lib/dataconnection.ts","../../node_modules/peerjs/lib/api.ts","../../node_modules/peerjs/lib/peer.ts","../../node_modules/peerjs/lib/exports.ts"],"sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","import webRTCAdapter from \"webrtc-adapter\";\n\nexport { webRTCAdapter };\n","import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  }\n\n  isBrowserSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = this.getVersion();\n\n    const validBrowser = this.supportedBrowsers.includes(browser);\n\n    if (!validBrowser) return false;\n\n    if (browser === 'chrome') return version >= this.minChromeVersion;\n    if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = webRTCAdapter.browserDetails.version || 0;\n\n    if (browser === 'chrome' && version < 72) return false;\n    if (browser === 'firefox' && version >= 59) return true;\n    if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) { }\n    finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}","import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState changed to disconnected on the connection with \" +\n            peerId\n          );\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n","import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n"],"names":["e","module","exports","binaryFeatures","r","window","t","i","u","BufferBuilder","unpack","pack","n","Math","a","p","Object","length","value","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","this","arguments","wrappedCallback","modifiedEvent","handleEvent","_eventMap","Map","set","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","size","keys","defineProperty","enumerable","configurable","bool","Error","logDisabled_","deprecationWarnings_","console","log","oldMethod","newMethod","warn","result","browser","version","navigator","mozGetUserMedia","extractVersion","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","match","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","data","isObject","reduce","accumulator","key","isObj","isEmptyObject","assign","writable","track","outbound","streamStatsType","filteredResult","trackStats","forEach","type","trackIdentifier","id","push","stats","trackId","trackStat","walkStats","uastring","expr","pos","parseInt","val","toString","call","base","resultSet","name","endsWith","browserDetails","constraintsToChrome_","c","o","mandatory","optional","cc","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","slice","oc","mix","advanced","concat","shimConstraints_","constraints","func","JSON","parse","stringify","audio","remap","obj","b","video","face","facingMode","getSupportedFacingModeLies","matches","getSupportedConstraints","enumerateDevices","then","dev","devices","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","logging","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","default","utils","getSourceId","getDisplayMedia","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","sourceId","maxFrameRate","maxWidth","maxHeight","error","MediaStream","webkitMediaStream","s","wrapPeerConnectionEvent","transceiver","receiver","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","getReceivers","te","event","Event","streams","dispatchEvent","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","RTCRtpSender","origGetSenders","senders","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","standardStats","report","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","map","resolve","RTCRtpReceiver","filterStats","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","origGetLocalStreams","getLocalStreams","nativeStreams","_reverseStreams","_streams","alreadyExists","newStream","signalingState","oldStream","method","nativeMethod","methodObj","args","isLegacyCall","description","desc","replaceInternalStreamId","origSetLocalDescription","setLocalDescription","sdp","externalStream","internalId","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","RTCIceCandidate","target","getConfiguration","sdpSemantics","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","iceServers","edgeVersion","hasTurn","server","urls","url","deprecated","isString","validTurn","startsWith","generateIdentifier","foundation","component","protocol","priority","ip","address","port","payloadType","direction","uri","parameter","ssrc","semantics","ssrcs","algorithm","role","fingerprints","tag","cryptoSuite","keyParams","sessionParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","usernameFragment","password","codecs","headerExtensions","fecMechanisms","rtcp","split","join","codecPayloadType","fec","mechanism","isNaN","maxMessageSize","substr","fmt","username","sessionId","sessionVersion","netType","addressType","SDPUtils","require","writeMediaSection","caps","dtlsRole","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","_initialTrackId","msid","sendEncodingParameters","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","pt","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","clockRate","numChannels","rtcpFeedback","fb","j","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","code","NotSupportedError","InvalidAccessError","TypeError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","fireAddTrack","trackEvent","setTimeout","_dispatchEvent","config","_eventTarget","document","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","filterIceServers","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","enabled","_createIceGatherer","sdpMLineIndex","shift","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","sdpMid","cand","ufrag","serializedCandidate","writeCandidate","parseCandidate","toJSON","sections","getMediaSections","getDescription","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","cname","compound","rtcpParameters","receive","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","start","_updateSignalingState","receiverList","iceOptions","lines","splitLines","getKind","getDirection","remoteMsid","parseMsid","getMid","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","getCapabilities","codec","isNewTrack","nativeTrack","sid","item","close","newState","states","new","closed","checking","connected","completed","disconnected","failed","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","createAnswer","mediaSectionsInOffer","localTrack","reducedSize","addIceCandidate","candidateString","trim","senderOrReceiver","promises","all","allStats","results","ortcObjectName","nativeGetstats","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","fixStatsType","methods","catch","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","replaceTrack","setTrack","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","DataChannel","RTCDataChannel","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","test","rid","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","getParameters","setParameters","origGetParameters","origCreateOffer","finally","origCreateAnswer","_localStreams","_addTrack","index","tracks","_remoteStreams","_onaddstream","_onaddstreampoly","successCallback","failureCallback","options","promise","withCallback","_getUserMedia","shimConstraints","errcb","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","audioTransceiver","getTransceivers","setDirection","videoTransceiver","AudioContext","webkitAudioContext","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","_sctp","sctpInDescription","mLine","parseMLine","isFirefox","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","remoteMMS","Number","POSITIVE_INFINITY","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","byteLength","readyState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","nativeSRD","line","nativeAddIceCandidate","shimChrome","shimFirefox","shimEdge","shimSafari","detectBrowser","adapter","commonShim","disableLog","disableWarnings","chromeShim","shimPeerConnection","browserShim","shimAddIceCandidateNullOrEmpty","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimConnectionState","shimMaxMessageSize","shimSendThrowTypeError","removeExtmapAllowMixed","firefoxShim","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","edgeShim","shimGetDisplayMedia","shimReplaceTrack","safariShim","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext","webRTCAdapter","Supports","isIOS","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","getBrowser","getVersion","isWebRTCSupported","isBrowserSupported","isUnifiedPlanSupported","util","credential","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","binaryType","_dataCount","ceil","__peerData","total","FileReader","onload","readAsArrayBuffer","Uint8Array","charCodeAt","buffer","random","location","__proto__","l","v","_logLevel","Disabled","All","_print","Warnings","Errors","next","done","Socket","_baseUrl","_id","_socket","_disconnected","WebSocket","onmessage","emit","Message","onclose","_cleanup","Disconnected","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","pingInterval","_wsOpen","Heartbeat","_messagesQueue","clearTimeout","sent","trys","ops","throw","return","Negotiator","connection","_startPeerConnection","peerConnection","Media","_stream","_addTracksToConnection","originator","Data","initialize","_makeOffer","handleSDP","provider","_setupListeners","peer","connectionId","socket","Candidate","payload","dst","noop","IceStateChanged","getConnection","_addStreamToMediaConnection","sdpTransform","metadata","serialization","Offer","emitError","WebRTC","Answer","_makeAnswer","BaseConnection","_open","MediaConnection","_localStream","ID_PREFIX","randomToken","_negotiator","startConnection","ConnectionType","_remoteStream","Stream","ServerMessageType","handleCandidate","_payload","_getMessages","handleMessage","cleanup","_removeConnection","open","Close","EncodingQueue","fileReader","_processing","doNextTask","destroy","_queue","queue","processing","abort","DataConnection","Binary","_encodingQueue","on","_bufferedSend","_dc","_bufferSize","_configureDataChannel","Open","_handleDataMessage","constructor","BinaryUTF8","Blob","blobToArrayBuffer","ArrayBuffer","String","binaryStringToArrayBuffer","_handleChunk","_chunkedData","count","_buffer","removeAllListeners","_sendChunks","enque","_buffering","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","chunk","API","_options","secure","host","path","Date","getTime","_buildUrl","fetch","status","text","json","Peer","debug","DEFAULT_KEY","token","hostname","isSecure","logFunction","setLogFunction","logLevel","_api","_createServerConnection","validateId","_delayedAbort","InvalidID","_initialize","retrieveId","_abort","ServerError","BrowserIncompatible","create","_connections","_destroyed","_handleMessage","SocketError","Network","disconnect","SocketClosed","src","_lastServerId","msg","IdTaken","UnavailableID","InvalidKey","Leave","_cleanupPeer","Expire","PeerUnavailable","_","_addConnection","Call","Connection","y","_storeMessage","_lostMessages","destroyed","listAllPeers","peerjs"],"sourceRoot":""}