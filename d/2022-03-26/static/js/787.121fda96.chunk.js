(self.webpackChunkremote_faces_web=self.webpackChunkremote_faces_web||[]).push([[787],{17904:(e,t,n)=>{"use strict";n.r(t),n.d(t,{createRoom:()=>y});var a=n(57874),r=n(93057),s=n(65954),o=n(1239),i=n(50634),c=n(76996);let d=0;var u=n(52780),p=n(52712).Buffer;const w=a.Ue,l=new Map,f=async(e,t)=>{const n=`${e} ${t}`;let a=l.get(n);return a||(a=(await(0,s.JQ)(n)).slice(0,c.W),l.set(n,a)),a},y=async(e,t,n,a,l,y)=>{let g=!1;const m=(()=>{const e=new Map;return{setAcceptingMediaTypes:(t,n)=>{const a=e.get(t.peer);a&&(a.acceptingMediaTypes=n)},getAcceptingMediaTypes:t=>{const n=e.get(t.peer);return n?n.acceptingMediaTypes:[]},addConn:(t,n)=>{if(e.get(t))throw new Error("addConn: already exists");const a={peerIndex:(d+=1,d),peer:t,userId:n,audioWorkers:new Map,vidoeSetImages:new Map};return e.set(a.peer,{conn:a,acceptingMediaTypes:[]}),a},getConn:t=>{const n=e.get(t);return n?n.conn:null},findConn:t=>{const n=Array.from(e.values()).find((e=>e.conn.peerIndex===t));return n?n.conn:null},delConn:t=>{const n=e.get(t.peer);if(!n||n.conn!==t)throw new Error("delConn: does not exist");e.delete(t.peer)},getPeerIndexList:()=>Array.from(e.values()).map((e=>e.conn.peerIndex)),forEachConns:t=>{Array.from(e.values()).forEach((e=>{t(e.conn)}))},size:()=>e.size}})();let h=[];const b=e.slice(0,c.W),I=await(0,s.I1)(e.slice(c.W));n({type:"INITIALIZING_PEER",peerIndex:0});const E=await w({repo:(0,s.Ze)(),config:{Addresses:{Swarm:[(0,o.Q_)()||"/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star/"]},Bootstrap:[]}}),v=(await E.id()).id;await E.pubsub.subscribe(b,(e=>A(e))),await E.pubsub.subscribe(`${b} ${v}`,(e=>A(e)));const C=async(e,t)=>{try{console.log("payload to encrypt",e,t);for await(const n of(0,s.Ri)(JSON.stringify(t),I))await E.pubsub.publish(e,p.from(n),{})}catch(n){console.error("sendPayload",n)}},T=async e=>{if(g)return;const n={userId:t,data:e,mediaTypes:h};await C(b,n)};const k=new Map,x=async(e,t)=>{try{if(!(0,i.Kn)(t))return;(async(e,t)=>{Array.isArray(t)&&t.every((e=>"string"===typeof e))&&m.setAcceptingMediaTypes(e,t)})(e,t.mediaTypes),((e,t)=>{const n={userId:e.userId,peerIndex:e.peerIndex,mediaTypes:m.getAcceptingMediaTypes(e)};try{l(t,n)}catch(a){console.warn("receiveData",a)}})(e,t.data)}catch(n){console.info("Error in handlePayload",n,t)}},A=async e=>{if(g)return;if(e.from===v)return;const t=await(async e=>{try{const t=await(0,s.KI)(e,I);if(null===t)return;const n=JSON.parse(t);return console.log("decrypted payload",n),n}catch(t){return void console.info("Error in parsePayload",t,e)}})(e.data);if(void 0===t)return;const r=(e=>{if(!(0,i.Kn)(e))return null;const t=e.userId;return"string"!==typeof t?null:t})(t);let o=m.getConn(e.from);o||(r?o=((e,t)=>{const r=m.addConn(e,t);return a(r.peerIndex),n({type:"NEW_CONNECTION",peerIndex:r.peerIndex}),r})(e.from,r):console.warn("cannot initialize conn without user id")),o&&await x(o,t);const c=m.getPeerIndexList();n({type:"CONNECTED_PEERS",peerIndexList:c})},M=async()=>{if(g)return;const e=await E.pubsub.peers(b);if(m.forEachConns((t=>{e.includes(t.peer)||(m.delConn(t),n({type:"CONNECTION_CLOSED",peerIndex:t.peerIndex}))})),!e.length)return n({type:"CONNECTING_SEED_PEERS"}),await(0,r._)(1e3),void M();m.size()||await T(null),await(0,r._)(5e3),M()};M();const W=new WeakMap,S=e=>{e&&e()},N=new Map;return{broadcastData:T,sendData:async(e,n)=>{if(g)return;const a=m.findConn(n);if(!a)return;const r={userId:t,data:e,mediaTypes:h};await(async(e,t)=>{const n=`${b} ${e.peer}`;await C(n,t)})(a,r)},acceptMediaTypes:t=>{g||(k.forEach(((e,n)=>{t.includes(n)||(e.forEach((e=>e())),k.delete(n))})),t.forEach((t=>{if(!k.has(t))if(t.endsWith("Audio"))(async t=>{const n=[];k.set(t,n);const a=await f(e,t),r=async e=>{if(e.from===v)return;const a=m.getConn(e.from);if(!a)return void console.warn("conn not ready");const r={userId:a.userId,peerIndex:a.peerIndex,mediaTypes:m.getAcceptingMediaTypes(a)};if(!a.audioWorkers.has(t)){const e=new AudioContext,s=e.createMediaStreamDestination();let o=0,i=0;const c=new Worker("audio-decoder.js",{type:"module"});c.onmessage=t=>{const n=new Float32Array(t.data);i||(o=e.currentTime),o+=.06,i+=1;const a=e.createBuffer(1,2880,48e3);a.copyToChannel(n,0);const r=e.createBufferSource();r.buffer=a,r.connect(s),r.onended=()=>{i-=1},r.start(o)},a.audioWorkers.set(t,c);const d=s.stream.getAudioTracks()[0];y(t,await(0,u.sW)(d),r),n.push((()=>{e.close(),d.dispatchEvent(new Event("ended")),c.terminate(),a.audioWorkers.delete(t)}))}const o=await(0,s.Km)(e.data.buffer,e.data.byteOffset,e.data.byteLength,I),i=a.audioWorkers.get(t);i&&o.forEach((e=>{i.postMessage([e],[e])}))};E.pubsub.subscribe(a,r),n.unshift((()=>{E.pubsub.unsubscribe(a,r)}))})(t);else{if(!t.endsWith("Video"))throw new Error("pubsubRoom: cannot guess mediaType (Audio/Video)");(async t=>{const n=[];k.set(t,n);const a=await f(e,t),r=async e=>{if(e.from===v)return;const a=m.getConn(e.from);if(!a)return void console.warn("conn not ready");const r={userId:a.userId,peerIndex:a.peerIndex,mediaTypes:m.getAcceptingMediaTypes(a)};if(!a.vidoeSetImages.has(t)){const{videoTrack:e,setImage:s}=(0,u.FX)();a.vidoeSetImages.set(t,s),y(t,e,r),n.push((()=>{e.dispatchEvent(new Event("ended")),a.vidoeSetImages.delete(t)}))}const o=a.vidoeSetImages.get(t);try{const t=await(0,s.KI)(e.data,I);o&&t&&o(t)}catch(i){console.info("Error in parse for video media",i)}};E.pubsub.subscribe(a,r),n.unshift((()=>{E.pubsub.unsubscribe(a,r)}))})(t)}})),h=t,T(null))},addTrack:async(t,n)=>{if(!g){if(N.has(t))throw new Error(`track is already added for ${t}`);if(N.set(t,n),t.endsWith("Audio"))(async(t,n)=>{S(W.get(n));const a=new MediaStream([n]),r=new AudioContext,o=r.createMediaStreamSource(a);await r.audioWorklet.addModule("audio-encoder.js");const i=new AudioWorkletNode(r,"audio-encoder"),c=await f(e,t),d=[];i.port.onmessage=async e=>{if(d.push(e.data),d.length<17)return;const t=await(0,s.jh)(d.splice(0,d.length),I);E.pubsub.publish(c,p.from(t),{})},o.connect(i),W.set(n,(()=>{r.close()}))})(t,n);else{if(!t.endsWith("Video"))throw new Error("pubsubRoom: cannot guess mediaType (Audio/Video)");(async(t,n)=>{S(W.get(n));const a=await f(e,t),{getImage:o}=await(0,u.gG)(n);let i=!1;const c=async()=>{if(i)return;const e=await o();if(e)for await(const t of(0,s.Ri)(e,I)){if(i)return;await E.pubsub.publish(a,p.from(t),{}),await(0,r._)(1e3)}else await(0,r._)(5e3);c()};c(),W.set(n,(()=>{i=!0}))})(t,n)}}},removeTrack:e=>{if(g)return;const t=N.get(e);t?(N.delete(e),S(W.get(t))):console.log("track is already removed for",e)},dispose:async()=>{g=!0,await E.pubsub.unsubscribe(`${b} ${v}`,A),await E.pubsub.unsubscribe(b,A),await E.stop()}}}},52780:(e,t,n)=>{"use strict";n.d(t,{FX:()=>i,gG:()=>o,sW:()=>s,xm:()=>r});const a=new WeakMap,r=(e,t)=>{if(a.has(e))return e;a.set(e,!0);const n=function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3;if("ended"===e.readyState)return;const r=t.getTransceivers().find((t=>t.receiver.track===e));!r||"inactive"!==r.currentDirection&&"sendonly"!==r.currentDirection?a<64e3&&setTimeout((()=>{n(2*a)}),a):(e.stop(),e.dispatchEvent(new Event("ended")))};return e.addEventListener("mute",(()=>n())),e},s=e=>new Promise((async(t,n)=>{try{const n=new RTCPeerConnection,a=new RTCPeerConnection;n.addEventListener("icecandidate",(e=>{let{candidate:t}=e;t&&a.addIceCandidate(t)})),a.addEventListener("icecandidate",(e=>{let{candidate:t}=e;t&&n.addIceCandidate(t)})),a.addEventListener("track",(e=>{t(e.track)})),e.addEventListener("ended",(()=>{n.close(),a.close()})),n.addTrack(e);const r=await n.createOffer();await n.setLocalDescription(r),await a.setRemoteDescription(r);const s=await a.createAnswer();await a.setLocalDescription(s),await n.setRemoteDescription(s)}catch(a){n(a)}})),o=async e=>{if("video"!==e.kind)throw new Error("track kind is not video");const t=document.createElement("canvas"),n=t.getContext("2d"),a=new ImageCapture(e);return{getImage:async()=>{try{const e=await a.grabFrame();return t.width=e.width,t.height=e.height,n.drawImage(e,0,0),t.toDataURL("image/jpeg")}catch(e){return console.log("failed to grab frame from viedeo track",e),null}}}},i=()=>{const e=document.createElement("canvas"),t=e.getContext("2d"),n=e.captureStream(),[a]=n.getVideoTracks();return{videoTrack:a,setImage:async n=>{const a=await(r=n,new Promise(((e,t)=>{const n=new Image;n.onload=()=>e(n),n.onerror=t,n.src=r})));var r;e.width=a.width,e.height=a.height,t.drawImage(a,0,0)}}}},45022:()=>{},32296:()=>{},91586:()=>{},77265:()=>{},59983:()=>{},97868:()=>{},73034:()=>{},17847:()=>{},75715:()=>{},45089:()=>{},31566:()=>{},95745:()=>{},50471:()=>{},71632:()=>{}}]);
//# sourceMappingURL=787.121fda96.chunk.js.map