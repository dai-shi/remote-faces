{"version":3,"file":"static/js/326.fc92be0f.chunk.js","mappings":"+8BAAA,SACA,4BACA,IAEA,OADA,gBAEA,SACA,UALA,GASA,mDACA,IACA,+CACA,SACA,UAJA,GAQAA,EAAOC,QAAQC,eAAiB,EAChC,4BAMA,aACA,gBACA,eAPA,6BACA,kDACA,iEAQA,+BACA,mBACA,sBAEA,aACA,sBAIA,6BACA,0BACA,mCACA,uBACA,YAEA,oBACA,kBAIA,iCAEA,GADA,aACA,kBAEA,IADA,YACA,iCACA,yBAEA,mBAEA,8BAIAF,EAAOC,QAAQE,cAAgB,G,0BC/D/B,yCACA,sCAEA,GACA,mBAEA,OADA,SACA,UAEA,iBACA,YAGA,OAFA,UACA,gBAOA,cAEA,aACA,kBACA,8CACA,uCA4OA,aACA,yBAoPA,cACA,sBAEA,oBACA,eACA,kBACA,oBACA,SA/eAH,EAAA,UAUA,8BACA,IAOA,EAPA,sBACA,SACA,SACA,cACA,iBAIA,iBACA,0BACA,iBACA,6BACA,iBACA,4BACA,iBACA,0BAGA,UACA,SACA,YACA,SA0BA,SAEA,SAEA,SAEA,SACA,OA/BA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,4BACA,SACA,2BACA,SACA,4BACA,SACA,4BACA,SACA,4BACA,SACA,0BACA,SACA,2BACA,SACA,2BACA,SACA,2BASA,SAEA,OADA,uBACA,sBACA,SAEA,OADA,uBACA,sBACA,SAEA,OADA,uBACA,mBACA,SAEA,OADA,uBACA,mBACA,SAEA,OADA,uBACA,qBACA,SAEA,OADA,uBACA,qBACA,SAEA,OADA,uBACA,mBACA,SAEA,OADA,uBACA,qBAIA,oCACA,oCAEA,OADA,aACA,GAGA,qCACA,mBACA,EACA,0BAEA,OADA,cACA,GAGA,qCACA,mBACA,EAGA,KADA,KADA,SACA,MACA,MACA,KAEA,OADA,cACA,GAGA,qCACA,mBACA,EAOA,KADA,KADA,KADA,KADA,KADA,KADA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEA,OADA,cACA,GAGA,mCACA,0BACA,sBAGA,oCACA,2BACA,0BAGA,oCACA,2BACA,0BACA,kBAGA,oCACA,2BACA,0BACA,kBAGA,mCACA,4BACA,4DACA,kCAEA,qDAKA,OAJA,cAIA,GAGA,sCAOA,IANA,IAGA,EACA,EAJA,eACA,IACA,KAIA,MACA,QACA,KACA,0BACA,MACA,WACA,uBACA,0BACA,OAEA,4BACA,UACA,0BACA,MAKA,OADA,cACA,GAGA,qCAEA,IADA,mBACA,YACA,mBAEA,UAGA,mCAEA,IADA,SACA,aACA,oBACA,gBACA,OAEA,UAGA,oCACA,2BAEA,kBAEA,WAHA,MAGA,OADA,mBAEA,kBAGA,qCACA,2BACA,uBAEA,oBAIA,WALA,MAKA,QAHA,mBACA,iBACA,qBAIA,6BACA,iBACA,oBACA,qCAEA,+DAQA,iCACA,uCAGA,6BACA,eACA,gBACA,yBACA,gBACA,kBACA,qBAEA,yBAEA,sBACA,EACA,oCACA,GACA,oCAEA,mBACA,mCACA,iBAgCA,kDA/BA,YACA,mCACA,CACA,oBACA,YACA,wBACA,0DACA,sBACA,kBACA,qBACA,iCAEA,sBAEA,2BACA,qBACA,wCAEA,6BAEA,+CACA,yBACA,WACA,mCACA,sCAGA,6DAFA,8CAQA,4BAGA,iCACA,qCACA,SACA,4BACA,YACA,+BACA,wBACA,qBAIA,kCAHA,+BACA,oBAIA,8BAGA,oCACA,MA+KA,YACA,oBAEA,mBAEA,wCApLA,IAEA,SACA,4BACA,YACA,+BACA,wBACA,qBAIA,kCAHA,+BACA,oBAIA,8BAGA,mCACA,eACA,SACA,4BACA,YACA,+BACA,wBACA,qBAIA,kCAHA,+BACA,oBAIA,oBACA,iBAIA,qCACA,kBACA,sCACA,gBACA,+BACA,wBACA,mBACA,+BACA,uBACA,kBACA,+BACA,yBACA,uBACA,+BACA,wBACA,uBACA,+BACA,yBACA,iCACA,+BACA,wBACA,iDACA,+BACA,uBACA,oCAIA,mCAHA,+BACA,sBAMA,oCACA,QACA,MACA,IACA,MAEA,uCACA,oBACA,+BACA,iBACA,mBACA,YACA,MACA,+BACA,mBACA,oBAGA,oCACA,IACA,EADA,eACA,OACA,SACA,4BACA,YACA,+BACA,wBACA,qBA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A,YACA,kCACA,MACA,cACA,iBACA,MACA,YACA,eACA,0BACA,MACA,QACA,eAIA,UAIA,6BACA,SACA,qBACA,oBACA,iCACA,mBACA,wBACA,eAEA,aAkBA,OAjBA,cACA,UACA,8BACA,gBACA,gBACA,yBACA,gBACA,uBAEA,8CACA,kBACA,oBAEA,+BACA,gBACA,qCAEA,0BAKA,8BACA,gCAKA,0BACA,6BACA,GACA,oCAUA,OAPA,kBAEA,YACA,8BACA,4CAEA,yBACA,GAKA,0BACA,6BACA,yBACA,0BAEA,mCACA,gDACA,wBAMA,0BACA,6BACA,OACA,qBACA,4DACA,WAMA,0BACA,yCACA,sCACA,gBACA,IACA,kBAMA,wBAIA,IAHA,IACA,EADA,KAEA,wCACA,mBAEA,GADA,0BACA,gBAEA,UAIA,wBACA,SACA,gBAIA,YAHA,yBACA,0BAEA,gDACA,SACA,+CACA,gBACA,8BAEA,aAGA,sCAEA,UAKA,0BACA,4CACA,OACA,eACA,wBAIA,0BACA,SACA,gBAYA,gBAXA,yBACA,0BAEA,uCAEA,oCACA,8BACA,oDACA,UAGA,GAKA,6BACA,qBACA,GACA,mCAEA,mBAOA,OANA,MACA,gCACA,uBAEA,0BAEA,GAGA,6BACA,8BACA,OACA,oBACA,yBACA,2BAOA,qBACA,mCACA,KACA,oBAIA,+BACA,8BACA,OACA,6BACA,aAOA,kCAKA,OACA,YACA,aANA,kBACA,kBAKA,0BAKA,oCACA,0BAIA,OAHA,oCACA,sDAEA,GAKA,8BACA,6BACA,OACA,sBACA,iBACA,eACA,2BAIA,8BACA,4BACA,mBACA,6BACA,oCACA,cACA,kDACA,QAKA,mCACA,4BACA,YAEA,6BACA,OACA,mBACA,aACA,cACA,wCACA,2CAIA,mCACA,uBACA,WACA,+BACA,wBACA,+BACA,KAIA,oCAGA,OAFA,kBACA,aACA,wBAMA,iCACA,wBACA,mBACA,oBACA,iBACA,YAGA,CACA,8BACA,uBAJA,MASA,iCACA,yDACA,mBAIA,iCASA,IARA,OACA,UACA,oBACA,iBACA,SAGA,EADA,gBACA,cACA,oBACA,WACA,gBACA,wBACA,MACA,uBACA,gBACA,mBAQA,OANA,2CACA,6BACA,sBACA,mBACA,iBAEA,sBACA,UACA,aACA,6CAWA,OAJA,kDACA,6CAGA,GAKA,oCACA,SAGA,cACA,6BACA,yBACA,6BACA,uCACA,uBAEA,iBACA,iBAEA,0BACA,iCAGA,8BACA,oBACA,kBACA,uBAEA,QAiBA,OAhBA,8BACA,eACA,iBAGA,MACA,2BAEA,oBAEA,oBACA,wCACA,uBAIA,GAKA,yCACA,IAcA,EAdA,KACA,0BACA,sCACA,yCAGA,6BACA,iBACA,8BAEA,oBACA,+BAEA,wBAGA,sCACA,iBAEA,OADA,wBACA,iBACA,4BAGA,yCACA,WAGA,8BACA,mDACA,OACA,OACA,gDAEA,OACA,gBAEA,UACA,KACA,iCACA,KACA,OACA,gCAEA,eAIA,iBACA,QACA,SAKA,4BAeA,OAdA,WAEA,EADA,4BACA,4BACA,0BAEA,oCACA,YAIA,uBACA,mBAGA,GAIA,kCACA,SAIA,6BACA,iBACA,8BAEA,oBACA,+BACA,GACA,IACA,gBACA,eAKA,sCACA,yBACA,wBAIA,oCAGA,OAFA,iBAEA,GAKA,wBACA,MACA,6BACA,gBAEA,eADA,6BACA,eAEA,iCACA,iBACA,8BAEA,oBACA,8BAEA,kBAEA,SADA,yBACA,uBAOA,mCACA,IAEA,EAFA,kBACA,yCAEA,aACA,gCAEA,WACA,SAEA,sCACA,cACA,OACA,kCACA,eACA,kBAIA,GADA,8BACA,UACA,uCACA,WACA,WACA,OACA,uBACA,cACA,oBAUA,qCACA,SAiBA,OAfA,EADA,yBACA,CACA,mDACA,uBACA,8BAGA,CACA,+CACA,uBACA,0DAGA,kBACA,sDAEA,YAOA,+BACA,8CAQA,0CACA,IACA,iBAQA,mBAFA,wBAGA,KARA,GAGA,uBAKA,MACA,yCAKA,sCACA,sCAyBA,GAtBA,wBACA,oCAGA,yBACA,qCACA,gCAEA,yBAEA,YACA,2BACA,2BACA,oBACA,YACA,oBACA,cACA,oBAEA,oBAGA,aAEA,uBACA,4BACA,UAGA,8CACA,MACA,kCACA,k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","sources":["../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/bufferbuilder.js","../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/binarypack.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/utils.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","../../node_modules/peerjs/node_modules/sdp/sdp.js","../../node_modules/peerjs/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/edge_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/common_shim.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_factory.js","../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_core.js","../../node_modules/peerjs/lib/adapter.ts","../../node_modules/peerjs/lib/supports.ts","../../node_modules/peerjs/lib/util.ts","../../node_modules/peerjs/node_modules/eventemitter3/index.js","../../node_modules/peerjs/lib/logger.ts","../../node_modules/peerjs/lib/enums.ts","../../node_modules/peerjs/lib/socket.ts","../../node_modules/peerjs/lib/negotiator.ts","../../node_modules/peerjs/lib/baseconnection.ts","../../node_modules/peerjs/lib/mediaconnection.ts","../../node_modules/peerjs/lib/encodingQueue.ts","../../node_modules/peerjs/lib/dataconnection.ts","../../node_modules/peerjs/lib/api.ts","../../node_modules/peerjs/lib/peer.ts","../../node_modules/peerjs/lib/exports.ts"],"sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","import webRTCAdapter from \"webrtc-adapter\";\n\nexport { webRTCAdapter };\n","import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  }\n\n  isBrowserSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = this.getVersion();\n\n    const validBrowser = this.supportedBrowsers.includes(browser);\n\n    if (!validBrowser) return false;\n\n    if (browser === 'chrome') return version >= this.minChromeVersion;\n    if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = webRTCAdapter.browserDetails.version || 0;\n\n    if (browser === 'chrome' && version < 72) return false;\n    if (browser === 'firefox' && version >= 59) return true;\n    if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) { }\n    finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}","import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState changed to disconnected on the connection with \" +\n            peerId\n          );\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n","import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n"],"names":["module","exports","binaryFeatures","BufferBuilder","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","this","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","set","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","size","Object","keys","length","defineProperty","enumerable","configurable","bool","Error","logDisabled_","deprecationWarnings_","console","log","oldMethod","newMethod","warn","result","browser","version","navigator","mozGetUserMedia","extractVersion","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","match","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","data","isObject","reduce","accumulator","key","isObj","value","isEmptyObject","assign","track","outbound","streamStatsType","filteredResult","trackStats","forEach","type","trackIdentifier","id","push","t","stats","trackId","trackStat","walkStats","uastring","expr","pos","parseInt","val","toString","call","base","resultSet","name","endsWith","browserDetails","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","slice","oc","mix","advanced","concat","shimConstraints_","constraints","func","JSON","parse","stringify","audio","remap","obj","a","b","video","face","facingMode","getSupportedFacingModeLies","matches","getSupportedConstraints","enumerateDevices","then","dev","devices","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","logging","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","utils","getSourceId","getDisplayMedia","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","sourceId","maxFrameRate","maxWidth","maxHeight","error","MediaStream","webkitMediaStream","wrapPeerConnectionEvent","transceiver","receiver","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","getReceivers","te","event","Event","streams","dispatchEvent","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","standardStats","report","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","map","resolve","RTCRtpReceiver","filterStats","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","origGetLocalStreams","getLocalStreams","nativeStreams","_reverseStreams","_streams","alreadyExists","newStream","signalingState","oldStream","method","nativeMethod","methodObj","args","isLegacyCall","description","desc","replaceInternalStreamId","origSetLocalDescription","setLocalDescription","sdp","externalStream","internalId","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","RTCIceCandidate","target","getConfiguration","sdpSemantics","i","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","iceServers","edgeVersion","hasTurn","server","urls","url","deprecated","isString","validTurn","startsWith","SDPUtils","require","writeMediaSection","caps","dtlsRole","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","_initialTrackId","msid","sendEncodingParameters","ssrc","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","clockRate","numChannels","Math","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","code","NotSupportedError","InvalidAccessError","TypeError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","fireAddTrack","trackEvent","setTimeout","_dispatchEvent","config","_eventTarget","document","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","filterIceServers","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","enabled","_createIceGatherer","sdpMLineIndex","shift","writable","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","default","getCapabilities","codec","isNewTrack","nativeTrack","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","createAnswer","mediaSectionsInOffer","localTrack","reducedSize","addIceCandidate","candidateString","trim","senderOrReceiver","promises","all","allStats","results","ortcObjectName","nativeGetstats","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","fixStatsType","methods","catch","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","replaceTrack","setTrack","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","DataChannel","RTCDataChannel","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","test","rid","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","getParameters","setParameters","origGetParameters","origCreateOffer","finally","origCreateAnswer","_localStreams","_addTrack","index","tracks","_remoteStreams","_onaddstream","_onaddstreampoly","successCallback","failureCallback","options","promise","withCallback","_getUserMedia","shimConstraints","errcb","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","audioTransceiver","getTransceivers","setDirection","videoTransceiver","AudioContext","webkitAudioContext","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","_sctp","sctpInDescription","mLine","parseMLine","isFirefox","maxMessageSize","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","remoteMMS","Number","POSITIVE_INFINITY","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","byteLength","readyState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","nativeSRD","line","nativeAddIceCandidate","shimChrome","shimFirefox","shimEdge","shimSafari","detectBrowser","adapter","commonShim","disableLog","disableWarnings","chromeShim","shimPeerConnection","browserShim","shimAddIceCandidateNullOrEmpty","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimConnectionState","shimMaxMessageSize","shimSendThrowTypeError","removeExtmapAllowMixed","firefoxShim","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","edgeShim","shimGetDisplayMedia","shimReplaceTrack","safariShim","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext","webRTCAdapter","Supports","isIOS","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","isUnifiedPlanSupported","util","username","credential","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","binaryType","pack","unpack","_dataCount","noop","validateId","chunk","ceil","__peerData","n","total","blobToArrayBuffer","FileReader","onload","readAsArrayBuffer","binaryStringToArrayBuffer","Uint8Array","charCodeAt","buffer","randomToken","random","isSecure","location","EventEmitter","Disabled","Errors","Warnings","All","LogLevel","_logLevel","_print","setLogFunction","Open","Stream","Data","Close","IceStateChanged","ConnectionEventType","Media","ConnectionType","Connection","Call","Disconnected","PeerEventType","BrowserIncompatible","InvalidID","InvalidKey","Network","PeerUnavailable","SslUnavailable","ServerError","SocketError","SocketClosed","UnavailableID","WebRTC","PeerErrorType","Binary","BinaryUTF8","SerializationType","Message","SocketEventType","Heartbeat","Candidate","Offer","Answer","IdTaken","Leave","Expire","ServerMessageType","Socket","pingInterval","_disconnected","_messagesQueue","_baseUrl","_id","_socket","WebSocket","onmessage","emit","onclose","_cleanup","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","clearTimeout","Negotiator","connection","startConnection","_startPeerConnection","peerConnection","_stream","_addTracksToConnection","originator","initialize","_makeOffer","handleSDP","provider","_setupListeners","peer","connectionId","socket","payload","dst","getConnection","_addStreamToMediaConnection","cleanup","sdpTransform","metadata","serialization","emitError","_makeAnswer","handleCandidate","BaseConnection","o","_open","MediaConnection","_localStream","ID_PREFIX","_negotiator","l","_remoteStream","handleMessage","_payload","_getMessages","_removeConnection","open","EncodingQueue","fileReader","_queue","_processing","doNextTask","destroy","queue","enque","processing","abort","DataConnection","_buffer","_bufferSize","_buffering","_chunkedData","_encodingQueue","on","_bufferedSend","_dc","_configureDataChannel","_handleDataMessage","constructor","Blob","ArrayBuffer","String","_handleChunk","count","removeAllListeners","_sendChunks","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","API","_options","_buildUrl","secure","host","path","Date","getTime","retrieveId","fetch","status","text","listAllPeers","json","Peer","_lastServerId","_destroyed","_connections","_lostMessages","debug","DEFAULT_KEY","token","hostname","logFunction","logLevel","_api","_createServerConnection","_delayedAbort","_initialize","_abort","create","_handleMessage","disconnect","src","msg","_cleanupPeer","_addConnection","_storeMessage","connect","destroyed","reconnect","peerjs"],"sourceRoot":""}