{"version":3,"file":"static/js/739.81888a58.chunk.js","mappings":"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","sources":["../../node_modules/wgo/src/types.ts","../../node_modules/wgo/src/SGFParser/SGFSyntaxError.ts","../../node_modules/wgo/src/SGFParser/SGFParser.ts","../../node_modules/wgo/src/kifu/propertyValueTypes.ts","../../node_modules/wgo/src/kifu/KifuNode.ts","../../node_modules/wgo/src/Game/rules.ts","../../node_modules/wgo/src/Game/Position.ts","../../node_modules/wgo/src/Game/Game.ts","../../node_modules/wgo/src/BoardBase/BoardObject.ts","../../node_modules/wgo/src/BoardBase/FieldBoardObject.ts","../../node_modules/wgo/src/BoardBase/MarkupBoardObject.ts","../../node_modules/wgo/src/BoardBase/LabelBoardObject.ts","../../node_modules/wgo/src/BoardBase/LineBoardObject.ts","../../node_modules/wgo/src/utils/EventEmitter.ts","../../node_modules/wgo/src/utils/makeConfig.ts","../../node_modules/wgo/src/BoardBase/defaultConfig.ts","../../node_modules/wgo/src/BoardBase/BoardBase.ts","../../node_modules/wgo/src/SVGBoard/types.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Arrow.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGFieldDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGMarkupDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Circle.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Dim.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Dot.ts","../../node_modules/wgo/src/SVGBoard/generateId.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SVGStoneDrawHandler.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/GlassStoneBlack.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/GlassStoneWhite.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Label.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Line.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/ModernStoneBlack.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/ModernStoneWhite.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/RealisticStone.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/SimpleStone.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Square.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/Triangle.ts","../../node_modules/wgo/src/SVGBoard/svgDrawHandlers/XMark.ts","../../node_modules/wgo/src/SVGBoard/createGrid.ts","../../node_modules/wgo/src/SVGBoard/createCoordinates.ts","../../node_modules/wgo/src/SVGBoard/defaultSVGTheme.ts","../../node_modules/wgo/src/SGFParser/sgfTypes.ts","../../node_modules/wgo/src/SVGBoard/SVGBoard.ts","../../node_modules/wgo/src/PlayerBase/basePropertyListeners.ts","../../node_modules/wgo/src/PlayerBase/PlayerBase.ts","../../node_modules/wgo/src/PlayerBase/plugins/EditMode.ts","../../node_modules/wgo/src/PlayerDOM/PlayerDOM.ts","../../node_modules/wgo/src/PlayerDOM/components/Container.ts","../../node_modules/wgo/src/PlayerDOM/components/GameInfoBox.ts","../../node_modules/wgo/src/PlayerDOM/components/ControlPanel.ts","../../node_modules/wgo/src/SVGBoard/SVGCustomFieldBoardObject.ts","../../node_modules/wgo/src/SVGBoard/SVGCustomLabelBoardObject.ts","../../node_modules/wgo/src/PlayerDOM/components/SVGBoardComponent.ts","../../node_modules/wgo/src/PlayerDOM/components/ResponsiveComponent.ts","../../node_modules/wgo/src/PlayerDOM/components/CommentsBox.ts","../../node_modules/wgo/src/PlayerDOM/components/PlayerTag.ts","../../node_modules/wgo/src/SimplePlayer/SimplePlayer.ts"],"sourcesContent":["/**\r\n * Enumeration representing stone color, can be used for representing board position.\r\n */\r\nexport enum Color {\r\n  BLACK = 1,\r\n  B = 1,\r\n  WHITE = -1,\r\n  W = -1,\r\n  EMPTY = 0,\r\n  E = 0,\r\n}\r\n\r\n/**\r\n * Simple 2 dimensional vector for referencing field on the board.\r\n */\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport type Vector = Point[];\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface Field extends Point {\r\n  c: Color;\r\n}\r\n\r\nexport interface Move extends Point {\r\n  c: Color.BLACK | Color.WHITE;\r\n}\r\n","import SGFParser from './SGFParser';\r\n\r\n/**\r\n * Class for syntax errors in SGF string.\r\n * @ extends Error\r\n */\r\nexport class SGFSyntaxError extends Error {\r\n  // tslint:disable-next-line:variable-name\r\n  __proto__: Error;\r\n\r\n  constructor(message: string, parser?: SGFParser) {\r\n    super(message);\r\n    this.__proto__ = new.target.prototype;\r\n\r\n    // var tempError = Error.apply(this);\r\n    this.name = this.name = 'SGFSyntaxError';\r\n    this.message = message || 'There was an unspecified syntax error in the SGF';\r\n\r\n    if (parser) {\r\n      this.message += ` on line ${parser.lineNo}, char ${parser.charNo}:\\n`;\r\n      this.message += `\\t${parser.sgfString.split('\\n')[parser.lineNo - 1]}\\n`;\r\n      this.message += `\\t${Array(parser.charNo + 1).join(' ')}^`;\r\n    }\r\n  }\r\n}\r\n\r\n// a small ES5 hack because currently in ES6 you can't extend Errors\r\n// SGFSyntaxError.prototype = Object.create(Error.prototype);\r\n// SGFSyntaxError.prototype.constructor = SGFSyntaxError;\r\n\r\nexport default SGFSyntaxError;\r\n","import SGFSyntaxError from './SGFSyntaxError';\r\nimport { PropIdent, SGFProperties, SGFCollection, SGFGameTree, SGFNode } from './sgfTypes';\r\n\r\n/**\r\n * Contains methods for parsing sgf string.\r\n * @module SGFParser\r\n */\r\n\r\nconst CODE_A = 'A'.charCodeAt(0);\r\nconst CODE_Z = 'Z'.charCodeAt(0);\r\nconst CODE_WHITE_CHAR = ' '.charCodeAt(0);\r\n\r\nfunction isCharUCLetter(char: string) {\r\n  if (!char) {\r\n    return false;\r\n  }\r\n\r\n  const charCode = char.charCodeAt(0);\r\n  return charCode >= CODE_A && charCode <= CODE_Z;\r\n}\r\n\r\n/**\r\n * Class for parsing of sgf files. Can be used for parsing of SGF fragments as well.\r\n */\r\n\r\nexport default class SGFParser {\r\n  /** SGF string to be parsed */\r\n  sgfString: string;\r\n\r\n  /** Current character position */\r\n  position: number = 0;\r\n\r\n  /** Current line number */\r\n  lineNo: number = 1;\r\n\r\n  /** Current char number (on the line) */\r\n  charNo: number = 0;\r\n\r\n  /**\r\n   * Creates new instance of SGF parser with SGF loaded ready to be parsed.\r\n   * @param sgf string to parse.\r\n   */\r\n  constructor(sgf: string) {\r\n    this.sgfString = sgf;\r\n  }\r\n\r\n  /**\r\n   * Returns current significant character (ignoring whitespace characters).\r\n   * If there is end of string, return undefined.\r\n   */\r\n  protected currentChar(): string {\r\n    while (this.sgfString.charCodeAt(this.position) <= CODE_WHITE_CHAR) {\r\n      // While the character is a whitespace, increase position pointer and line and column numbers.\r\n      this.nextChar();\r\n    }\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Move pointer to next character and return it (including whitespace).\r\n   */\r\n  protected nextChar() {\r\n    if (this.sgfString[this.position] === '\\n') {\r\n      this.charNo = 0;\r\n      this.lineNo++;\r\n    } else {\r\n      this.charNo++;\r\n    }\r\n    this.position++;\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Reads current significant character and if it isn't equal with the argument, throws an error.\r\n   * Then move pointer to next character.\r\n   */\r\n  protected processChar(char: string) {\r\n    if (this.currentChar() !== char) {\r\n      throw new SGFSyntaxError(`Unexpected character ${this.currentChar()}. Character ${char} was expected.`, this);\r\n    }\r\n\r\n    return this.nextChar();\r\n  }\r\n\r\n  /**\r\n   * Parse SGF property value - `\"[\" CValueType \"]\"`.\r\n   * @param optional\r\n   */\r\n  parsePropertyValue(optional?: boolean): string {\r\n    if (optional && this.currentChar() !== '[') {\r\n      return;\r\n    }\r\n\r\n    let value = '';\r\n\r\n    // process \"[\" and read first char\r\n    let char = this.processChar('[');\r\n\r\n    while (char !== ']') {\r\n      if (!char) {\r\n        // char mustn't be undefined\r\n        throw new SGFSyntaxError('End of SGF inside of property', this);\r\n      } else if (char === '\\\\') {\r\n        // if there is character '\\' save next character\r\n        char = this.nextChar();\r\n\r\n        if (!char) {\r\n          // char have to exist of course\r\n          throw new SGFSyntaxError('End of SGF inside of property', this);\r\n        } else if (char === '\\n') {\r\n          // ignore new line, otherwise save\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // save the character\r\n      value += char;\r\n\r\n      // and move to next one\r\n      char = this.nextChar();\r\n    }\r\n\r\n    this.processChar(']');\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Reads the property identifiers (One or more UC letters) - `UcLetter { UcLetter }`.\r\n   */\r\n  parsePropertyIdent(): PropIdent {\r\n    let ident = '';\r\n\r\n    // Read current significant character\r\n    let char = this.currentChar();\r\n\r\n    if (!isCharUCLetter(char)) {\r\n      throw new SGFSyntaxError('Property identifier must consists from upper case letters.', this);\r\n    }\r\n\r\n    ident += char;\r\n\r\n    while (char = this.nextChar()) {\r\n      if (!isCharUCLetter(char)) {\r\n        break;\r\n      }\r\n\r\n      ident += char;\r\n    }\r\n\r\n    return ident as PropIdent;\r\n  }\r\n\r\n  /**\r\n   * Parses sequence of property values - `PropValue { PropValue }`.\r\n   */\r\n  parsePropertyValues() {\r\n    const values: string[] = [];\r\n    let value = this.parsePropertyValue();\r\n\r\n    if (value) {\r\n      values.push(value);\r\n    }\r\n\r\n    while (value = this.parsePropertyValue(true)) {\r\n      values.push(value);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF property - `PropIdent PropValue { PropValue }`.\r\n   */\r\n  parseProperty(): [PropIdent, string[]] {\r\n    if (!isCharUCLetter(this.currentChar())) {\r\n      return;\r\n    }\r\n\r\n    return [this.parsePropertyIdent(), this.parsePropertyValues()];\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF node - `\";\" { Property }`.\r\n   */\r\n  parseNode(): SGFNode {\r\n    this.processChar(';');\r\n\r\n    const properties: SGFProperties = {};\r\n    let property: [PropIdent, string[]];\r\n\r\n    while (property = this.parseProperty()) {\r\n      properties[property[0]] = property[1];\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF Sequence - `Node { Node }`.\r\n   */\r\n  parseSequence(): SGFNode[] {\r\n    const sequence: SGFNode[] = [];\r\n\r\n    sequence.push(this.parseNode());\r\n\r\n    while (this.currentChar() === ';') {\r\n      sequence.push(this.parseNode());\r\n    }\r\n\r\n    return sequence;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *GameTree* - `\"(\" Sequence { GameTree } \")\"`.\r\n   */\r\n  parseGameTree(): SGFGameTree {\r\n    this.processChar('(');\r\n\r\n    const sequence = this.parseSequence();\r\n    let children: SGFGameTree[] = [];\r\n\r\n    if (this.currentChar() === '(') {\r\n      children = this.parseCollection();\r\n    }\r\n\r\n    this.processChar(')');\r\n\r\n    return { sequence, children };\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *Collection* - `Collection = GameTree { GameTree }`. This is the main method for parsing SGF file.\r\n   */\r\n  parseCollection(): SGFCollection {\r\n    const gameTrees: SGFCollection = [];\r\n    gameTrees.push(this.parseGameTree());\r\n\r\n    while (this.currentChar() === '(') {\r\n      gameTrees.push(this.parseGameTree());\r\n    }\r\n\r\n    return gameTrees;\r\n  }\r\n}\r\n","/**\r\n * From SGF specification, there are these types of property values:\r\n *\r\n * CValueType = (ValueType | *Compose*)\r\n * ValueType  = (*None* | *Number* | *Real* | *Double* | *Color* | *SimpleText* | *Text* | *Point*  | *Move* | *Stone*)\r\n *\r\n * WGo's kifu node (KNode object) implements similar types with few exceptions:\r\n *\r\n * - Types `Number`, `Real` and `Double` are implemented by javascript's `number`.\r\n * - Types `SimpleText` and `Text` are considered as the same.\r\n * - Types `Point`, `Move` and `Stone` are all the same, implemented as simple object with `x` and `y` coordinates.\r\n * - Type `None` is implemented as `true`\r\n *\r\n * Each `Compose` type, which is used in SGF, has its own type.\r\n *\r\n * - `Point ':' Point` (used in AR property) has special type `Line` - object with two sets of coordinates.\r\n * - `Point ':' Simpletext` (used in LB property) has special type `Label` - object with coordinates and text property\r\n * - `Simpletext \":\" Simpletext` (used in AP property) - not implemented\r\n * - `Number \":\" SimpleText` (used in FG property) - not implemented\r\n *\r\n * Moreover each property value has these settings:\r\n *\r\n * - *Single value* / *Array* (more values)\r\n * - *Not empty* / *Empty* (value or array can be empty)\r\n *\r\n * {@link http://www.red-bean.com/sgf/sgf4.html}\r\n */\r\n\r\nimport { Color, Point, Label, Vector } from '../types';\r\n\r\ninterface PropertyValueTransformer<T = any> {\r\n  read(str: string): T;\r\n  write(value: T): string;\r\n}\r\n\r\nexport const NONE = {\r\n  read: (str: string) => true,\r\n  write: (value: boolean) => '',\r\n};\r\n\r\nexport const NUMBER = {\r\n  read: (str: string) => parseFloat(str),\r\n  write: (value: number) => value.toString(10),\r\n};\r\n\r\nexport const TEXT = {\r\n  read: (str: string) => str,\r\n  write: (value: string) => value,\r\n};\r\n\r\nexport const COLOR = {\r\n  read: (str: string) => (str === 'w' || str === 'W' ? Color.WHITE : Color.BLACK),\r\n  write: (value: Color) => (value === Color.WHITE ? 'W' : 'B'),\r\n};\r\n\r\nexport const POINT = {\r\n  read: (str: string): Point => str ? {\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n  } : null,\r\n  write: (value?: Point) => value ? String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97) : '',\r\n};\r\n\r\nexport const LABEL = {\r\n  read: (str: string): Label => ({\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n    text: str.substr(3),\r\n  }),\r\n  write: (value: Label) => (\r\n    `${String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97)}:${value.text}`\r\n  ),\r\n};\r\n\r\nexport const VECTOR = {\r\n  read: (str: string): Vector => str ? [\r\n    {\r\n      x: str.charCodeAt(0) - 97,\r\n      y: str.charCodeAt(1) - 97,\r\n    },\r\n    {\r\n      x: str.charCodeAt(3) - 97,\r\n      y: str.charCodeAt(4) - 97,\r\n    },\r\n  ] : null,\r\n  write: (value?: Vector) => (\r\n    // tslint:disable-next-line:max-line-length\r\n    value ? `${String.fromCharCode(value[0].x + 97) + String.fromCharCode(value[0].y + 97)}:${String.fromCharCode(value[1].x + 97) + String.fromCharCode(value[1].y + 97)}` : ''\r\n  ),\r\n};\r\n\r\n/// Property definitions --------------------------------------------------------------------------\r\n\r\ninterface PropertyValueDefinition<T> {\r\n  transformer: PropertyValueTransformer<T>;\r\n  multiple: boolean;\r\n  notEmpty: boolean;\r\n}\r\n\r\nconst propertyValueTypes: {[propIdent: string]: PropertyValueDefinition<any>} = {\r\n  _default: {\r\n    transformer: TEXT,\r\n    multiple: false,\r\n    notEmpty: true,\r\n  },\r\n};\r\n\r\n/// Move properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.B = propertyValueTypes.W = {\r\n  transformer: POINT,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.KO = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.MN = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Setup properties ------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AB = propertyValueTypes.AW = propertyValueTypes.AE = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.PL = {\r\n  transformer: COLOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Node annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.C = propertyValueTypes.N = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.DM = propertyValueTypes.GB = propertyValueTypes.GW = propertyValueTypes.HO = propertyValueTypes.UC = propertyValueTypes.V = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Move annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.BM = propertyValueTypes.TE = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DO = propertyValueTypes.IT = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Markup properties -----------------------------------------------------------------------------\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.CR = propertyValueTypes.MA = propertyValueTypes.SL = propertyValueTypes.SQ = propertyValueTypes.TR = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.LB = {\r\n  transformer: LABEL,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.AR = propertyValueTypes.LN = {\r\n  transformer: VECTOR,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DD = propertyValueTypes.TB = propertyValueTypes.TW = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Root properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AP = propertyValueTypes.CA = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// note: rectangular board is not implemented (in SZ property)\r\npropertyValueTypes.FF = propertyValueTypes.GM = propertyValueTypes.ST = propertyValueTypes.SZ = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Game info properties --------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AN = propertyValueTypes.BR = propertyValueTypes.BT =\r\npropertyValueTypes.CP = propertyValueTypes.DT = propertyValueTypes.EV =\r\npropertyValueTypes.GN = propertyValueTypes.GC = propertyValueTypes.GN =\r\npropertyValueTypes.ON = propertyValueTypes.OT = propertyValueTypes.PB =\r\npropertyValueTypes.PC = propertyValueTypes.PW = propertyValueTypes.RE =\r\npropertyValueTypes.RO = propertyValueTypes.RU = propertyValueTypes.SO =\r\npropertyValueTypes.US = propertyValueTypes.WR = propertyValueTypes.WT = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.TM = propertyValueTypes.HA = propertyValueTypes.KM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Timing properties -----------------------------------------------------------------------------\r\n\r\npropertyValueTypes.BL = propertyValueTypes.WL = propertyValueTypes.OB = propertyValueTypes.OW = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Miscellaneous properties ----------------------------------------------------------------------\r\n\r\npropertyValueTypes.PM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// VW property must be specified as compressed list (ab:cd) and only one value is allowed\r\n// empty value [] will reset the viewport. Other options are not supported.\r\npropertyValueTypes.VW = {\r\n  transformer: VECTOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\nexport default propertyValueTypes;\r\n","import SGFParser, { SGFSyntaxError } from '../SGFParser';\r\nimport propertyValueTypes from './propertyValueTypes';\r\nimport { SGFGameTree, SGFProperties } from '../SGFParser/sgfTypes';\r\n\r\nconst processJSGF = function (gameTree: SGFGameTree, rootNode: KifuNode) {\r\n  rootNode.setSGFProperties(gameTree.sequence[0] || {});\r\n\r\n  let lastNode = rootNode;\r\n\r\n  for (let i = 1; i < gameTree.sequence.length; i++) {\r\n    const node = new KifuNode();\r\n    node.setSGFProperties(gameTree.sequence[i]);\r\n    lastNode.appendChild(node);\r\n    lastNode = node;\r\n  }\r\n\r\n  for (let i = 0; i < gameTree.children.length; i++) {\r\n    lastNode.appendChild(processJSGF(gameTree.children[i], new KifuNode()));\r\n  }\r\n\r\n  return rootNode;\r\n};\r\n\r\n// Characters, which has to be escaped when transforming to SGF\r\nconst escapeCharacters = ['\\\\\\\\', '\\\\]'];\r\n\r\nconst escapeSGFValue = function (value: string) {\r\n  return escapeCharacters.reduce((prev, current) => prev.replace(new RegExp(current, 'g'), current), value);\r\n};\r\n\r\n/**\r\n * Contains path to certain node in game tree.\r\n */\r\nexport interface Path {\r\n  /** Depth of node (for root node it is 0) */\r\n  depth: number;\r\n  /** Array of children array indexes of all predecessors which have siblings. */\r\n  forks: number[];\r\n}\r\n\r\n/**\r\n * Class representing one kifu node.\r\n */\r\nexport default class KifuNode {\r\n  parent: KifuNode | null;\r\n  children: KifuNode[];\r\n  properties: {[key: string]: any};\r\n\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.properties = {};\r\n  }\r\n\r\n  get root() {\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent != null) {\r\n      node = node.parent;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  set innerSGF(sgf: string) {\r\n    // clean up\r\n    this.clean();\r\n\r\n    let transformedSgf = sgf;\r\n\r\n    // create regular SGF from sgf-like string\r\n    if (transformedSgf[0] !== '(') {\r\n      if (transformedSgf[0] !== ';') {\r\n        transformedSgf = `;${transformedSgf}`;\r\n      }\r\n      transformedSgf = `(${transformedSgf})`;\r\n    }\r\n\r\n    KifuNode.fromSGF(transformedSgf, 0, this);\r\n  }\r\n\r\n  /**\r\n   * Kifu node representation as sgf-like string - will contain `;`, all properties and all children.\r\n   */\r\n  get innerSGF(): string {\r\n    let output = ';';\r\n\r\n    for (const propIdent in this.properties) {\r\n      if (this.properties.hasOwnProperty(propIdent)) {\r\n        output += `${propIdent}[${this.getSGFProperty(propIdent).map(escapeSGFValue).join('][')}]`;\r\n      }\r\n    }\r\n\r\n    if (this.children.length === 1) {\r\n      return `${output}${this.children[0].innerSGF}`;\r\n    }\r\n    if (this.children.length > 1) {\r\n      return this.children.reduce((prev, current) => `${prev}(${current.innerSGF})`, output);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent) {\r\n      path.depth++;\r\n      if (node.parent.children.length > 1) {\r\n        path.forks.unshift(node.parent.children.indexOf(node));\r\n      }\r\n      node = node.parent;\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /// GENERAL TREE NODE MANIPULATION METHODS (subset of DOM API's Node)\r\n\r\n  /**\r\n   * Insert a KNode as the last child node of this node.\r\n   *\r\n   * @throws  {Error} when argument is invalid.\r\n   * @param   {KifuNode} node to append.\r\n   * @returns {number} position(index) of appended node.\r\n   */\r\n\r\n  appendChild(node: KifuNode): number {\r\n    if (node == null || !(node instanceof KifuNode) || node === this) {\r\n      throw new Error('Invalid argument passed to `appendChild` method, KNode was expected.');\r\n    }\r\n\r\n    if (node.parent) {\r\n      node.parent.removeChild(node);\r\n    }\r\n\r\n    node.parent = this;\r\n\r\n    return this.children.push(node) - 1;\r\n  }\r\n\r\n  /**\r\n   * Returns a Boolean value indicating whether a node is a descendant of a given node or not.\r\n   *\r\n   * @param   {KifuNode}   node to be tested\r\n   * @returns {boolean} true, if this node contains given node.\r\n   */\r\n\r\n  contains(node: KifuNode): boolean {\r\n    if (this.children.indexOf(node) >= 0) {\r\n      return true;\r\n    }\r\n\r\n    return this.children.some(child => child.contains(node));\r\n  }\r\n\r\n  /**\r\n   * Inserts the first KNode given in a parameter immediately before the second, child of this KNode.\r\n   *\r\n   * @throws  {Error}   when argument is invalid.\r\n   * @param   {KifuNode}   newNode       node to be inserted\r\n   * @param   {(KifuNode)} referenceNode reference node, if omitted, new node will be inserted at the end.\r\n   * @returns {KifuNode}   this node\r\n   */\r\n\r\n  insertBefore(newNode: KifuNode, referenceNode?: KifuNode): KifuNode {\r\n    if (newNode == null || !(newNode instanceof KifuNode) || newNode === this) {\r\n      throw new Error('Invalid argument passed to `insertBefore` method, KNode was expected.');\r\n    }\r\n    if (referenceNode == null) {\r\n      this.appendChild(newNode);\r\n      return this;\r\n    }\r\n\r\n    if (newNode.parent) {\r\n      newNode.parent.removeChild(newNode);\r\n    }\r\n\r\n    newNode.parent = this;\r\n\r\n    this.children.splice(this.children.indexOf(referenceNode), 0, newNode);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a child node from the current element, which must be a child of the current node.\r\n   *\r\n   * @param   {KifuNode} child node to be removed\r\n   * @returns {KifuNode}  this node\r\n   */\r\n\r\n  removeChild(child: KifuNode): KifuNode {\r\n    this.children.splice(this.children.indexOf(child), 1);\r\n\r\n    child.parent = null;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Replaces one child Node of the current one with the second one given in parameter.\r\n   *\r\n   * @throws  {Error} when argument is invalid\r\n   * @param   {KifuNode} newChild node to be inserted\r\n   * @param   {KifuNode} oldChild node to be replaced\r\n   * @returns {KifuNode} this node\r\n   */\r\n\r\n  replaceChild(newChild: KifuNode, oldChild: KifuNode): KifuNode {\r\n    if (newChild == null || !(newChild instanceof KifuNode) || newChild === this) {\r\n      throw new Error('Invalid argument passed to `replaceChild` method, KNode was expected.');\r\n    }\r\n\r\n    this.insertBefore(newChild, oldChild);\r\n    this.removeChild(oldChild);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove all properties and children. Parent will remain.\r\n   */\r\n  clean() {\r\n    for (let i = this.children.length - 1; i >= 0; i--) {\r\n      this.removeChild(this.children[i]);\r\n    }\r\n    this.properties = {};\r\n  }\r\n\r\n  /// BASIC PROPERTY GETTER and SETTER\r\n\r\n  /**\r\n   * Gets property by SGF property identificator. Returns property value (type depends on property type)\r\n   *\r\n   * @param   {string}   propIdent - SGF property idetificator\r\n   * @returns {any}    property value or values or undefined, if property is missing.\r\n   */\r\n\r\n  getProperty(propIdent: string): any {\r\n    return this.properties[propIdent];\r\n  }\r\n\r\n  /**\r\n   * Sets property by SGF property identificator.\r\n   *\r\n   * @param   {string}  propIdent - SGF property idetificator\r\n   * @param   {any}     value - property value or values\r\n   */\r\n\r\n  setProperty(propIdent: string, value?: any) {\r\n    if (value === undefined) {\r\n      delete this.properties[propIdent];\r\n    } else {\r\n      this.properties[propIdent] = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Alias for `setProperty` without second parameter.\r\n   * @param propIdent\r\n   */\r\n  removeProperty(propIdent: string) {\r\n    this.setProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Iterates through all properties.\r\n   */\r\n  forEachProperty(callback: (propIdent: string, value: any) => void) {\r\n    Object.keys(this.properties).forEach((propIdent: string) => callback(propIdent, this.properties[propIdent]));\r\n  }\r\n\r\n  /// SGF RAW METHODS\r\n\r\n  /**\r\n   * Gets one SGF property value as string (with brackets `[` and `]`).\r\n   *\r\n   * @param   {string} propIdent SGF property identificator.\r\n   * @returns {string[]} Array of SGF property values or null if there is not such property.\r\n   */\r\n\r\n  getSGFProperty(propIdent: string): string[] {\r\n    if (this.properties[propIdent] !== undefined) {\r\n      const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n      if (propertyValueType.multiple) {\r\n        return this.properties[propIdent].map(\r\n          (propValue: any) => propertyValueType.transformer.write(propValue),\r\n        );\r\n      }\r\n\r\n      return [propertyValueType.transformer.write(this.properties[propIdent])];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets one SGF property.\r\n   *\r\n   * @param   {string}   propIdent SGF property identificator\r\n   * @param   {string[]} propValues SGF property values\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperty(propIdent: string, propValues?: string[]): KifuNode {\r\n    const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n    if (propValues === undefined) {\r\n      delete this.properties[propIdent];\r\n      return this;\r\n    }\r\n\r\n    if (propertyValueType.multiple) {\r\n      this.properties[propIdent] = propValues.map(val => propertyValueType.transformer.read(val));\r\n    } else {\r\n      this.properties[propIdent] = propertyValueType.transformer.read(propValues[0]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets multiple SGF properties.\r\n   *\r\n   * @param   {Object}   properties - map with signature propIdent -> propValues.\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperties(properties: SGFProperties): KifuNode {\r\n    for (const ident in properties) {\r\n      if (properties.hasOwnProperty(ident)) {\r\n        this.setSGFProperty(ident, properties[ident as keyof SGFProperties]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms KNode object to standard SGF string.\r\n   */\r\n  toSGF() {\r\n    return `(${this.innerSGF})`;\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the node. If node isn't root, its predecessors won't be cloned, and the node becomes root.\r\n   */\r\n  cloneNode(appendToParent?: boolean) {\r\n    const node = new KifuNode();\r\n    const properties = JSON.parse(JSON.stringify(this.properties));\r\n    node.properties = properties;\r\n\r\n    this.children.forEach((child) => {\r\n      node.appendChild(child.cloneNode());\r\n    });\r\n\r\n    if (appendToParent && this.parent) {\r\n      this.parent.appendChild(node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF transformed to JavaScript object.\r\n   *\r\n   * @param gameTree\r\n   */\r\n  static fromJS(gameTree: SGFGameTree, kifuNode = new KifuNode()) {\r\n    return processJSGF(gameTree, kifuNode);\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF string.\r\n   *\r\n   * @param sgf\r\n   * @param gameNo\r\n   */\r\n  static fromSGF(sgf: string, gameNo: number = 0, kifuNode = new KifuNode()) {\r\n    const parser = new SGFParser(sgf);\r\n    return KifuNode.fromJS(parser.parseCollection()[gameNo], kifuNode);\r\n  }\r\n}\r\n","/**\r\n * WGo's game engine offers to set 3 rules:\r\n *\r\n * - *checkRepeat* - one of `repeat.KO`, `repeat.ALL`, `repeat.NONE` - defines if or when a move can be repeated.\r\n * - *allowRewrite* - if set true a move can rewrite existing move (for uncommon applications)\r\n * - *allowSuicide* - if set true a suicide will be allowed (and stone will be immediately captured)\r\n *\r\n * In this module there are some common preset rule sets (Japanese, Chinese etc...).\r\n * Extend object `gameRules` if you wish to add some rule set. Names of the rules should correspond with\r\n * SGF `RU` property.\r\n */\r\n\r\nexport enum Repeating {\r\n  KO = 'KO',\r\n  ALL = 'ALL',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface GoRules {\r\n  repeating: Repeating;\r\n  allowRewrite: boolean;\r\n  allowSuicide: boolean;\r\n  komi: number;\r\n}\r\n\r\nexport const JAPANESE_RULES: GoRules = {\r\n  repeating: Repeating.KO,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 6.5,\r\n};\r\n\r\nexport const CHINESE_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const ING_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: true,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const NO_RULES: GoRules = {\r\n  repeating: Repeating.ALL,\r\n  allowRewrite: true,\r\n  allowSuicide: true,\r\n  komi: 0,\r\n};\r\n\r\nexport default {\r\n  Japanese: JAPANESE_RULES,\r\n  GOE: ING_RULES,\r\n  NZ: ING_RULES,\r\n  AGA: CHINESE_RULES,\r\n  Chinese: CHINESE_RULES,\r\n};\r\n","/**\r\n * Contains implementation of go position class.\r\n * @module Position\r\n */\r\n\r\nimport { Color, Field } from '../types';\r\n\r\n// creates 2-dim array\r\nfunction createGrid<T>(size: number) {\r\n  const grid: T[][] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    grid.push([]);\r\n  }\r\n  return grid;\r\n}\r\n\r\n/**\r\n * Position class represents a state of the go game in one moment in time. It is composed from a grid containing black\r\n * and white stones, capture counts, and actual turn. It is designed to be mutable.\r\n */\r\nexport default class Position {\r\n  /**\r\n\t * Size of the board.\r\n\t * @constant\r\n\t */\r\n\r\n  size: number;\r\n\r\n  /**\r\n   * One dimensional array containing stones of the position.\r\n   */\r\n  grid: Color[] = [];\r\n\r\n  /**\r\n   * Contains numbers of stones that both players captured.\r\n   *\r\n   * @property {number} black - Count of white stones captured by **black**.\r\n   * @property {number} white - Count of black stones captured by **white**.\r\n   */\r\n\r\n  capCount = {\r\n    black: 0,\r\n    white: 0,\r\n  };\r\n\r\n  /**\r\n   * Who plays next move.\r\n   */\r\n\r\n  turn: Color.BLACK | Color.WHITE = Color.BLACK;\r\n\r\n  /**\r\n   * Creates instance of position object.\r\n   *\r\n   * @alias WGo.Position\r\n   * @class\r\n   *\r\n   * @param {number} [size = 19] - Size of the board.\r\n   */\r\n  constructor(size: number = 19) {\r\n    this.size = size;\r\n\r\n    // init grid\r\n    this.clear();\r\n  }\r\n\r\n  isOnPosition(x: number, y: number) {\r\n    return x >= 0 && y >= 0 && x < this.size && y < this.size;\r\n  }\r\n\r\n  /**\r\n   * Returns stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @return {Color} Color\r\n   */\r\n  get(x: number, y: number): Color {\r\n    if (!this.isOnPosition(x, y)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.grid[x * this.size + y];\r\n  }\r\n\r\n  /**\r\n   * Sets stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {Color} c - Color\r\n   */\r\n  set(x: number, y: number, c: Color) {\r\n    if (!this.isOnPosition(x, y)) {\r\n      throw new TypeError('Attempt to set field outside of position.');\r\n    }\r\n\r\n    this.grid[x * this.size + y] = c;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the whole position (every value is set to EMPTY).\r\n   */\r\n  clear() {\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      this.grid[i] = Color.EMPTY;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones the whole position.\r\n   *\r\n   * @return {WGo.Position} Copy of the position.\r\n   * @todo Clone turn as well.\r\n   */\r\n\r\n  clone(): Position {\r\n    const clone = new Position(this.size);\r\n    clone.grid = this.grid.slice(0);\r\n    clone.capCount.black = this.capCount.black;\r\n    clone.capCount.white = this.capCount.white;\r\n    clone.turn = this.turn;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Compares this position with another position and return object with changes\r\n   *\r\n   * @param {WGo.Position} position - Position to compare to.\r\n   * @return {Field[]} Array of different fields\r\n   */\r\n\r\n  compare(position: Position): Field[] {\r\n    if (position.size !== this.size) {\r\n      throw new TypeError('Positions of different sizes cannot be compared.');\r\n    }\r\n\r\n    const diff: Field[] = [];\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      if (this.grid[i] !== position.grid[i]) {\r\n        diff.push({\r\n          x: Math.floor(i / this.size),\r\n          y: i % this.size,\r\n          c: position.grid[i],\r\n        });\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Sets stone on given coordinates and capture adjacent stones without liberties if there are any.\r\n   * If move is invalid, false is returned.\r\n   */\r\n  applyMove(x: number, y: number, c: Color = this.turn, allowSuicide = false, allowRewrite = false) {\r\n    // check if move is on empty field of the board\r\n    if (!(allowRewrite || this.get(x, y) === Color.EMPTY)) {\r\n      return false;\r\n    }\r\n\r\n    // clone position and add a stone\r\n    const prevColor = this.get(x, y);\r\n    this.set(x, y, c);\r\n\r\n    // check capturing of all surrounding stones\r\n    const capturesAbove = this.get(x, y - 1) === -c && this.captureIfNoLiberties(x, y - 1);\r\n    const capturesRight = this.get(x + 1, y) === -c && this.captureIfNoLiberties(x + 1, y);\r\n    const capturesBelow = this.get(x, y + 1) === -c && this.captureIfNoLiberties(x, y + 1);\r\n    const capturesLeft = this.get(x - 1, y) === -c && this.captureIfNoLiberties(x - 1, y);\r\n    const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n    // check suicide\r\n    if (!hasCaptured) {\r\n      if (!this.hasLiberties(x, y)) {\r\n        if (allowSuicide) {\r\n          this.capture(x, y, c);\r\n        } else {\r\n          // revert position\r\n          this.set(x, y, prevColor);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.turn = -c;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n   * that should be captured, they will be removed. Returns a new Position object.\r\n   * This position isn't modified.\r\n   */\r\n\r\n  validatePosition() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        this.captureIfNoLiberties(x - 1, y);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if stone or group on the given coordinates has at least one liberty.\r\n   */\r\n  hasLiberties(x: number, y: number, alreadyTested = createGrid(this.size), c = this.get(x, y)): boolean {\r\n    // out of the board there aren't liberties\r\n    if (!this.isOnPosition(x, y)) {\r\n      return false;\r\n    }\r\n\r\n    // however empty field means liberty\r\n    if (this.get(x, y) === Color.EMPTY) {\r\n      return true;\r\n    }\r\n\r\n    // already tested field or stone of enemy isn't a liberty.\r\n    if (alreadyTested[x][y] || this.get(x, y) === -c) {\r\n      return false;\r\n    }\r\n\r\n    // set this field as tested\r\n    alreadyTested[x][y] = true;\r\n\r\n    // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n    return (\r\n      this.hasLiberties(x, y - 1, alreadyTested, c) ||\r\n      this.hasLiberties(x, y + 1, alreadyTested, c) ||\r\n      this.hasLiberties(x - 1, y, alreadyTested, c) ||\r\n      this.hasLiberties(x + 1, y, alreadyTested, c)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if specified stone/group has zero liberties and if so it captures/removes stones from the position.\r\n   */\r\n  protected captureIfNoLiberties(x: number, y: number) {\r\n    // if it has zero liberties capture it\r\n    if (!this.hasLiberties(x, y)) {\r\n      // capture stones from game\r\n      this.capture(x, y);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n   */\r\n  capture(x: number, y: number, c: Color = this.get(x, y)) {\r\n    if (this.isOnPosition(x, y) && c !== Color.EMPTY && this.get(x, y) === c) {\r\n      this.set(x, y, Color.EMPTY);\r\n\r\n      if (c === Color.BLACK) {\r\n        this.capCount.white = this.capCount.white + 1;\r\n      } else {\r\n        this.capCount.black = this.capCount.black + 1;\r\n      }\r\n\r\n      this.capture(x, y - 1, c);\r\n      this.capture(x, y + 1, c);\r\n      this.capture(x - 1, y, c);\r\n      this.capture(x + 1, y, c);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For debug purposes.\r\n   */\r\n  toString() {\r\n    const TL = '┌';\r\n    const TM = '┬';\r\n    const TR = '┐';\r\n    const ML = '├';\r\n    const MM = '┼';\r\n    const MR = '┤';\r\n    const BL = '└';\r\n    const BM = '┴';\r\n    const BR = '┘';\r\n    const BS = '●';\r\n    const WS = '○';\r\n    const HF = '─'; // horizontal fill\r\n\r\n    let output = '   ';\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      output += i < 9 ? `${i} ` : i;\r\n    }\r\n\r\n    output += '\\n';\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        const color = this.grid[x * this.size + y];\r\n\r\n        if (x === 0) {\r\n          output += `${(y < 10 ? ` ${y}` : y)} `;\r\n        }\r\n\r\n        if (color !== Color.EMPTY) {\r\n          output += color === Color.BLACK ? BS : WS;\r\n        } else {\r\n          let char;\r\n\r\n          if (y === 0) {\r\n            // top line\r\n            if (x === 0) {\r\n              char = TL;\r\n            } else if (x < this.size - 1) {\r\n              char = TM;\r\n            } else {\r\n              char = TR;\r\n            }\r\n          } else if (y < this.size - 1) {\r\n            // middle line\r\n            if (x === 0) {\r\n              char = ML;\r\n            } else if (x < this.size - 1) {\r\n              char = MM;\r\n            } else {\r\n              char = MR;\r\n            }\r\n          } else {\r\n            // bottom line\r\n            if (x === 0) {\r\n              char = BL;\r\n            } else if (x < this.size - 1) {\r\n              char = BM;\r\n            } else {\r\n              char = BR;\r\n            }\r\n          }\r\n\r\n          output += char;\r\n        }\r\n\r\n        if (x === this.size - 1) {\r\n          if (y !== this.size - 1) {\r\n            output += '\\n';\r\n          }\r\n        } else {\r\n          output += HF;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns position grid as two dimensional array.\r\n   */\r\n  toTwoDimensionalArray() {\r\n    const arr: Color[][] = [];\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      arr[x] = [];\r\n      for (let y = 0; y < this.size; y++) {\r\n        arr[x][y] = this.grid[x * this.size + y];\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n\r\n// import { Color, Field, Move } from '../types';\r\n\r\n// /**\r\n//  * Position of the board (grid) is represented as 2 dimensional array of colors.\r\n//  */\r\n// export type Position = Color[][];\r\n\r\n// /**\r\n//  * Creates empty position (filled with Color.EMPTY) of specified size.\r\n//  * @param size\r\n//  */\r\n// export function createPosition(size: number) {\r\n//   const position: Color[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     const row: Color[] = [];\r\n//     for (let j = 0; j < size; j++) {\r\n//       row.push(Color.EMPTY);\r\n//     }\r\n//     position.push(row);\r\n//   }\r\n//   return position;\r\n// }\r\n\r\n// /**\r\n//  * Deep clones a position.\r\n//  * @param position\r\n//  */\r\n// export function clonePosition(position: Position) {\r\n//   return position.map(row => row.slice(0));\r\n// }\r\n\r\n// /**\r\n//  * Compares position `pos1` with position `pos2` and returns all differences on `pos2`.\r\n//  * @param pos1\r\n//  * @param pos2\r\n//  */\r\n// export function comparePositions(pos1: Position, pos2: Position): Field[] {\r\n//   if (pos1.length !== pos2.length) {\r\n//     throw new TypeError('Positions of different sizes cannot be compared.');\r\n//   }\r\n\r\n//   const diff: Field[] = [];\r\n\r\n//   for (let x = 0; x < pos1.length; x++) {\r\n//     for (let y = 0; y < pos2.length; y++) {\r\n//       if (pos1[x][y] !== pos2[x][y]) {\r\n//         diff.push({ x, y, c: pos2[x][y] });\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return diff;\r\n// }\r\n\r\n// function isOnBoard(position: Position, x: number, y: number) {\r\n//   return x >= 0 && x < position.length && y >= 0 && y < position.length;\r\n// }\r\n\r\n// /**\r\n//  * Creates new position with specified move (with rules applied - position won't contain captured stones).\r\n//  * If move is invalid, null is returned.\r\n//  */\r\n// export function applyMove(position: Position, x: number, y: number, c: Color.B | Color.W, allowSuicide = false) {\r\n//   // check if move is on empty field of the board\r\n//   if (!isOnBoard(position, x, y) || position[x][y] !== Color.EMPTY) {\r\n//     return null;\r\n//   }\r\n\r\n//   // clone position and add a stone\r\n//   const newPosition = clonePosition(position);\r\n//   newPosition[x][y] = c;\r\n\r\n//   // check capturing of all surrounding stones\r\n//   const capturesAbove = captureIfNoLiberties(newPosition, x, y - 1, -c);\r\n//   const capturesRight = captureIfNoLiberties(newPosition, x + 1, y, -c);\r\n//   const capturesBelow = captureIfNoLiberties(newPosition, x, y + 1, -c);\r\n//   const capturesLeft = captureIfNoLiberties(newPosition, x - 1, y, -c);\r\n//   const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n//   // check suicide\r\n//   if (!hasCaptured) {\r\n//     if (!hasLiberties(newPosition, x, y)) {\r\n//       if (allowSuicide) {\r\n//         capture(newPosition, x, y, c);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n//  * that should be captured, they will be removed. Returns a new Position object.\r\n//  */\r\n\r\n// export function getValidatedPosition(position: Position) {\r\n//   const newPosition = clonePosition(position);\r\n\r\n//   for (let x = 0; x < position.length; x++) {\r\n//     for (let y = 0; y < position.length; y++) {\r\n//       captureIfNoLiberties(newPosition, x, y);\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Capture stone or group of stones if they are zero liberties. Mutates the given position.\r\n//  *\r\n//  * @param position\r\n//  * @param x\r\n//  * @param y\r\n//  * @param c\r\n//  */\r\n// function captureIfNoLiberties(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   let hasCaptured = false;\r\n\r\n//   // is there a stone possible to capture?\r\n//   if (isOnBoard(position, x, y) && c !== Color.EMPTY && position[x][y] === c) {\r\n//     // if it has zero liberties capture it\r\n//     if (!hasLiberties(position, x, y)) {\r\n//       // capture stones from game\r\n//       capture(position, x, y, c);\r\n//       hasCaptured = true;\r\n//     }\r\n//   }\r\n\r\n//   return hasCaptured;\r\n// }\r\n\r\n// function createTestGrid(size: number) {\r\n//   const grid: boolean[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     grid.push([]);\r\n//   }\r\n//   return grid;\r\n// }\r\n\r\n// /**\r\n//  * Returns true if stone or group on the given position has at least one liberty.\r\n//  */\r\n// function hasLiberties(\r\n//   position: Position,\r\n//   x: number,\r\n//   y: number,\r\n//   alreadyTested = createTestGrid(position.length),\r\n//   c = position[x][y],\r\n// ): boolean {\r\n//   // out of the board there aren't liberties\r\n//   if (!isOnBoard(position, x, y)) {\r\n//     return false;\r\n//   }\r\n\r\n//   // however empty field means liberty\r\n//   if (position[x][y] === Color.EMPTY) {\r\n//     return true;\r\n//   }\r\n\r\n//   // already tested field or stone of enemy isn't a liberty.\r\n//   if (alreadyTested[x][y] || position[x][y] === -c) {\r\n//     return false;\r\n//   }\r\n\r\n//   // set this field as tested\r\n//   alreadyTested[x][y] = true;\r\n\r\n//   // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n//   return (\r\n//     hasLiberties(position, x, y - 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x, y + 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x - 1, y, alreadyTested, c) ||\r\n//     hasLiberties(position, x + 1, y, alreadyTested, c)\r\n//   );\r\n// }\r\n\r\n// /**\r\n//  * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n//  * Mutates the given position.\r\n//  */\r\n// function capture(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   if (isOnBoard(position, x, y) && position[x][y] !== Color.EMPTY && position[x][y] === c) {\r\n//     position[x][y] = Color.EMPTY;\r\n\r\n//     capture(position, x, y - 1, c);\r\n//     capture(position, x, y + 1, c);\r\n//     capture(position, x - 1, y, c);\r\n//     capture(position, x + 1, y, c);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * For debug purposes.\r\n//  */\r\n// export function stringifyPosition(position: Position) {\r\n//   const TL = '┌';\r\n//   const TM = '┬';\r\n//   const TR = '┐';\r\n//   const ML = '├';\r\n//   const MM = '┼';\r\n//   const MR = '┤';\r\n//   const BL = '└';\r\n//   const BM = '┴';\r\n//   const BR = '┘';\r\n//   const BS = '●';\r\n//   const WS = '○';\r\n//   const HF = '─'; // horizontal fill\r\n\r\n//   let output = '   ';\r\n\r\n//   for (let i = 0; i < position.length; i++) {\r\n//     output += i < 9 ? `${i} ` : i;\r\n//   }\r\n\r\n//   output += '\\n';\r\n\r\n//   for (let y = 0; y < position.length; y++) {\r\n//     for (let x = 0; x < position.length; x++) {\r\n//       const color = position[x][y];\r\n\r\n//       if (x === 0) {\r\n//         output += `${(y < 10 ? ` ${y}` : y)} `;\r\n//       }\r\n\r\n//       if (color !== Color.EMPTY) {\r\n//         output += color === Color.BLACK ? BS : WS;\r\n//       } else {\r\n//         let char;\r\n\r\n//         if (y === 0) {\r\n//           // top line\r\n//           if (x === 0) {\r\n//             char = TL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = TM;\r\n//           } else {\r\n//             char = TR;\r\n//           }\r\n//         } else if (y < position.length - 1) {\r\n//           // middle line\r\n//           if (x === 0) {\r\n//             char = ML;\r\n//           } else if (x < position.length - 1) {\r\n//             char = MM;\r\n//           } else {\r\n//             char = MR;\r\n//           }\r\n//         } else {\r\n//           // bottom line\r\n//           if (x === 0) {\r\n//             char = BL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = BM;\r\n//           } else {\r\n//             char = BR;\r\n//           }\r\n//         }\r\n\r\n//         output += char;\r\n//       }\r\n\r\n//       if (x === position.length - 1) {\r\n//         if (y !== position.length - 1) {\r\n//           output += '\\n';\r\n//         }\r\n//       } else {\r\n//         output += HF;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return output;\r\n// }\r\n","import { GoRules, JAPANESE_RULES, Repeating } from './rules';\r\nimport Position from './Position';\r\nimport { Color } from '../types';\r\n\r\nexport default class Game {\r\n  size: number;\r\n  rules: GoRules;\r\n  komi: number;\r\n  positionStack: Position[];\r\n\r\n  /**\r\n   * Creates instance of game class.\r\n   *\r\n   * @class\r\n   * This class implements game logic. It basically analyses given moves and returns capture stones.\r\n   * WGo.Game also stores every position from beginning, so it has ability to check repeating positions\r\n   * and it can effectively restore old positions.\r\n   *\r\n   *\r\n   * @param {number} [size = 19] Size of the board\r\n   * @param {string} [checkRepeat = KO] How to handle repeated position:\r\n   *\r\n   * * KO - ko is properly handled - position cannot be same like previous position\r\n   * * ALL - position cannot be same like any previous position - e.g. it forbids triple ko\r\n   * * NONE - position can be repeated\r\n   *\r\n   * @param {boolean} [allowRewrite = false] Allow to play moves, which were already played\r\n   * @param {boolean} [allowSuicide = false] Allow to play suicides, stones are immediately captured\r\n   */\r\n\r\n  constructor(size: number = 19, rules: GoRules = JAPANESE_RULES) {\r\n    this.size = size;\r\n    this.rules = rules;\r\n    this.komi = rules.komi;\r\n    this.positionStack = [new Position(size)];\r\n  }\r\n\r\n  get position() {\r\n    return this.positionStack[this.positionStack.length - 1];\r\n  }\r\n\r\n  set position(pos) {\r\n    this.positionStack[this.positionStack.length - 1] = pos;\r\n  }\r\n\r\n  get turn() {\r\n    return this.position.turn;\r\n  }\r\n\r\n  set turn(color: Color.WHITE | Color.BLACK) {\r\n    this.position.turn = color;\r\n  }\r\n\r\n  get capCount() {\r\n    return this.position.capCount;\r\n  }\r\n\r\n  /**\r\n   * Play move. You can specify color.\r\n   */\r\n  play(x: number, y: number) {\r\n    const nextPosition = this.tryToPlay(x, y);\r\n\r\n    if (nextPosition) {\r\n      this.pushPosition(nextPosition);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Tries to play on given coordinates, returns new position after the play, or error code.\r\n   */\r\n  protected tryToPlay(x: number, y: number) {\r\n    const nextPosition = this.position.clone();\r\n    const success = nextPosition.applyMove(x, y, nextPosition.turn, this.rules.allowSuicide, this.rules.allowRewrite);\r\n\r\n    if (success && !this.hasPositionRepeated(nextPosition)) {\r\n      return nextPosition;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Position} position to check\r\n   * @return {boolean} Returns true if the position didn't occurred in the past (according to the rule set)\r\n   */\r\n  hasPositionRepeated(position: Position): boolean {\r\n    let depth: number;\r\n\r\n    if (this.rules.repeating === Repeating.KO && this.positionStack.length - 2 >= 0) {\r\n      depth = this.positionStack.length - 2;\r\n    } else if (this.rules.repeating === Repeating.NONE) {\r\n      depth = 0;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    for (let i = this.positionStack.length - 1; i >= depth; i--) {\r\n      if (this.positionStack[i].compare(position).length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Play pass.\r\n   *\r\n   * @param {(BLACK|WHITE)} c color\r\n   */\r\n\r\n  pass(c: Color.BLACK | Color.WHITE = this.turn) {\r\n    const nextPosition = this.position.clone();\r\n    nextPosition.turn = -(c || this.turn);\r\n    this.pushPosition(nextPosition);\r\n  }\r\n\r\n  /**\r\n   * Finds out validity of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move can be played.\r\n   */\r\n\r\n  isValid(x: number, y: number): boolean {\r\n    return !!this.tryToPlay(x, y);\r\n  }\r\n\r\n  /**\r\n   * Controls position of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move is on board.\r\n   */\r\n\r\n  isOnBoard(x: number, y: number): boolean {\r\n    return this.position.isOnPosition(x, y);\r\n  }\r\n\r\n  /**\r\n   * Inserts move into current position. Use for setting position, for example in handicap game. Field must be empty.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {Color} c color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  addStone(x: number, y: number, c: Color.BLACK | Color.WHITE): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) === Color.EMPTY) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes move from current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  removeStone(x: number, y: number): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) !== Color.EMPTY) {\r\n      this.position.set(x, y, Color.EMPTY);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set or insert move of current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {(BLACK|WHITE)} [c] color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  setStone(x: number, y: number, c: Color): boolean {\r\n    if (this.isOnBoard(x, y)) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get stone on given position.s\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {(Color|null)} color\r\n   */\r\n\r\n  getStone(x: any, y: any): (Color | null) {\r\n    return this.position.get(x, y);\r\n  }\r\n\r\n  /**\r\n   * Add position to stack. If position isn't specified current position is cloned and stacked.\r\n   * Pointer of actual position is moved to the new position.\r\n   *\r\n   * @param {WGo.Position} tmp position (optional)\r\n   */\r\n\r\n  pushPosition(pos: Position) {\r\n    return this.positionStack.push(pos);\r\n  }\r\n\r\n  /**\r\n   * Remove current position from stack. Pointer of actual position is moved to the previous position.\r\n   */\r\n\r\n  popPosition() {\r\n    if (this.positionStack.length > 1) {\r\n      return this.positionStack.pop();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes all positions except the initial.\r\n   */\r\n\r\n  clear() {\r\n    this.positionStack = [this.positionStack[0]];\r\n  }\r\n}\r\n","/**\r\n * Represents generic board object specified by type, which can be painted on the board.\r\n * It contains z-index and opacity.\r\n */\r\nexport default class BoardObject {\r\n  type: string;\r\n  zIndex: number = 0;\r\n  opacity: number = 1;\r\n\r\n  constructor(type: string) {\r\n    this.type = type;\r\n  }\r\n}\r\n","import BoardObject from './BoardObject';\r\n\r\n/**\r\n * Represents board object specified by type, which can be painted on the specific field of the board.\r\n * It can be also transformed.\r\n */\r\nexport default class FieldBoardObject extends BoardObject {\r\n  x: number;\r\n  y: number;\r\n  scaleX: number = 1;\r\n  scaleY: number = 1;\r\n  rotate: number = 0;\r\n\r\n  constructor(type: string, x = 0, y = 0) {\r\n    super(type);\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setPosition(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setScale(factor: number) {\r\n    this.scaleX = factor;\r\n    this.scaleY = factor;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport FieldBoardObject from './FieldBoardObject';\r\n\r\n/**\r\n * Board markup object is special type of field object, which can have 3 variations - for empty field\r\n * and for black and white stone.\r\n */\r\nexport default class MarkupBoardObject extends FieldBoardObject {\r\n  variation: Color;\r\n\r\n  constructor(type: string, x = 0, y = 0, variation: Color = Color.E) {\r\n    super(type, x, y);\r\n    this.variation = variation;\r\n  }\r\n}\r\n","import { Color } from '../types';\r\nimport MarkupBoardObject from './MarkupBoardObject';\r\n\r\n/**\r\n * Board label object is special type of markup object, which renders text on the field.\r\n */\r\nexport default class LabelBoardObject extends MarkupBoardObject {\r\n  text: string;\r\n\r\n  constructor(text: string, x = 0, y = 0, variation?: Color) {\r\n    super('LB', x, y, variation);\r\n\r\n    this.text = text;\r\n  }\r\n}\r\n","import { Point } from '../types';\r\nimport BoardObject from './BoardObject';\r\n\r\n/**\r\n * Board line object is special type of object, which consist from start and end point.\r\n */\r\nexport default class LineBoardObject extends BoardObject {\r\n  start: Point;\r\n  end: Point;\r\n\r\n  constructor(type: string, start: Point, end: Point) {\r\n    super(type);\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n}\r\n","/**\r\n * Simple base class for event handling. It tries to follow Node.js EventEmitter class API,\r\n * but contains only basic methods.\r\n */\r\nexport default class EventEmitter {\r\n  // tslint:disable-next-line:variable-name\r\n  private _events: {[eventName: string]: Function[]} = {};\r\n\r\n  on(evName: string, callback: Function) {\r\n    this._events[evName] = this._events[evName] || [];\r\n    this._events[evName].push(callback);\r\n  }\r\n\r\n  off(evName: string, callback: Function) {\r\n    if (this._events[evName]) {\r\n      if (callback == null) {\r\n        this._events[evName] = [];\r\n      }\r\n      this._events[evName] = this._events[evName].filter(fn => fn !== callback);\r\n    }\r\n  }\r\n\r\n  emit(evName: string, ...args: any[]) {\r\n    if (this._events[evName]) {\r\n      this._events[evName].forEach(fn => fn(...args));\r\n    }\r\n  }\r\n}\r\n","export type PartialRecursive<T> = {\r\n  [P in keyof T]?: T[P] | PartialRecursive<T[P]>;\r\n};\r\n\r\n/**\r\n * Helper function for merging default config with provided config.\r\n *\r\n * @param defaults\r\n * @param config\r\n */\r\nexport default function makeConfig<T>(defaults: T, config: PartialRecursive<T> & { [key: string]: any }): T {\r\n  const mergedConfig: any = {};\r\n  const defaultKeys = Object.keys(defaults);\r\n  defaultKeys.forEach((key) => {\r\n    const val = (config as any)[key];\r\n    const defVal = (defaults as any)[key];\r\n\r\n    if (val != null && val.constructor === Object && !Array.isArray(val) && defVal != null) {\r\n      mergedConfig[key] = makeConfig(defVal, val);\r\n    } else if (val !== undefined) {\r\n      mergedConfig[key] = val;\r\n    } else {\r\n      mergedConfig[key] = defVal;\r\n    }\r\n  });\r\n\r\n  Object.keys(config).forEach((key) => {\r\n    if (defaultKeys.indexOf(key) === -1) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    }\r\n  });\r\n\r\n  return mergedConfig;\r\n}\r\n","export const defaultBoardBaseTheme = {\r\n  // basic\r\n  stoneSize: 0.47,\r\n  marginSize: 0.25,\r\n  font: 'calibri',\r\n  backgroundColor: '#CEB053',\r\n  backgroundImage: '',\r\n\r\n  // markup\r\n  markupBlackColor: 'rgba(255,255,255,0.9)',\r\n  markupWhiteColor: 'rgba(0,0,0,0.7)',\r\n  markupNoneColor: 'rgba(0,0,0,0.7)',\r\n  markupLineWidth: 0.05,\r\n\r\n  // shadows\r\n  shadowColor: 'rgba(62,32,32,0.5)',\r\n  shadowTransparentColor: 'rgba(62,32,32,0)',\r\n  shadowBlur: 0.25,\r\n  shadowOffsetX: 0.07,\r\n  shadowOffsetY: 0.13,\r\n\r\n  // grid\r\n  grid: {\r\n    linesWidth: 0.03,\r\n    linesColor: '#654525',\r\n    starColor: '#531',\r\n    starSize: 0.07,\r\n  },\r\n\r\n  // coordinates\r\n  coordinates: {\r\n    color: '#531',\r\n    bold: false,\r\n    labelsX: 'ABCDEFGHJKLMNOPQRSTUVWXYZ',\r\n    labelsY: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n  },\r\n\r\n  starPoints: {\r\n    5: [{ x: 2, y: 2 }],\r\n    7: [{ x: 3, y: 3 }],\r\n    8: [{ x: 2, y: 2 }, { x: 5, y: 2 }, { x: 2, y: 5 }, { x: 5, y: 5 }],\r\n    9: [{ x: 2, y: 2 }, { x: 6, y: 2 }, { x: 4, y: 4 }, { x: 2, y: 6 }, { x: 6, y: 6 }],\r\n    10: [{ x: 2, y: 2 }, { x: 7, y: 2 }, { x: 2, y: 7 }, { x: 7, y: 7 }],\r\n    11: [{ x: 2, y: 2 }, { x: 8, y: 2 }, { x: 5, y: 5 }, { x: 2, y: 8 }, { x: 8, y: 8 }],\r\n    12: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 }],\r\n    13: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 6, y: 6 }, { x: 3, y: 9 }, { x: 9, y: 9 }],\r\n    14: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 }],\r\n    15: [{ x: 3, y: 3 }, { x: 11, y: 3 }, { x: 7, y: 7 }, { x: 3, y: 11 }, { x: 11, y: 11 }],\r\n    16: [{ x: 3, y: 3 }, { x: 12, y: 3 }, { x: 3, y: 12 }, { x: 12, y: 12 }],\r\n    17: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 13, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 },\r\n    { x: 13, y: 8 }, { x: 3, y: 13 }, { x: 8, y: 13 }, { x: 13, y: 13 }],\r\n    18: [{ x: 3, y: 3 }, { x: 14, y: 3 }, { x: 3, y: 14 }, { x: 14, y: 14 }],\r\n    19: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 15, y: 3 }, { x: 3, y: 9 }, { x: 9, y: 9 },\r\n    { x: 15, y: 9 }, { x: 3, y: 15 }, { x: 9, y: 15 }, { x: 15, y: 15 }],\r\n    20: [{ x: 3, y: 3 }, { x: 16, y: 3 }, { x: 3, y: 16 }, { x: 16, y: 16 }],\r\n    21: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 17, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 },\r\n    { x: 17, y: 10 }, { x: 3, y: 17 }, { x: 10, y: 17 }, { x: 17, y: 17 }],\r\n  },\r\n};\r\n\r\nexport const defaultBoardBaseConfig = {\r\n  size: 19,\r\n  width: 0,\r\n  height: 0,\r\n  viewport: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  coordinates: false,\r\n  theme: defaultBoardBaseTheme,\r\n};\r\n","import EventEmitter from '../utils/EventEmitter';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Board, BoardBaseConfig, BoardViewport } from './types';\r\nimport { BoardObject } from '.';\r\nimport FieldBoardObject from './FieldBoardObject';\r\nimport { defaultBoardBaseConfig } from './defaultConfig';\r\n\r\n/**\r\n * Board class with basic functionality which can be used for creating custom boards.\r\n */\r\nexport default class BoardBase extends EventEmitter implements Board {\r\n  config: BoardBaseConfig;\r\n  element: HTMLElement;\r\n  objects: BoardObject[] = [];\r\n\r\n  constructor(element: HTMLElement, config: PartialRecursive<BoardBaseConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.element = element;\r\n    this.config = makeConfig(defaultBoardBaseConfig, config);\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    // subclass may do resize things here\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    // subclass should implement this\r\n  }\r\n\r\n  /**\r\n   * Add board object. Main function for adding graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.addObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!this.hasObject(boardObject)) {\r\n      this.objects.push(boardObject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to update board object. Can be called, when some params of boardObject changes.\r\n   * It is similar to redraw(), but only boardObject can be redrawn, so performance can/should be better.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  updateObject(boardObject: BoardObject | BoardObject[]) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Remove board object. Main function for removing graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.removeObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const objectPos = this.objects.indexOf(boardObject);\r\n\r\n    if (objectPos === -1) {\r\n      // object isn't on the board, ignore it\r\n      return;\r\n    }\r\n\r\n    this.objects.splice(objectPos, 1);\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on specified field.\r\n   *\r\n   * @param x\r\n   * @param y\r\n   */\r\n  removeObjectsAt(x: number, y: number) {\r\n    this.objects.forEach((obj) => {\r\n      if (obj instanceof FieldBoardObject && obj.x === x && obj.y === y) {\r\n        this.removeObject(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes all objects on the board.\r\n   */\r\n  removeAllObjects() {\r\n    this.objects = [];\r\n  }\r\n\r\n  /**\r\n   * Returns true if object is already on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  hasObject(boardObject: BoardObject) {\r\n    return this.objects.indexOf(boardObject) >= 0;\r\n  }\r\n\r\n  /**\r\n   * Sets width of the board, height will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   */\r\n  setWidth(width: number) {\r\n    this.config.width = width;\r\n    this.config.height = 0;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets height of the board, width will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param height\r\n   */\r\n  setHeight(height: number) {\r\n    this.config.width = 0;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets exact dimensions of the board. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   * @param height\r\n   */\r\n  setDimensions(width: number, height: number) {\r\n    this.config.width = width;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n\t * Get currently visible section of the board.\r\n\t */\r\n\r\n  getViewport() {\r\n    return this.config.viewport;\r\n  }\r\n\r\n  /**\r\n\t * Set section of the board to be displayed.\r\n\t */\r\n  setViewport(viewport: BoardViewport) {\r\n    this.config.viewport = viewport;\r\n  }\r\n\r\n  /**\r\n   * Helper to get board size.\r\n   */\r\n  getSize() {\r\n    return this.config.size;\r\n  }\r\n\r\n  /**\r\n   * Helper to set board size.\r\n   */\r\n  setSize(size: number = 19) {\r\n    this.config.size = size;\r\n  }\r\n\r\n  /**\r\n   * Returns true, if coordinates around board are visible.\r\n   */\r\n  getCoordinates() {\r\n    return this.config.coordinates;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable coordinates around board.\r\n   */\r\n  setCoordinates(coordinates: boolean) {\r\n    this.config.coordinates = coordinates;\r\n  }\r\n}\r\n","import { BoardBaseConfig, BoardBaseTheme } from '../BoardBase/types';\r\nimport { BoardObject } from '../BoardBase';\r\n\r\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\r\nexport const SVG_OBJECTS = 'objects';\r\nexport const SVG_GRID_MASK = 'gridMask';\r\nexport const SVG_SHADOWS = 'shadows';\r\n\r\nexport interface BoardObjectSVGElements {\r\n  [key: string]: SVGElement;\r\n}\r\n\r\nexport interface SVGDrawHandler {\r\n  /** Should return SVG element representing the board object, can be <g> for multiple elements. */\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  /** This will be called any time, board object changes. */\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: BoardObject, config: SVGBoardConfig): void;\r\n}\r\n\r\nexport interface SVGBoardTheme extends BoardBaseTheme {\r\n  markupGridMask: number;\r\n\r\n  coordinates: BoardBaseTheme['coordinates'] & {\r\n    fontSize: number,\r\n    top: boolean,\r\n    right: boolean,\r\n    bottom: boolean,\r\n    left: boolean,\r\n  };\r\n\r\n  drawHandlers: {\r\n    [key: string]: SVGDrawHandler;\r\n  };\r\n}\r\n\r\nexport interface SVGBoardConfig extends BoardBaseConfig {\r\n  theme: SVGBoardTheme;\r\n}\r\n\r\nexport interface SVGCustomObject extends BoardObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n\r\nexport type SVGBoardObject = BoardObject | SVGCustomObject;\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport { LineBoardObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Arrow implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    return {\r\n      [SVG_OBJECTS]: this.createSVGElements(),\r\n      [SVG_GRID_MASK]: this.createSVGElements(),\r\n    };\r\n  }\r\n\r\n  protected createSVGElements() {\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    const startCircle = document.createElementNS(SVG_NS, 'circle');\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const endTriangle = document.createElementNS(SVG_NS, 'polygon');\r\n\r\n    group.appendChild(startCircle);\r\n    group.appendChild(line);\r\n    group.appendChild(endTriangle);\r\n    return group;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LineBoardObject, config: SVGBoardConfig) {\r\n    // basic UI definitions\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('fill', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    this.updateSVGElements(elem[SVG_OBJECTS], boardObject);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute(\r\n      'stroke-width',\r\n      (this.params.lineWidth || config.theme.markupLineWidth) * 3 as any,\r\n    );\r\n    this.updateSVGElements(elem[SVG_GRID_MASK], boardObject);\r\n  }\r\n\r\n  protected updateSVGElements(elem: SVGElement, boardObject: LineBoardObject) {\r\n    // SVG elements of arrow\r\n    const startCircle = elem.children[0];\r\n    const line = elem.children[1];\r\n    const endTriangle = elem.children[2];\r\n\r\n    const x1 = boardObject.start.x;\r\n    const y1 = boardObject.start.y;\r\n    const x2 = boardObject.end.x;\r\n    const y2 = boardObject.end.y;\r\n\r\n    // length of the main line\r\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\r\n    // line parametric functions\r\n    const getLineX = (t: number) => x1 + t * (x2 - x1);\r\n    const getLineY = (t: number) => y1 + t * (y2 - y1);\r\n\r\n    // triangle base line position on the main line\r\n    const triangleLen = 1 / length / 2.5;\r\n    const tx = getLineX(1 - triangleLen);\r\n    const ty = getLineY(1 - triangleLen);\r\n\r\n    // triangle base line parametric functions\r\n    const getBaseLineX = (t: number) => tx + t * (y2 - y1);\r\n    const getBaseLineY = (t: number) => ty + t * (x1 - x2);\r\n\r\n    // initial circle length\r\n    const circleLen = 0.1;\r\n\r\n    // draw initial circle\r\n    startCircle.setAttribute('cx', x1 as any);\r\n    startCircle.setAttribute('cy', y1 as any);\r\n    startCircle.setAttribute('r', circleLen as any);\r\n\r\n    // draw line\r\n    line.setAttribute('x1', getLineX(1 / length * circleLen) as any);\r\n    line.setAttribute('y1', getLineY(1 / length * circleLen) as any);\r\n    line.setAttribute('x2', tx as any);\r\n    line.setAttribute('y2', ty as any);\r\n\r\n    // draw triangle at the end to make arrow\r\n    endTriangle.setAttribute('points', `\r\n      ${getBaseLineX(- triangleLen / 1.75)},${getBaseLineY(- triangleLen / 1.75)}\r\n      ${getBaseLineX(triangleLen / 1.75)},${getBaseLineY(triangleLen / 1.75)}\r\n      ${x2},${y2}\r\n    `);\r\n  }\r\n}\r\n","\r\nimport { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { FieldBoardObject } from '../../BoardBase';\r\n\r\nexport default abstract class SVGFieldDrawHandler implements SVGDrawHandler {\r\n  // tslint:disable-next-line:max-line-length\r\n  abstract createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements;\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: FieldBoardObject, config: SVGBoardConfig) {\r\n    const transform = `translate(${boardObject.x}, ${boardObject.y})`;\r\n    const scale = `scale(${boardObject.scaleX}, ${boardObject.scaleY})`;\r\n    const rotate = `rotate(${boardObject.rotate})`;\r\n\r\n    Object.keys(elem).forEach((ctx) => {\r\n      elem[ctx].setAttribute('transform', `${transform} ${scale} ${rotate}`);\r\n      elem[ctx].setAttribute('opacity', boardObject.opacity as any);\r\n    });\r\n  }\r\n}\r\n","import { SVGDrawHandler, SVGBoardConfig, BoardObjectSVGElements, SVG_OBJECTS } from '../types';\r\nimport { MarkupBoardObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport interface SVGMarkupDrawHandlerParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n  fillColor?: string;\r\n}\r\n\r\nexport default abstract class SVGMarkupDrawHandler extends SVGFieldDrawHandler {\r\n  params: SVGMarkupDrawHandlerParams;\r\n\r\n  constructor(params: SVGMarkupDrawHandlerParams = {}) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: MarkupBoardObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    if (boardObject.variation === Color.B) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupBlackColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else if (boardObject.variation === Color.W) {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', config.theme.markupWhiteColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    } else {\r\n      elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.fillColor || 'rgba(0,0,0,0)');\r\n    }\r\n\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Circle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.25');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.35');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: circle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dim extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const rect = document.createElementNS(SVG_NS, 'rect');\r\n    rect.setAttribute('x', '-0.5');\r\n    rect.setAttribute('y', '-0.5');\r\n    rect.setAttribute('width', '1');\r\n    rect.setAttribute('height', '1');\r\n    rect.setAttribute('fill', this.params.color);\r\n\r\n    return rect;\r\n  }\r\n}\r\n","import { SVG_NS } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class Dot extends SVGFieldDrawHandler {\r\n  params: { color: string };\r\n\r\n  constructor(params: { color: string }) {\r\n    super();\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const circle = document.createElementNS(SVG_NS, 'circle');\r\n    circle.setAttribute('cx', '0');\r\n    circle.setAttribute('cy', '0');\r\n    circle.setAttribute('r', '0.15');\r\n    circle.setAttribute('fill', this.params.color);\r\n\r\n    return circle;\r\n  }\r\n}\r\n","export default function generateId(prefix: string) {\r\n  return `${prefix}-${Math.floor(Math.random() * 1000000000).toString(36)}`;\r\n}\r\n","import SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, BoardObjectSVGElements } from '../types';\r\nimport generateId from '../generateId';\r\n\r\nexport default abstract class SVGStoneDrawHandler extends SVGFieldDrawHandler {\r\n  shadowFilterElement: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void): SVGElement | BoardObjectSVGElements {\r\n    /*if (!this.shadowFilterElement) {\r\n      this.shadowFilterElement = document.createElementNS(NS, 'filter');\r\n      this.shadowFilterElement.setAttribute('id', generateId('filter'));\r\n      this.shadowFilterElement.innerHTML = `\r\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"0.05\" />\r\n        <feOffset dx=\"0.03\" dy=\"0.03\" result=\"offsetblur\" />\r\n        <feComponentTransfer>\r\n          <feFuncA type=\"linear\" slope=\"0.5\" />\r\n        </feComponentTransfer>\r\n        <feMerge>\r\n          <feMergeNode />\r\n          <feMergeNode in=\"SourceGraphic\" />\r\n        </feMerge>\r\n      `;\r\n\r\n      addDef(this.shadowFilterElement);\r\n    }*/\r\n\r\n    return null;\r\n  }\r\n\r\n  createShadow(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    const stoneRadius = config.theme.stoneSize;\r\n\r\n    if (!this.shadowFilterElement) {\r\n      const shadowFilterElement = document.createElementNS(SVG_NS, 'radialGradient');\r\n      const blur = config.theme.shadowBlur;\r\n\r\n      const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n      const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n      shadowFilterElement.setAttribute('id', generateId('shadowFilter'));\r\n      shadowFilterElement.setAttribute('fr', String(startRadius));\r\n      shadowFilterElement.setAttribute('r', String(stopRadius));\r\n      shadowFilterElement.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"${config.theme.shadowColor}\" />\r\n        <stop offset=\"100%\" stop-color=\"${config.theme.shadowTransparentColor}\" />\r\n      `;\r\n\r\n      addDef(shadowFilterElement);\r\n      this.shadowFilterElement = shadowFilterElement;\r\n    }\r\n\r\n    const shadow = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    shadow.setAttribute('cx', String(config.theme.shadowOffsetX));\r\n    shadow.setAttribute('cy', String(config.theme.shadowOffsetY));\r\n    shadow.setAttribute('r', String(stoneRadius));\r\n    shadow.setAttribute('fill', `url(#${this.shadowFilterElement.id})`);\r\n\r\n    return shadow;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneBlack extends SVGStoneDrawHandler {\r\n  filterElement: SVGFilterElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement) {\r\n      const filter = document.createElementNS(SVG_NS, 'filter');\r\n\r\n      filter.setAttribute('id', generateId('filter'));\r\n      filter.setAttribute('x', '-300%');\r\n      filter.setAttribute('y', '-300%');\r\n      filter.setAttribute('width', '600%');\r\n      filter.setAttribute('height', '600%');\r\n\r\n      const blur = document.createElementNS(SVG_NS, 'feGaussianBlur');\r\n\r\n      blur.setAttribute('in', 'SourceGraphic');\r\n      blur.setAttribute('stdDeviation', 0.3 * config.theme.stoneSize as any);\r\n      filter.appendChild(blur);\r\n\r\n      this.filterElement = filter;\r\n      addDef(filter);\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#000');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('cy', -0.4 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('r', 0.25 * config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', '#fff');\r\n    glow1.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('cy', 0.4 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('r', 0.15 * config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', '#fff');\r\n    glow2.setAttribute('filter', `url(#${this.filterElement.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('fx', '30%');\r\n      filter1.setAttribute('fy', '30%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.9)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n\r\n      const filter2 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter2.setAttribute('id', generateId('filter'));\r\n      filter2.setAttribute('fx', '70%');\r\n      filter2.setAttribute('fy', '70%');\r\n      filter2.innerHTML = `\r\n        <stop offset=\"10%\" stop-color=\"rgba(255,255,255,0.7)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0)\" />\r\n      `;\r\n\r\n      addDef(filter2);\r\n      this.filterElement2 = filter2;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', '#ccc');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    const glow1 = document.createElementNS(SVG_NS, 'circle');\r\n    glow1.setAttribute('cx', '0');\r\n    glow1.setAttribute('cy', '0');\r\n    glow1.setAttribute('r', config.theme.stoneSize as any);\r\n    glow1.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stoneGroup.appendChild(glow1);\r\n\r\n    const glow2 = document.createElementNS(SVG_NS, 'circle');\r\n    glow2.setAttribute('cx', '0');\r\n    glow2.setAttribute('cy', '0');\r\n    glow2.setAttribute('r', config.theme.stoneSize as any);\r\n    glow2.setAttribute('fill', `url(#${this.filterElement2.id})`);\r\n    stoneGroup.appendChild(glow2);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, BoardObjectSVGElements, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler, { SVGMarkupDrawHandlerParams } from './SVGMarkupDrawHandler';\r\nimport { LabelBoardObject } from '../../BoardBase';\r\nimport { Color } from '../../types';\r\n\r\ninterface LabelParams extends SVGMarkupDrawHandlerParams {\r\n  font?: string;\r\n  maxWidth?: number;\r\n}\r\n\r\nexport default class Label extends SVGMarkupDrawHandler {\r\n  params: LabelParams;\r\n\r\n  constructor(params: LabelParams = {}) {\r\n    super(params);\r\n\r\n    if (!params.maxWidth && params.maxWidth !== 0) {\r\n      params.maxWidth = 0.95;\r\n    }\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const text = document.createElementNS(SVG_NS, 'text');\r\n    text.setAttribute('text-anchor', 'middle');\r\n    text.setAttribute('dominant-baseline', 'middle');\r\n    text.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'text');\r\n    mask.setAttribute('text-anchor', 'middle');\r\n    mask.setAttribute('dominant-baseline', 'middle');\r\n    mask.setAttribute('stroke-width', '0.2');\r\n    mask.setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    mask.setAttribute('lengthAdjust', 'spacingAndGlyphs');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: text,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LabelBoardObject, config: SVGBoardConfig) {\r\n    super.updateElement(elem, boardObject, config);\r\n\r\n    let fontSize = 0.5;\r\n    if (boardObject.text.length === 1) {\r\n      fontSize = 0.7;\r\n    } else if (boardObject.text.length === 2) {\r\n      fontSize = 0.6;\r\n    }\r\n\r\n    if (this.params.color) {\r\n      elem[SVG_OBJECTS].setAttribute('fill', this.params.color);\r\n    } else {\r\n      if (boardObject.variation === Color.B) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupBlackColor);\r\n      } else if (boardObject.variation === Color.W) {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupWhiteColor);\r\n      } else {\r\n        elem[SVG_OBJECTS].setAttribute('fill', config.theme.markupNoneColor);\r\n      }\r\n    }\r\n\r\n    elem[SVG_OBJECTS].removeAttribute('stroke');\r\n    elem[SVG_OBJECTS].setAttribute('font-family', this.params.font || config.theme.font);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', '0');\r\n    elem[SVG_OBJECTS].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_OBJECTS].textContent = boardObject.text;\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('font-size', fontSize as any);\r\n    elem[SVG_GRID_MASK].textContent = boardObject.text;\r\n\r\n    if (this.params.maxWidth > 0) {\r\n      if ((elem[SVG_OBJECTS] as SVGTextElement).getComputedTextLength() > this.params.maxWidth) {\r\n        elem[SVG_OBJECTS].setAttribute('textLength', `${this.params.maxWidth}`);\r\n        elem[SVG_GRID_MASK].setAttribute('textLength', `${this.params.maxWidth}`);\r\n      } else {\r\n        elem[SVG_OBJECTS].removeAttribute('textLength');\r\n        elem[SVG_GRID_MASK].removeAttribute('textLength');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVGDrawHandler, BoardObjectSVGElements, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport { LineBoardObject } from '../../BoardBase';\r\n\r\ninterface LineParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n}\r\n\r\nexport default class Line implements SVGDrawHandler {\r\n  params: LineParams;\r\n\r\n  constructor(params: LineParams = {}) {\r\n    this.params = params;\r\n  }\r\n\r\n  createElement() {\r\n    const line = document.createElementNS(SVG_NS, 'line');\r\n    const mask = document.createElementNS(SVG_NS, 'line');\r\n\r\n    return {\r\n      [SVG_OBJECTS]: line,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n\r\n  updateElement(elem: BoardObjectSVGElements, boardObject: LineBoardObject, config: SVGBoardConfig) {\r\n    elem[SVG_OBJECTS].setAttribute('stroke', this.params.color || config.theme.markupNoneColor);\r\n    elem[SVG_OBJECTS].setAttribute('stroke-width', this.params.lineWidth || config.theme.markupLineWidth as any);\r\n    elem[SVG_OBJECTS].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_OBJECTS].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_OBJECTS].setAttribute('y2', boardObject.end.y as any);\r\n\r\n    elem[SVG_GRID_MASK].setAttribute('stroke', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n    elem[SVG_GRID_MASK].setAttribute(\r\n      'stroke-width',\r\n      (this.params.lineWidth || config.theme.markupLineWidth) * 2 as any,\r\n    );\r\n    elem[SVG_GRID_MASK].setAttribute('x1', boardObject.start.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y1', boardObject.start.y as any);\r\n    elem[SVG_GRID_MASK].setAttribute('x2', boardObject.end.x as any);\r\n    elem[SVG_GRID_MASK].setAttribute('y2', boardObject.end.y as any);\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(48,48,48,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(16,16,16,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(0,0,0,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_SHADOWS } from '../types';\r\nimport SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport generateId from '../generateId';\r\n\r\nexport default class GlassStoneWhite extends SVGStoneDrawHandler {\r\n  filterElement1: SVGElement;\r\n  filterElement2: SVGElement;\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    if (!this.filterElement1) {\r\n      const filter1 = document.createElementNS(SVG_NS, 'radialGradient');\r\n      filter1.setAttribute('id', generateId('filter'));\r\n      filter1.setAttribute('cx', '45%');\r\n      filter1.setAttribute('cy', '45%');\r\n      filter1.setAttribute('fx', '20%');\r\n      filter1.setAttribute('fy', '20%');\r\n      filter1.setAttribute('r', '60%');\r\n      filter1.innerHTML = `\r\n        <stop offset=\"0%\" stop-color=\"rgba(255,255,255,1)\" />\r\n        <stop offset=\"80%\" stop-color=\"rgba(215,215,215,1)\" />\r\n        <stop offset=\"100%\" stop-color=\"rgba(170,170,170,1)\" />\r\n      `;\r\n\r\n      addDef(filter1);\r\n      this.filterElement1 = filter1;\r\n    }\r\n\r\n    const stoneGroup = document.createElementNS(SVG_NS, 'g');\r\n\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('fill', `url(#${this.filterElement1.id})`);\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stoneGroup.appendChild(stone);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: stoneGroup,\r\n      [SVG_SHADOWS]: this.createShadow(config, addDef),\r\n    };\r\n  }\r\n}\r\n","import SVGStoneDrawHandler from './SVGStoneDrawHandler';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\nimport { SVGBoardConfig, SVG_NS, SVG_OBJECTS } from '../types';\r\n\r\nexport default class RealisticStone extends SVGStoneDrawHandler {\r\n  paths: string[];\r\n  fallback: SVGFieldDrawHandler;\r\n  randSeed: number;\r\n  loadedPaths: { [path: string]: boolean };\r\n\r\n  constructor (paths: string[], fallback: SVGFieldDrawHandler) {\r\n    super();\r\n    this.fallback = fallback;\r\n    this.randSeed = Math.ceil(Math.random() * 9999999);\r\n    this.paths = paths;\r\n    this.loadedPaths = {};\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig, addDef: (def: SVGElement) => void) {\r\n    super.createElement(config, addDef);\r\n\r\n    const id = Math.floor(Math.random() * this.paths.length);\r\n    const group = document.createElementNS(SVG_NS, 'g');\r\n    let fallbackElement: any;\r\n\r\n    if (!this.loadedPaths[id]) {\r\n      fallbackElement = this.fallback.createElement(config, addDef);\r\n\r\n      if (!(fallbackElement instanceof SVGElement)) {\r\n        fallbackElement = fallbackElement[SVG_OBJECTS];\r\n      }\r\n\r\n      group.appendChild(fallbackElement);\r\n    }\r\n\r\n    const image = document.createElementNS(SVG_NS, 'image');\r\n    image.setAttribute('href', this.paths[id]);\r\n    image.setAttribute('width', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('height', config.theme.stoneSize * 2 as any);\r\n    image.setAttribute('x', -config.theme.stoneSize as any);\r\n    image.setAttribute('y', -config.theme.stoneSize as any);\r\n    if (!this.loadedPaths[id]) {\r\n      image.setAttribute('opacity', '0');\r\n    }\r\n    image.addEventListener('load', () => {\r\n      if (fallbackElement) {\r\n        image.setAttribute('opacity', '1');\r\n        group.removeChild(fallbackElement as SVGElement);\r\n        this.loadedPaths[id] = true;\r\n      }\r\n    });\r\n\r\n    group.appendChild(image);\r\n\r\n    return group;\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from '../types';\r\nimport SVGFieldDrawHandler from './SVGFieldDrawHandler';\r\n\r\nexport default class SimpleStone extends SVGFieldDrawHandler {\r\n  color: string;\r\n\r\n  constructor(color: string) {\r\n    super();\r\n    this.color = color;\r\n  }\r\n\r\n  createElement(config: SVGBoardConfig) {\r\n    const stone = document.createElementNS(SVG_NS, 'circle');\r\n\r\n    stone.setAttribute('cx', '0');\r\n    stone.setAttribute('cy', '0');\r\n    stone.setAttribute('r', config.theme.stoneSize as any);\r\n    stone.setAttribute('fill', this.color);\r\n\r\n    return stone;\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Square extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const square = document.createElementNS(SVG_NS, 'rect');\r\n    square.setAttribute('x', '-0.25');\r\n    square.setAttribute('y', '-0.25');\r\n    square.setAttribute('width', '0.50');\r\n    square.setAttribute('height', '0.50');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'rect');\r\n    mask.setAttribute('x', '-0.35');\r\n    mask.setAttribute('y', '-0.35');\r\n    mask.setAttribute('width', '0.70');\r\n    mask.setAttribute('height', '0.70');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: square,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVGBoardConfig, SVG_NS, SVG_OBJECTS, SVG_GRID_MASK } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class Triangle extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const triangle = document.createElementNS(SVG_NS, 'polygon');\r\n    triangle.setAttribute('points', '0,-0.25 -0.25,0.166666 0.25,0.166666');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'polygon');\r\n    mask.setAttribute('points', '0,-0.35 -0.35,0.2333333 0.35,0.2333333');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: triangle,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVG_OBJECTS, SVG_GRID_MASK, SVGBoardConfig } from '../types';\r\nimport SVGMarkupDrawHandler from './SVGMarkupDrawHandler';\r\n\r\nexport default class XMark extends SVGMarkupDrawHandler {\r\n  createElement(config: SVGBoardConfig) {\r\n    const path = document.createElementNS(SVG_NS, 'path');\r\n    path.setAttribute('d', 'M -0.20,-0.20 L 0.20,0.20 M 0.20,-0.20 L -0.20,0.20');\r\n\r\n    const mask = document.createElementNS(SVG_NS, 'circle');\r\n    mask.setAttribute('cx', '0');\r\n    mask.setAttribute('cy', '0');\r\n    mask.setAttribute('r', '0.15');\r\n    mask.setAttribute('fill', `rgba(0,0,0,${config.theme.markupGridMask})`);\r\n\r\n    return {\r\n      [SVG_OBJECTS]: path,\r\n      [SVG_GRID_MASK]: mask,\r\n    };\r\n  }\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction line(fromX: number, fromY: number, toX: number, toY: number) {\r\n  const line = document.createElementNS(SVG_NS, 'line');\r\n  line.setAttribute('x1', fromX as any);\r\n  line.setAttribute('y1', fromY as any);\r\n  line.setAttribute('x2', toX as any);\r\n  line.setAttribute('y2', toY as any);\r\n\r\n  return line;\r\n}\r\n\r\nfunction star(x: number, y: number, starSize: number) {\r\n  const star = document.createElementNS(SVG_NS, 'circle');\r\n  star.setAttribute('cx', x as any);\r\n  star.setAttribute('cy', y as any);\r\n  star.setAttribute('r', starSize as any);\r\n  star.setAttribute('fill', '#553310');\r\n  star.setAttribute('stroke-width', '0');\r\n\r\n  return star;\r\n}\r\n\r\nexport default function createGrid(config: SVGBoardConfig) {\r\n  const { linesWidth } = config.theme.grid;\r\n\r\n  const grid = document.createElementNS(SVG_NS, 'g');\r\n  grid.setAttribute('stroke', config.theme.grid.linesColor);\r\n  grid.setAttribute('stroke-width', linesWidth.toString());\r\n  grid.setAttribute('fill', config.theme.grid.starColor);\r\n\r\n  for (let i = 0; i < config.size; i++) {\r\n    grid.appendChild(line(i, 0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2));\r\n    grid.appendChild(line(0 - linesWidth / 2, i, config.size - 1 + linesWidth / 2, i));\r\n  }\r\n\r\n  const starPoints = config.theme.starPoints[config.size];\r\n\r\n  if (starPoints) {\r\n    starPoints.forEach((starPoint) => {\r\n      grid.appendChild(star(starPoint.x, starPoint.y, config.theme.grid.starSize));\r\n    });\r\n  }\r\n  return grid;\r\n}\r\n","import { SVG_NS, SVGBoardConfig } from './types';\r\n\r\nfunction letter(x: number, y: number, str: string) {\r\n  const text = document.createElementNS(SVG_NS, 'text');\r\n  text.setAttribute('x', x as any);\r\n  text.setAttribute('y', y as any);\r\n  text.textContent = str;\r\n\r\n  return text;\r\n}\r\n\r\nexport default function createCoordinates(config: SVGBoardConfig) {\r\n  const coordinates = document.createElementNS(SVG_NS, 'g');\r\n  coordinates.style.userSelect = 'none';\r\n\r\n  const { size } = config;\r\n  const {\r\n    fontSize,\r\n    color,\r\n    labelsX,\r\n    labelsY,\r\n    top,\r\n    bottom,\r\n    right,\r\n    left,\r\n  } = config.theme.coordinates;\r\n\r\n  coordinates.setAttribute('font-family', config.theme.font);\r\n  coordinates.setAttribute('font-size', fontSize as any);\r\n  coordinates.setAttribute('text-anchor', 'middle');\r\n  coordinates.setAttribute('dominant-baseline', 'middle');\r\n\r\n  if (config.theme.coordinates.bold) {\r\n    coordinates.setAttribute('font-weight', 'bold');\r\n  }\r\n\r\n  coordinates.setAttribute('fill', color);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    if (top) {\r\n      coordinates.appendChild(letter(i, -0.75, labelsX[i] as string));\r\n    }\r\n    if (bottom) {\r\n      coordinates.appendChild(letter(i, size - 0.25, labelsX[i] as string));\r\n    }\r\n    if (left) {\r\n      coordinates.appendChild(letter(-0.75, size - i - 1, labelsY[i] as string));\r\n    }\r\n    if (right) {\r\n      coordinates.appendChild(letter(size - 0.25, size - i - 1, labelsY[i] as string));\r\n    }\r\n  }\r\n\r\n  return coordinates;\r\n}\r\n","import { defaultBoardBaseTheme } from '../BoardBase/defaultConfig';\r\nimport { SVGBoardTheme } from './types';\r\nimport * as drawHandlers from './svgDrawHandlers';\r\nimport ModernStoneWhite from './svgDrawHandlers/ModernStoneWhite';\r\nimport ModernStoneBlack from './svgDrawHandlers/ModernStoneBlack';\r\n\r\nconst defaultSVGTheme: SVGBoardTheme = {\r\n  ...defaultBoardBaseTheme,\r\n  // backgroundImage: 'images/wood1.jpg',\r\n  markupGridMask: 0.8,\r\n  stoneSize: 0.48,\r\n\r\n  coordinates: {\r\n    ...defaultBoardBaseTheme.coordinates,\r\n    fontSize: 0.5,\r\n    top: true,\r\n    right: true,\r\n    bottom: true,\r\n    left: true,\r\n  },\r\n\r\n  grid: {\r\n    ...defaultBoardBaseTheme.grid,\r\n    linesWidth: 0.03,\r\n    starSize: 0.09,\r\n  },\r\n\r\n  drawHandlers: {\r\n    CR: new drawHandlers.Circle(),\r\n    SQ: new drawHandlers.Square(),\r\n    LB: new drawHandlers.Label(),\r\n    TR: new drawHandlers.Triangle(),\r\n    MA: new drawHandlers.XMark({ lineWidth: 0.075 }),\r\n    SL: new drawHandlers.Dot({ color: 'rgba(32, 32, 192, 0.75)' }),\r\n    LN: new drawHandlers.Line(),\r\n    AR: new drawHandlers.Arrow(),\r\n    DD: new drawHandlers.Dim({ color: 'rgba(0, 0, 0, 0.5)' }),\r\n    // B: new drawHandlers.GlassStoneBlack(),\r\n    // W: new drawHandlers.GlassStoneWhite(),\r\n    W: new ModernStoneWhite(),\r\n    B: new ModernStoneBlack(),\r\n    /*B: new drawHandlers.RealisticStone([\r\n      'images/stones/black00_128.png',\r\n      'images/stones/black01_128.png',\r\n      'images/stones/black02_128.png',\r\n      'images/stones/black03_128.png',\r\n    ], new drawHandlers.GlassStoneBlack()),\r\n    W: new drawHandlers.RealisticStone([\r\n      'images/stones/white00_128.png',\r\n      'images/stones/white01_128.png',\r\n      'images/stones/white02_128.png',\r\n      'images/stones/white03_128.png',\r\n      'images/stones/white04_128.png',\r\n      'images/stones/white05_128.png',\r\n      'images/stones/white06_128.png',\r\n      'images/stones/white07_128.png',\r\n      'images/stones/white08_128.png',\r\n      'images/stones/white09_128.png',\r\n      'images/stones/white10_128.png',\r\n    ], new drawHandlers.GlassStoneWhite()),*/\r\n  },\r\n};\r\n\r\nexport default defaultSVGTheme;\r\n","export enum PropIdent {\r\n  // Move Properties\r\n  BLACK_MOVE = 'B',\r\n  EXECUTE_ILLEGAL = 'KO',\r\n  MOVE_NUMBER = 'MN',\r\n  WHITE_MOVE = 'W',\r\n\r\n  // Setup Properties\r\n  ADD_BLACK = 'AB',\r\n  CLEAR_FIELD = 'AE',\r\n  ADD_WHITE = 'AW',\r\n  SET_TURN = 'PL',\r\n\r\n  // Node Annotation Properties\r\n  COMMENT = 'C',\r\n  EVEN_POSITION = 'DM',\r\n  GOOD_FOR_BLACK = 'GB',\r\n  GOOD_FOR_WHITE = 'GW',\r\n  HOTSPOT = 'HO',\r\n  NODE_NAME = 'N',\r\n  UNCLEAR_POSITION = 'UC',\r\n  NODE_VALUE = 'V',\r\n\r\n  // Move Annotation Properties\r\n  BAD_MOVE = 'BM',\r\n  DOUBTFUL_MOVE = 'DM',\r\n  INTERESTING_MOVE = 'IT',\r\n  GOOD_MOVE = 'TE',\r\n\r\n  // Markup Properties\r\n  ARROW = 'AR',\r\n  CIRCLE = 'CR',\r\n  DIM = 'DD',\r\n  LABEL = 'LB',\r\n  LINE = 'LN',\r\n  X_MARK = 'MA',\r\n  SELECTED = 'SL',\r\n  SQUARE = 'SQ',\r\n  TRIANGLE = 'TR',\r\n\r\n  // Root Properties\r\n  APPLICATION = 'AP',\r\n  CHARSET = 'CA',\r\n  SGF_VERSION = 'FF',\r\n  GAME_TYPE = 'GM',\r\n  VARIATIONS_STYLE = 'ST',\r\n  BOARD_SIZE = 'SZ',\r\n\r\n  // Game Info Properties\r\n  ANNOTATOR = 'AN',\r\n  BLACK_RANK = 'BR',\r\n  BLACK_TEAM = 'BT',\r\n  COPYRIGHT = 'CP',\r\n  DATE = 'DT',\r\n  EVENT = 'EV',\r\n  GAME_NAME = 'GN',\r\n  GAME_COMMENT = 'GC',\r\n  OPENING_INFO = 'ON',\r\n  OVER_TIME = 'OT',\r\n  BLACK_NAME = 'BN',\r\n  PLACE = 'PC',\r\n  WHITE_NAME = 'PW',\r\n  RESULT = 'RE',\r\n  ROUND = 'RO',\r\n  RULES = 'RU',\r\n  SOURCE = 'SO',\r\n  TIME_LIMITS = 'TM',\r\n  AUTHOR = 'US',\r\n  WHITE_RANK = 'WR',\r\n  WHITE_TEAM = 'WT',\r\n\r\n  // Timing Properties\r\n  BLACK_TIME_LEFT = 'BL',\r\n  BLACK_STONES_LEFT = 'OB',\r\n  WHITE_STONES_LEFT = 'OW',\r\n  WHITE_TIME_LEFT = 'WL',\r\n\r\n  // Miscellaneous Properties\r\n  FIGURE = 'FG',\r\n  PRINT_MOVE_NUMBERS = 'PM',\r\n  BOARD_SECTION = 'VW',\r\n  HANDICAP = 'HA',\r\n\r\n  // GO specific Properties\r\n  KOMI = 'KM',\r\n  BLACK_TERRITORY = 'TB',\r\n  WHITE_TERRITORY = 'TW',\r\n}\r\n\r\nexport type SGFProperties = {\r\n  [key in PropIdent]?: string[];\r\n};\r\n\r\nexport type SGFNode = SGFProperties;\r\n\r\nexport interface SGFGameTree {\r\n  sequence: SGFNode[];\r\n  children: SGFGameTree[];\r\n}\r\n\r\nexport type SGFCollection = SGFGameTree[];\r\n","import { BoardBase, BoardViewport } from '../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport createGrid from './createGrid';\r\nimport createCoordinates from './createCoordinates';\r\nimport {\r\n  SVGDrawHandler,\r\n  SVGBoardConfig,\r\n  SVG_NS,\r\n  SVG_OBJECTS,\r\n  BoardObjectSVGElements,\r\n  SVG_GRID_MASK,\r\n  SVG_SHADOWS,\r\n  SVGBoardObject,\r\n} from './types';\r\nimport { defaultBoardBaseConfig } from '../BoardBase/defaultConfig';\r\nimport defaultSVGTheme from './defaultSVGTheme';\r\nimport generateId from './generateId';\r\nimport { Point } from '../types';\r\n\r\nconst svgBoardDefaultConfig: SVGBoardConfig = {\r\n  ...defaultBoardBaseConfig,\r\n  theme: defaultSVGTheme,\r\n};\r\n\r\nexport default class SVGBoard extends BoardBase {\r\n  config: SVGBoardConfig;\r\n  boardElement: HTMLElement;\r\n  touchArea: HTMLElement;\r\n  svgElement: SVGElement;\r\n  defsElement: SVGElement;\r\n  objects: SVGBoardObject[] = [];\r\n  objectsElementMap: Map<SVGBoardObject, BoardObjectSVGElements>;\r\n  top: number;\r\n  left: number;\r\n  bottom: number;\r\n  right: number;\r\n\r\n  /** Drawing contexts - elements to put additional board objects. Similar to layers. */\r\n  contexts: {\r\n    [key: string]: SVGElement;\r\n  } = {};\r\n\r\n  constructor (elem: HTMLElement, config: PartialRecursive<SVGBoardConfig> = {}) {\r\n    super(elem, makeConfig(svgBoardDefaultConfig, config));\r\n\r\n    this.boardElement = document.createElement('div');\r\n    this.boardElement.style.display = 'inline-block';\r\n    this.boardElement.style.position = 'relative';\r\n    this.boardElement.style.verticalAlign = 'middle';\r\n    this.boardElement.style.userSelect = 'none';\r\n    this.element.appendChild(this.boardElement);\r\n\r\n    this.touchArea = document.createElement('div');\r\n    this.touchArea.style.position = 'absolute';\r\n    this.touchArea.style.top = '0';\r\n    this.touchArea.style.left = '0';\r\n    this.touchArea.style.bottom = '0';\r\n    this.touchArea.style.right = '0';\r\n    this.touchArea.style.zIndex = '1';\r\n    this.touchArea.style.borderTop = '#F0E7A7 solid 1px';\r\n    this.touchArea.style.borderRight = '#D1A974 solid 1px';\r\n    this.touchArea.style.borderLeft = '#CCB467 solid 1px';\r\n    this.touchArea.style.borderBottom = '#665926 solid 1px';\r\n    this.boardElement.appendChild(this.touchArea);\r\n\r\n    this.svgElement = document.createElementNS(SVG_NS, 'svg');\r\n    this.svgElement.style.display = 'block';\r\n    this.boardElement.appendChild(this.svgElement);\r\n\r\n    this.defsElement = document.createElementNS(SVG_NS, 'defs');\r\n    this.svgElement.appendChild(this.defsElement);\r\n\r\n    this.setViewport();\r\n    this.resize();\r\n    this.redraw();\r\n  }\r\n\r\n  resize() {\r\n    if (this.config.width && this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else if (this.config.width) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = `${this.config.width}px`;\r\n      this.svgElement.style.height = 'auto';\r\n    } else if (this.config.height) {\r\n      this.boardElement.style.width = '';\r\n      this.svgElement.style.width = 'auto';\r\n      this.svgElement.style.height = `${this.config.height}px`;\r\n    } else {\r\n      this.boardElement.style.width = '100%';\r\n      this.svgElement.style.width = '100%';\r\n      this.svgElement.style.height = 'auto';\r\n    }\r\n  }\r\n\r\n  redraw() {\r\n    this.svgElement.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n    if (this.config.theme.backgroundImage) {\r\n      this.svgElement.style.backgroundImage = `url('${this.config.theme.backgroundImage}')`;\r\n    } else {\r\n      this.svgElement.style.backgroundImage = '';\r\n    }\r\n\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.drawObjects();\r\n  }\r\n\r\n  drawGrid() {\r\n    if (this.contexts[SVG_GRID_MASK]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_GRID_MASK]);\r\n    }\r\n\r\n    if (this.contexts.gridElement) {\r\n      this.svgElement.removeChild(this.contexts.gridElement);\r\n    }\r\n\r\n    // create grid mask\r\n    const { size } = this.config;\r\n    this.contexts[SVG_GRID_MASK] = document.createElementNS(SVG_NS, 'mask');\r\n    this.contexts[SVG_GRID_MASK].id = generateId('mask');\r\n    this.contexts[SVG_GRID_MASK].innerHTML = `<rect x=\"-0.5\" y=\"-0.5\" width=\"${size}\" height=\"${size}\" fill=\"white\" />`;\r\n    this.svgElement.appendChild(this.contexts[SVG_GRID_MASK]);\r\n\r\n    // create grid\r\n    this.contexts.gridElement = createGrid(this.config);\r\n    this.contexts.gridElement.setAttribute('mask', `url(#${this.contexts[SVG_GRID_MASK].id})`);\r\n    this.svgElement.appendChild(this.contexts.gridElement);\r\n  }\r\n\r\n  drawCoordinates() {\r\n    if (this.contexts.coordinatesElement) {\r\n      this.svgElement.removeChild(this.contexts.coordinatesElement);\r\n    }\r\n\r\n    this.contexts.coordinatesElement = createCoordinates(this.config);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.svgElement.appendChild(this.contexts.coordinatesElement);\r\n  }\r\n\r\n  drawObjects() {\r\n    // remove old shadows layer\r\n    if (this.contexts[SVG_SHADOWS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_SHADOWS]);\r\n    }\r\n\r\n    // remove old objects layer\r\n    if (this.contexts[SVG_OBJECTS]) {\r\n      this.svgElement.removeChild(this.contexts[SVG_OBJECTS]);\r\n    }\r\n\r\n    // append new shadows layer\r\n    this.contexts[SVG_SHADOWS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_SHADOWS]);\r\n\r\n    // append new object layer\r\n    this.contexts[SVG_OBJECTS] = document.createElementNS(SVG_NS, 'g');\r\n    this.svgElement.appendChild(this.contexts[SVG_OBJECTS]);\r\n\r\n    // prepare map for objects and add all objects\r\n    this.objectsElementMap = new Map();\r\n    this.objects.forEach(boardObject => this.createObjectElements(boardObject));\r\n  }\r\n\r\n  addObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.addObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      if (this.objectsElementMap.get(boardObject)) {\r\n        // already added - just redraw it\r\n        this.updateObject(boardObject);\r\n        return;\r\n      }\r\n\r\n      this.createObjectElements(boardObject);\r\n    }\r\n  }\r\n\r\n  protected createObjectElements(boardObject: SVGBoardObject) {\r\n    const handler = this.getObjectHandler(boardObject);\r\n\r\n    // create element or elements and add them to the svg\r\n    const elem = handler.createElement(this.config, (def: SVGElement) => this.defsElement.appendChild(def));\r\n    let elements: BoardObjectSVGElements;\r\n\r\n    if (elem instanceof SVGElement) {\r\n      elements = { [SVG_OBJECTS]: elem };\r\n    } else {\r\n      elements = elem;\r\n    }\r\n    this.objectsElementMap.set(boardObject, elements);\r\n    Object.keys(elements).forEach(key => this.contexts[key].appendChild(elements[key]));\r\n\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  getObjectHandler(boardObject: SVGBoardObject) {\r\n    return 'handler' in boardObject ? boardObject.handler : this.config.theme.drawHandlers[boardObject.type];\r\n  }\r\n\r\n  removeObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    super.removeObject(boardObject);\r\n\r\n    if (!Array.isArray(boardObject)) {\r\n      const elements = this.objectsElementMap.get(boardObject);\r\n      if (elements) {\r\n        this.objectsElementMap.delete(boardObject);\r\n        Object.keys(elements).forEach(key => this.contexts[key].removeChild(elements[key]));\r\n      }\r\n    }\r\n  }\r\n\r\n  updateObject(boardObject: SVGBoardObject | SVGBoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.updateObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const elements = this.objectsElementMap.get(boardObject);\r\n\r\n    if (!elements) {\r\n      // updated object isn't on board - ignore, add or warning?\r\n      return;\r\n    }\r\n\r\n    const handler = this.getObjectHandler(boardObject);\r\n    handler.updateElement(elements, boardObject, this.config);\r\n  }\r\n\r\n  setViewport(viewport: BoardViewport = this.config.viewport) {\r\n    super.setViewport(viewport);\r\n\r\n    const { coordinates, theme, size } = this.config;\r\n    const {\r\n      marginSize,\r\n      coordinates: {\r\n        fontSize,\r\n        top: coordinatesTop,\r\n        left: coordinatesLeft,\r\n        bottom: coordinatesBottom,\r\n        right: coordinatesRight,\r\n      },\r\n    } = theme;\r\n\r\n    this.top = viewport.top - 0.5 - (coordinates && coordinatesTop && !viewport.top ? fontSize : 0) - marginSize;\r\n    this.left = viewport.left - 0.5 - (coordinates && coordinatesLeft && !viewport.left ? fontSize : 0) - marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.bottom = size - 0.5 - this.top - viewport.bottom + (coordinates && coordinatesBottom && !viewport.bottom ? fontSize : 0) + marginSize;\r\n    // tslint:disable-next-line:max-line-length\r\n    this.right = size - 0.5 - this.left - viewport.right + (coordinates && coordinatesRight && !viewport.right ? fontSize : 0) + marginSize;\r\n    this.svgElement.setAttribute('viewBox', `${this.left} ${this.top} ${this.right} ${this.bottom}`);\r\n  }\r\n\r\n  setSize(size: number = 19) {\r\n    super.setSize(size);\r\n    this.drawGrid();\r\n    this.drawCoordinates();\r\n    this.setViewport();\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    super.setCoordinates(coordinates);\r\n    this.contexts.coordinatesElement.style.opacity = this.config.coordinates ? '' : '0';\r\n    this.setViewport();\r\n  }\r\n\r\n  on(type: string, callback: (event: UIEvent, point: Point) => void) {\r\n    super.on(type, callback);\r\n    this.registerBoardListener(type);\r\n  }\r\n\r\n  registerBoardListener(type: string) {\r\n    this.touchArea.addEventListener(type, (evt) => {\r\n      if ((evt as any).layerX != null) {\r\n        const pos = this.getRelativeCoordinates((evt as any).layerX, (evt as any).layerY);\r\n        this.emit(type, evt, pos);\r\n      } else {\r\n        this.emit(type, evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRelativeCoordinates(absoluteX: number, absoluteY: number) {\r\n    // new hopefully better translation of coordinates\r\n\r\n    const fieldWidth = this.touchArea.offsetWidth / (this.right);\r\n    const fieldHeight = this.touchArea.offsetHeight / (this.bottom);\r\n\r\n    const x = Math.round((absoluteX / fieldWidth + this.left));\r\n    const y = Math.round((absoluteY / fieldHeight + this.top));\r\n\r\n    if (x < 0 || x >= this.config.size || y < 0 || y >= this.config.size) {\r\n      return null;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { LifeCycleEvent } from './types';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../types';\r\nimport { goRules } from '../Game';\r\n\r\nexport function beforeInitSZ(event: LifeCycleEvent<number>) {\r\n  event.target.params.size = event.value;\r\n}\r\n\r\nexport function beforeInitRU(event: LifeCycleEvent<string>) {\r\n  if ((goRules as any)[event.value]) {\r\n    event.target.params.rules = (goRules as any)[event.value];\r\n  }\r\n}\r\n\r\nexport function applyGameChangesHA(event: LifeCycleEvent<number>) {\r\n  if (\r\n    event.value > 1 &&\r\n    event.target.currentNode === event.target.rootNode &&\r\n    !event.target.getProperty(PropIdent.SET_TURN)\r\n  ) {\r\n    event.target.game.position.turn = Color.WHITE;\r\n  }\r\n}\r\n\r\nexport function applyGameChangesMove(event: LifeCycleEvent<Point>) {\r\n  const color = event.propIdent === 'B' ? Color.B : Color.W;\r\n\r\n  // if this is false, move is pass\r\n  if (event.value) {\r\n    event.target.game.position.applyMove(event.value.x, event.value.y, color, true, true);\r\n  }\r\n\r\n  event.target.game.position.turn = -color;\r\n}\r\n\r\nexport function applyGameChangesPL(event: LifeCycleEvent<Color.BLACK | Color.WHITE>) {\r\n  event.target.game.turn = event.value;\r\n}\r\n\r\nexport function applyGameChangesSetup(event: LifeCycleEvent<Point[]>) {\r\n  let color: Color;\r\n  switch (event.propIdent) {\r\n    case 'AB': color = Color.B; break;\r\n    case 'AW': color = Color.W; break;\r\n    case 'AE': color = Color.E; break;\r\n  }\r\n\r\n  event.value.forEach((value) => {\r\n    // add stone\r\n    event.target.game.setStone(value.x, value.y, color);\r\n  });\r\n}\r\n","import KifuNode, { Path } from '../kifu/KifuNode';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport { Game, goRules, GoRules, JAPANESE_RULES } from '../Game';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport PropertyHandler from './PropertyHandler';\r\nimport { PlayerInitParams } from './types';\r\nimport * as basePropertyListeners from './basePropertyListeners';\r\nimport { Color } from '../types';\r\nimport PlayerPlugin from './PlayerPlugin';\r\n\r\nexport default class PlayerBase extends EventEmitter {\r\n  rootNode: KifuNode;\r\n  currentNode: KifuNode;\r\n  game: Game;\r\n  params: PlayerInitParams;\r\n  plugins: PlayerPlugin[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.loadKifu(new KifuNode());\r\n    this.plugins = [];\r\n\r\n    this.on('beforeInit.SZ', basePropertyListeners.beforeInitSZ);\r\n    this.on('beforeInit.RU', basePropertyListeners.beforeInitRU);\r\n    this.on('applyGameChanges.HA', basePropertyListeners.applyGameChangesHA);\r\n    this.on('applyGameChanges.B', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.W', basePropertyListeners.applyGameChangesMove);\r\n    this.on('applyGameChanges.PL', basePropertyListeners.applyGameChangesPL);\r\n    this.on('applyGameChanges.AB', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AW', basePropertyListeners.applyGameChangesSetup);\r\n    this.on('applyGameChanges.AE', basePropertyListeners.applyGameChangesSetup);\r\n  }\r\n\r\n  /**\r\n   * Load game (kifu) from KifuNode.\r\n   */\r\n  loadKifu(rootNode: KifuNode) {\r\n    this.rootNode = rootNode;\r\n    this.currentNode = rootNode;\r\n\r\n    this.emit('loadKifu', {\r\n      name: 'loadKifu',\r\n      kifuNode: rootNode,\r\n      target: this,\r\n    });\r\n    this.executeRoot();\r\n  }\r\n\r\n  /**\r\n   * Create new game (kifu) and init player with it.\r\n   */\r\n  newGame(size?: number, rules?: GoRules) {\r\n    const rootNode = new KifuNode();\r\n\r\n    if (size) {\r\n      rootNode.setProperty('SZ', size);\r\n    }\r\n\r\n    if (rules) {\r\n      // TODO: handle rules more correctly\r\n      const rulesName = Object.keys(goRules).find(name => (goRules as any)[name] === rules);\r\n      if (rulesName) {\r\n        rootNode.setProperty('RU', rulesName);\r\n      }\r\n    }\r\n\r\n    this.loadKifu(rootNode);\r\n  }\r\n\r\n  /**\r\n   * Executes root properties during initialization. If some properties change, call this to re-init player.\r\n   */\r\n  protected executeRoot() {\r\n    this.params = {\r\n      size: 19,\r\n      rules: JAPANESE_RULES,\r\n    };\r\n\r\n    this.emitNodeLifeCycleEvent('beforeInit');\r\n    this.game = new Game(this.params.size, this.params.rules);\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  protected executeNode() {\r\n    this.emitNodeLifeCycleEvent('applyGameChanges');\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Change current node to specified next node and executes its properties.\r\n   */\r\n  protected executeNext(i: number) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n\r\n    this.game.pushPosition(this.game.position.clone());\r\n    this.currentNode = this.currentNode.children[i];\r\n\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Change current node to previous/parent next node and executes its properties.\r\n   */\r\n  protected executePrevious() {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n\r\n    this.game.popPosition();\r\n    this.currentNode = this.currentNode.parent;\r\n\r\n    this.emitNodeLifeCycleEvent('applyNodeChanges');\r\n  }\r\n\r\n  /**\r\n   * Emits node life cycle method (for every property)\r\n   */\r\n  protected emitNodeLifeCycleEvent(name: keyof PropertyHandler<any, any>) {\r\n    this.emit(name, {\r\n      name,\r\n      target: this,\r\n    });\r\n\r\n    this.currentNode.forEachProperty((propIdent, value) => {\r\n      this.emit(`${name}.${propIdent}`, {\r\n        name,\r\n        target: this,\r\n        propIdent,\r\n        value,\r\n      });\r\n    });\r\n  }\r\n\r\n  protected getPropertyHandler(propIdent: string) {\r\n    return (this.constructor as any).propertyHandlers[propIdent] as PropertyHandler<any, any>;\r\n  }\r\n\r\n  /**\r\n   * Gets property of current node.\r\n   */\r\n  getProperty(propIdent: PropIdent) {\r\n    return this.currentNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Sets property of current node and execute changes.\r\n   */\r\n  setProperty(propIdent: PropIdent, value?: any) {\r\n    this.emitNodeLifeCycleEvent('clearNodeChanges');\r\n    this.emitNodeLifeCycleEvent('clearGameChanges');\r\n    this.currentNode.setProperty(propIdent, value);\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * Gets property of root node.\r\n   */\r\n  getRootProperty(propIdent: PropIdent) {\r\n    return this.rootNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Returns array of next nodes (children).\r\n   */\r\n  getNextNodes() {\r\n    return this.currentNode.children;\r\n  }\r\n\r\n  /**\r\n   * Go to (specified) next node and execute it.\r\n   */\r\n  next(node: number | KifuNode = 0) {\r\n    if (this.currentNode.children.length) {\r\n      let i: number;\r\n\r\n      if (typeof node === 'number') {\r\n        i = node;\r\n      } else {\r\n        i = this.currentNode.children.indexOf(node);\r\n      }\r\n\r\n      if (this.currentNode.children[i]) {\r\n        this.executeNext(i);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the previous node.\r\n   */\r\n  previous() {\r\n    if (this.currentNode.parent) {\r\n      this.executePrevious();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the first position - root node.\r\n   */\r\n  first() {\r\n    // not sure if effective - TODO: check if there is a better way to do this\r\n    while (this.previous()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to the last position.\r\n   */\r\n  last() {\r\n    while (this.next()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to a node specified by path or move number.\r\n   */\r\n  goTo(pathOrMoveNumber: Path | number) {\r\n    // TODO: check if there is a better way to do this\r\n    const path = typeof pathOrMoveNumber === 'number' ? { depth: pathOrMoveNumber, forks: [] } : pathOrMoveNumber;\r\n    this.first();\r\n\r\n    for (let i = 0, j = 0; i < path.depth; i++) {\r\n      if (this.currentNode.children.length > 1) {\r\n        this.next(path.forks[j++]);\r\n      } else {\r\n        this.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get path to current node\r\n   */\r\n  getCurrentPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n\r\n    if (this.currentNode) {\r\n      let node = this.currentNode;\r\n\r\n      while (node.parent) {\r\n        path.depth++;\r\n\r\n        if (node.parent.children.length > 1) {\r\n          path.forks.push(node.parent.children.indexOf(node));\r\n        }\r\n\r\n        node = node.parent;\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /**\r\n\t * Go to previous fork (a node with more than one child).\r\n\t */\r\n  previousFork() {\r\n    while (this.previous()) {\r\n      if (this.currentNode.children.length > 1) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a move. New kifu node will be created and move to it\r\n   */\r\n  play(x: number, y: number) {\r\n    const node = new KifuNode();\r\n\r\n    if (this.game.turn === Color.W) {\r\n      node.setProperty(PropIdent.WHITE_MOVE, { x, y });\r\n    } else {\r\n      node.setProperty(PropIdent.BLACK_MOVE, { x, y });\r\n    }\r\n\r\n    const i = this.currentNode.appendChild(node);\r\n    this.next(i);\r\n  }\r\n\r\n  /**\r\n   * Register player's plugin.\r\n   *\r\n   * @param plugin\r\n   */\r\n  use(plugin: PlayerPlugin) {\r\n    if (!plugin || typeof plugin.apply !== 'function') {\r\n      throw new TypeError('Plugin must implement an `apply` method.');\r\n    }\r\n    plugin.apply(this);\r\n    this.plugins.push(plugin);\r\n  }\r\n}\r\n","import { FieldBoardObject } from '../../BoardBase';\r\nimport KifuNode, { Path } from '../../kifu/KifuNode';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport { Color, Point } from '../../types';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerBase from '../PlayerBase';\r\nimport PlayerPlugin from '../PlayerPlugin';\r\n\r\ninterface EditModeConfig {\r\n  /**\r\n   * Set true, if edit mode should be enabled during player initialization.\r\n   * Default value: `false`\r\n   */\r\n  enabled: boolean;\r\n\r\n  /**\r\n   * Set true, to show variation markup during edit mode. This overrides SGF and player config.\r\n   * Default value: `true`\r\n   */\r\n  showVariations: boolean;\r\n}\r\n\r\ninterface GameState {\r\n  rootNode: KifuNode;\r\n  path: Path;\r\n}\r\n\r\nconst defaultEditModeConfig = {\r\n  enabled: false,\r\n  showVariations: true,\r\n};\r\n\r\n/**\r\n * Edit mode plugin. It allows to edit game kifu without changing it - when edit mode is disabled\r\n * all changes are reverted. It provides event `editMode.change` to enable/disable edit mode.\r\n * It contains integration with board via these events:\r\n * - board.updateTemporaryObject\r\n * - board.addTemporaryObject\r\n * - board.removeTemporaryObject\r\n * - board.mouseMove\r\n * - board.mouseOut\r\n * - board.click\r\n */\r\nexport default class EditMode implements PlayerPlugin {\r\n  config: EditModeConfig;\r\n  player: PlayerBase;\r\n\r\n  private gameStateStack: GameState[] = [];\r\n\r\n  private _boardMouseMoveEvent: Function;\r\n  private _boardMouseOutEvent: Function;\r\n  private _boardClickEvent: Function;\r\n  private _nodeChange: Function;\r\n\r\n  constructor(config: PartialRecursive<EditModeConfig> = {}) {\r\n    this.config = makeConfig(defaultEditModeConfig, config);\r\n  }\r\n\r\n  apply(player: PlayerBase) {\r\n    if (this.player) {\r\n      throw new Error('This plugin instance has already been applied to a player object.');\r\n    }\r\n\r\n    this.player = player;\r\n    this.player.on('editMode.change', this.handleChange);\r\n\r\n    if (this.config.enabled) {\r\n      this.enable();\r\n    }\r\n  }\r\n\r\n  /*public destroy() {\r\n    this.player.off('editMode.change', this.handleChange);\r\n  }*/\r\n\r\n  /**\r\n   * Enable/disable edit mode. Event `editMode.change` is triggered.\r\n   *\r\n   * @param value\r\n   */\r\n  setEnabled(value: boolean) {\r\n    if (value !== this.config.enabled) {\r\n      this.player.emit('editMode.change', value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play move if edit mode is enabled. This move will be discarded, when edit mode is disabled.\r\n   *\r\n   * @param point\r\n   */\r\n  play(point: Point) {\r\n    if (!this.config.enabled) {\r\n      return;\r\n    }\r\n\r\n    // check, whether some of the next node contains this move\r\n    for (let i = 0; i < this.player.currentNode.children.length; i++) {\r\n      const childNode = this.player.currentNode.children[i];\r\n      const move = childNode.getProperty('B') || childNode.getProperty('W');\r\n      if (move.x === point.x && move.y === point.y) {\r\n        this.player.next(i);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // otherwise play if valid\r\n    if (this.player.game.isValid(point.x, point.y)) {\r\n      this.player.play(point.x, point.y);\r\n    }\r\n  }\r\n\r\n  private handleChange = (value: boolean) => {\r\n    if (value && !this.config.enabled) {\r\n      this.enable();\r\n    } else if (!value && this.config.enabled) {\r\n      this.disable();\r\n    }\r\n  }\r\n\r\n  private enable() {\r\n    this.saveGameState();\r\n    if (this.config.showVariations) {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 0);\r\n    } else {\r\n      this.player.rootNode.setProperty(PropIdent.VARIATIONS_STYLE, 2);\r\n    }\r\n    this.config.enabled = true;\r\n\r\n    let lastX = -1;\r\n    let lastY = -1;\r\n\r\n    const blackStone = new FieldBoardObject('B');\r\n    blackStone.opacity = 0.35;\r\n\r\n    const whiteStone = new FieldBoardObject('W');\r\n    whiteStone.opacity = 0.35;\r\n\r\n    let addedStone: FieldBoardObject = null;\r\n\r\n    this._boardMouseMoveEvent = (p: Point) => {\r\n      if (lastX !== p.x || lastY !== p.y) {\r\n        if (this.player.game.isValid(p.x, p.y)) {\r\n          const boardObject = this.player.game.turn === Color.BLACK ? blackStone : whiteStone;\r\n          boardObject.setPosition(p.x, p.y);\r\n\r\n          if (addedStone) {\r\n            this.player.emit('board.updateTemporaryObject', boardObject);\r\n          } else {\r\n            this.player.emit('board.addTemporaryObject', boardObject);\r\n            addedStone = boardObject;\r\n          }\r\n\r\n        } else {\r\n          this._boardMouseOutEvent();\r\n        }\r\n        lastX = p.x;\r\n        lastY = p.y;\r\n      }\r\n    };\r\n\r\n    this._boardMouseOutEvent = () => {\r\n      if (addedStone) {\r\n        this.player.emit('board.removeTemporaryObject', addedStone);\r\n        addedStone = null;\r\n      }\r\n      lastX = -1;\r\n      lastY = -1;\r\n    };\r\n\r\n    this._boardClickEvent = (p: Point) => {\r\n      this._boardMouseOutEvent();\r\n\r\n      if (p == null) {\r\n        return;\r\n      }\r\n\r\n      this.play(p);\r\n    };\r\n\r\n    this._nodeChange = () => {\r\n      const current = { x: lastX, y: lastY };\r\n      this._boardMouseOutEvent();\r\n      this._boardMouseMoveEvent(current);\r\n    };\r\n\r\n    this.player.on('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.on('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.on('board.click', this._boardClickEvent);\r\n\r\n    this.player.on('applyNodeChanges', this._nodeChange);\r\n  }\r\n\r\n  private disable() {\r\n    this.player.off('board.mouseMove', this._boardMouseMoveEvent);\r\n    this.player.off('board.mouseOut', this._boardMouseOutEvent);\r\n    this.player.off('board.click', this._boardClickEvent);\r\n\r\n    this.player.off('applyNodeChanges', this._nodeChange);\r\n\r\n    this.config.enabled = false;\r\n    this.restoreGameState();\r\n  }\r\n\r\n  /**\r\n   * Saves current player game state - Kifu and path object.\r\n   */\r\n  private saveGameState() {\r\n    this.gameStateStack.push({\r\n      rootNode: this.player.rootNode.cloneNode(),\r\n      path: this.player.getCurrentPath(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restores player from previously saved state.\r\n   */\r\n  private restoreGameState() {\r\n    const lastState = this.gameStateStack.pop();\r\n    if (lastState) {\r\n      // revert all node changes\r\n      this.player.first();\r\n\r\n      // load stored kifu\r\n      this.player.loadKifu(lastState.rootNode);\r\n\r\n      // go to stored path\r\n      this.player.goTo(lastState.path);\r\n    }\r\n  }\r\n}\r\n","import { PlayerBase } from '../PlayerBase';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport PlayerDOMComponent from './components/PlayerDOMComponent';\r\n\r\nexport interface PlayerDOMConfig {\r\n  enableMouseWheel: boolean;\r\n  enableKeys: boolean;\r\n  fastReplay: number;\r\n}\r\n\r\nexport const playerDOMDefaultConfig = {\r\n  enableMouseWheel: true,\r\n  enableKeys: true,\r\n  fastReplay: 2000,\r\n};\r\n\r\n/**\r\n * Player with support to render visual elements into the DOM.\r\n */\r\nexport default class PlayerDOM extends PlayerBase {\r\n  config: PlayerDOMConfig;\r\n  components: Map<HTMLElement, PlayerDOMComponent> = new Map();\r\n  fastReplayTimeout: number;\r\n  fastReplayEnabled = false;\r\n\r\n  constructor(config: PartialRecursive<PlayerDOMConfig> = {}) {\r\n    super();\r\n    this.config = makeConfig(playerDOMDefaultConfig, config);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    document.addEventListener('keydown', this.handleKeydown);\r\n    document.addEventListener('keyup', this.handleKeyup);\r\n  }\r\n\r\n  /**\r\n   * Renders PlayerDOM component into specified HTML element. If there is content inside that element\r\n   * it will be removed. Render method can be called multiple times - this allows to have player's component\r\n   * anywhere you want.\r\n   *\r\n   * @param component\r\n   * @param container\r\n   */\r\n  render(component: PlayerDOMComponent, container: HTMLElement) {\r\n    // clear content of the container\r\n    container.innerHTML = '';\r\n\r\n    // creates wrapper\r\n    const wrapper = this.createWrapper();\r\n    container.appendChild(wrapper);\r\n\r\n    // creates the component HTML element\r\n    wrapper.appendChild(component.element);\r\n    component.create(this);\r\n\r\n    this.components.set(container, component);\r\n  }\r\n\r\n  /**\r\n   * Removes component rendered via `render` method. Call this to clean event listeners of the component.\r\n   *\r\n   * @param container\r\n   */\r\n  clear(container: HTMLElement) {\r\n    const component = this.components.get(container);\r\n\r\n    if (component && typeof component.destroy === 'function') {\r\n      component.destroy();\r\n    }\r\n\r\n    const wrapper = container.firstChild as HTMLDivElement;\r\n    wrapper.removeEventListener('wheel', this.handleMouseWheel);\r\n    container.removeChild(wrapper);\r\n\r\n    this.components.delete(container);\r\n  }\r\n\r\n  private createWrapper() {\r\n    const element = document.createElement('div');\r\n    element.className = 'wgo-player';\r\n    element.tabIndex = 1;\r\n\r\n    element.addEventListener('wheel', this.handleMouseWheel);\r\n\r\n    return element;\r\n  }\r\n\r\n  private handleResize = () => {\r\n    this.emit('resize');\r\n  }\r\n\r\n  private handleMouseWheel = (e: WheelEvent) => {\r\n    if (this.config.enableMouseWheel) {\r\n      if (e.deltaY > 0) {\r\n        this.next();\r\n      } else if (e.deltaY < 0) {\r\n        this.previous();\r\n      }\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  private handleKeydown = (e: KeyboardEvent) => {\r\n    if (this.config.enableKeys && this.hasFocus()) {\r\n      if (this.config.fastReplay >= 0 && !this.fastReplayTimeout) {\r\n        this.fastReplayTimeout = window.setTimeout(() => {\r\n          this.fastReplayEnabled = true;\r\n        }, this.config.fastReplay);\r\n      }\r\n\r\n      if (e.key === 'ArrowRight') {\r\n        this.next();\r\n        if (this.fastReplayEnabled) {\r\n          this.next();\r\n          this.next();\r\n        }\r\n      } else if (e.key === 'ArrowLeft') {\r\n        this.previous();\r\n        if (this.fastReplayEnabled) {\r\n          this.previous();\r\n          this.previous();\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private handleKeyup = () => {\r\n    window.clearTimeout(this.fastReplayTimeout);\r\n    this.fastReplayTimeout = null;\r\n    this.fastReplayEnabled = false;\r\n  }\r\n\r\n  private hasFocus() {\r\n    for (const elem of this.components.keys()) {\r\n      if (elem.firstChild === document.activeElement) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport default class Container implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  children: PlayerDOMComponent[];\r\n  direction: string;\r\n\r\n  constructor(direction: string, children: PlayerDOMComponent[] = []) {\r\n    this.direction = direction;\r\n    this.children = children;\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = `wgo-player__container wgo-player__container--${this.direction}`;\r\n    this.children.forEach(child => this.element.appendChild(child.element));\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.children.forEach(child => child.create(player));\r\n  }\r\n\r\n  destroy() {\r\n    this.children.forEach(child => typeof child.destroy === 'function' && child.destroy());\r\n  }\r\n}\r\n","import { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface GameInfoBoxConfig {\r\n  gameInfoProperties: { [key: string]: string };\r\n  hideResult: boolean;\r\n}\r\n\r\nexport const gameInfoBoxDefaultConfig = {\r\n  gameInfoProperties: {\r\n    DT: 'Date',\r\n    KM: 'Komi',\r\n    HA: 'Handicap',\r\n    AN: 'Annotations',\r\n    CP: 'Copyright',\r\n    GC: 'Game comments',\r\n    GN: 'Game name',\r\n    ON: 'Fuseki',\r\n    OT: 'Overtime',\r\n    TM: 'Basic time',\r\n    RE: 'Result',\r\n    RO: 'Round',\r\n    RU: 'Rules',\r\n    US: 'Recorder',\r\n    PC: 'Place',\r\n    EV: 'Event',\r\n    SO: 'Source',\r\n  },\r\n  hideResult: true,\r\n};\r\n\r\nexport default class GameInfoBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  infoTable: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: GameInfoBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<GameInfoBoxConfig> = {}) {\r\n    this.config = makeConfig(gameInfoBoxDefaultConfig, config);\r\n    this.printInfo = this.printInfo.bind(this);\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content';\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Game information';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    const tableWrapper = document.createElement('div');\r\n    tableWrapper.className = 'wgo-player__box__content';\r\n    this.element.appendChild(tableWrapper);\r\n\r\n    this.infoTable = document.createElement('table');\r\n    this.infoTable.className = 'wgo-player__box__game-info';\r\n    tableWrapper.appendChild(this.infoTable);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('beforeInit', this.printInfo);\r\n    this.printInfo();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('beforeInit', this.printInfo);\r\n    this.player = null;\r\n  }\r\n\r\n  addInfo(propIdent: string, value: string, hide: boolean) {\r\n    const row = document.createElement('tr');\r\n    row.dataset.propIdent = propIdent;\r\n    this.infoTable.appendChild(row);\r\n\r\n    const label = document.createElement('th');\r\n    label.textContent = this.config.gameInfoProperties[propIdent];\r\n    row.appendChild(label);\r\n\r\n    const valueElement = document.createElement('td');\r\n    if (hide) {\r\n      const link = document.createElement('a');\r\n      link.href = '#';\r\n      link.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        valueElement.textContent = value;\r\n      });\r\n      link.textContent = 'show';\r\n      valueElement.appendChild(link);\r\n    } else {\r\n      valueElement.textContent = value;\r\n    }\r\n    row.appendChild(valueElement);\r\n  }\r\n\r\n  removeInfo(propIdent: string) {\r\n    const elem = this.infoTable.querySelector(`[data-id='${propIdent}']`);\r\n    this.infoTable.removeChild(elem);\r\n  }\r\n\r\n  printInfo() {\r\n    this.infoTable.innerHTML = '';\r\n    if (this.player.rootNode) {\r\n      this.player.rootNode.forEachProperty((propIdent, value) => {\r\n        if (this.config.gameInfoProperties[propIdent]) {\r\n          this.addInfo(propIdent, value, this.config.hideResult && propIdent === PropIdent.RESULT);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { SVGBoardComponent } from '.';\r\nimport { PlayerBase } from '../../PlayerBase';\r\nimport { EditMode } from '../../PlayerBase/plugins';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport GameInfoBox from './GameInfoBox';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface MenuItem {\r\n  /** Title of the menu item. */\r\n  name: string;\r\n\r\n  /** If true, there can be check state of the menu item. */\r\n  checkable?: boolean;\r\n\r\n  /** Function executed upon click. If checkable, should return new check state. */\r\n  handleClick(): boolean | void;\r\n\r\n  /** If checkable, function which return initial check state. */\r\n  defaultChecked?(): boolean;\r\n}\r\n\r\ninterface ControlPanelConfig {\r\n  menuItems: MenuItem[];\r\n}\r\n\r\nconst defaultConfig: ControlPanelConfig = {\r\n  menuItems: [],\r\n};\r\n\r\nexport default class ControlPanel implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  moveNumber: HTMLInputElement;\r\n  first: HTMLButtonElement;\r\n  previous: HTMLButtonElement;\r\n  next: HTMLButtonElement;\r\n  last: HTMLButtonElement;\r\n  config: ControlPanelConfig;\r\n\r\n  constructor(config: PartialRecursive<ControlPanelConfig> = {}) {\r\n    this.config = makeConfig(defaultConfig, config);\r\n    this.update = this.update.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__control-panel';\r\n\r\n    const buttonGroup = document.createElement('form');\r\n    buttonGroup.className = 'wgo-player__button-group';\r\n    this.element.appendChild(buttonGroup);\r\n    buttonGroup.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n\r\n    this.first = document.createElement('button');\r\n    this.first.type = 'button';\r\n    this.first.className = 'wgo-player__button';\r\n    this.first.innerHTML = '<span class=\"wgo-player__icon-to-end wgo-player__icon--reverse\"></span>';\r\n    this.first.addEventListener('click', () => this.player.first());\r\n    buttonGroup.appendChild(this.first);\r\n\r\n    this.previous = document.createElement('button');\r\n    this.previous.type = 'button';\r\n    this.previous.className = 'wgo-player__button';\r\n    this.previous.innerHTML = '<span class=\"wgo-player__icon-play wgo-player__icon--reverse\"></span>';\r\n    this.previous.addEventListener('click', () => this.player.previous());\r\n    buttonGroup.appendChild(this.previous);\r\n\r\n    this.moveNumber = document.createElement('input');\r\n    this.moveNumber.className = 'wgo-player__button wgo-player__move-number';\r\n    this.moveNumber.value = '0';\r\n    this.moveNumber.addEventListener('blur', (e) => {\r\n      this.player.goTo(parseInt(this.moveNumber.value, 10));\r\n    });\r\n    buttonGroup.appendChild(this.moveNumber);\r\n\r\n    this.next = document.createElement('button');\r\n    this.next.type = 'button';\r\n    this.next.className = 'wgo-player__button';\r\n    this.next.innerHTML = '<span class=\"wgo-player__icon-play\"></span>';\r\n    this.next.addEventListener('click', () => this.player.next());\r\n    buttonGroup.appendChild(this.next);\r\n\r\n    this.last = document.createElement('button');\r\n    this.last.type = 'button';\r\n    this.last.className = 'wgo-player__button';\r\n    this.last.innerHTML = '<span class=\"wgo-player__icon-to-end\"></span>';\r\n    this.last.addEventListener('click', () => this.player.last());\r\n    buttonGroup.appendChild(this.last);\r\n\r\n    if (this.config.menuItems.length) {\r\n      const menuWrapper = document.createElement('div');\r\n      menuWrapper.className = 'wgo-player__menu-wrapper';\r\n      this.element.appendChild(menuWrapper);\r\n\r\n      const menuButton = document.createElement('button');\r\n      menuButton.type = 'button';\r\n      menuButton.className = 'wgo-player__button wgo-player__button--menu';\r\n      menuButton.innerHTML = '<span class=\"wgo-player__icon-menu\"></span>';\r\n      menuWrapper.appendChild(menuButton);\r\n\r\n      const menu = document.createElement('div');\r\n      menu.className = 'wgo-player__menu';\r\n      this.createMenuItems(menu);\r\n      menuWrapper.appendChild(menu);\r\n    }\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('applyNodeChanges', this.update);\r\n\r\n    if (this.player.currentNode) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.update);\r\n    this.player = null;\r\n  }\r\n\r\n  update() {\r\n    this.moveNumber.value = String(this.player.getCurrentPath().depth);\r\n\r\n    if (!this.player.currentNode.parent) {\r\n      this.first.disabled = true;\r\n      this.previous.disabled = true;\r\n    } else {\r\n      this.first.disabled = false;\r\n      this.previous.disabled = false;\r\n    }\r\n\r\n    if (this.player.currentNode.children.length === 0) {\r\n      this.next.disabled = true;\r\n      this.last.disabled = true;\r\n    } else {\r\n      this.next.disabled = false;\r\n      this.last.disabled = false;\r\n    }\r\n  }\r\n\r\n  createMenuItems(menu: HTMLElement) {\r\n    this.config.menuItems.forEach((menuItem) => {\r\n      const menuItemElement = document.createElement('a');\r\n      menuItemElement.className = 'wgo-player__menu-item';\r\n      menuItemElement.tabIndex = 0;\r\n      menuItemElement.textContent = menuItem.name;\r\n      menuItemElement.href = 'javascript: void(0)';\r\n\r\n      if (menuItem.defaultChecked && menuItem.defaultChecked()) {\r\n        menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n      }\r\n\r\n      menuItemElement.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        const res = menuItem.handleClick();\r\n\r\n        if (menuItem.checkable) {\r\n          if (!res) {\r\n            menuItemElement.classList.remove('wgo-player__menu-item--checked');\r\n          } else {\r\n            menuItemElement.classList.add('wgo-player__menu-item--checked');\r\n          }\r\n        }\r\n\r\n        menuItemElement.blur();\r\n      });\r\n\r\n      menu.appendChild(menuItemElement);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Some common menu items, probably just temporary.\r\n   */\r\n  static menuItems = {\r\n    /** Renders menu item with SGF download link */\r\n    download: (player: PlayerBase) => ({\r\n      name: 'Download SGF',\r\n      handleClick() {\r\n        const name = player.rootNode.getProperty(PropIdent.GAME_NAME) || 'game';\r\n        const sgf = player.rootNode.toSGF();\r\n\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', `data:application/x-go-sgf;charset=utf-8,${encodeURIComponent(sgf)}`);\r\n        element.setAttribute('download', `${name}.sgf`);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n      },\r\n    }),\r\n\r\n    /** Renders menu item to toggle coordinates of SVGBoardComponent */\r\n    displayCoordinates: (boardComponent: SVGBoardComponent) => ({\r\n      name: 'Display coordinates',\r\n      checkable: true,\r\n      handleClick() {\r\n        boardComponent.setCoordinates(!boardComponent.config.coordinates);\r\n        return boardComponent.config.coordinates;\r\n      },\r\n      defaultChecked: () => boardComponent.config.coordinates,\r\n    }),\r\n\r\n    /** Renders menu item to toggle edit mode (using EditMode plugin) */\r\n    editMode: (editMode: EditMode) => ({\r\n      name: 'Edit mode',\r\n      checkable: true,\r\n      handleClick() {\r\n        editMode.setEnabled(!editMode.config.enabled);\r\n        return editMode.config.enabled;\r\n      },\r\n      defaultChecked: () => editMode.config.enabled,\r\n    }),\r\n\r\n    gameInfo: (player: PlayerDOM, callback: (modalWrapper: HTMLElement) => void) => ({\r\n      name: 'Game info',\r\n      handleClick() {\r\n        const overlay = document.createElement('div');\r\n        overlay.className = 'wgo-player__overlay';\r\n\r\n        const overlayClose = document.createElement('div');\r\n        overlayClose.className = 'wgo-player__overlay__close';\r\n        overlayClose.addEventListener('click', () => {\r\n          overlay.parentElement.removeChild(overlay);\r\n          gameInfo.destroy();\r\n        });\r\n        overlay.appendChild(overlayClose);\r\n\r\n        const modal = document.createElement('div');\r\n        modal.className = 'wgo-player__modal';\r\n        overlay.appendChild(modal);\r\n\r\n        const modalContent = document.createElement('div');\r\n        modalContent.className = 'wgo-player__modal__content';\r\n        modal.appendChild(modalContent);\r\n\r\n        const gameInfo = new GameInfoBox({\r\n          hideResult: false,\r\n        });\r\n        gameInfo.create(player);\r\n        modalContent.appendChild(gameInfo.element);\r\n\r\n        const wgoInfo = document.createElement('div');\r\n        wgoInfo.className = 'wgo-player__wgo-info';\r\n        // tslint:disable-next-line:max-line-length\r\n        wgoInfo.innerHTML = 'Game viewed in open source JS player <a href=\"https://github.com/waltheri/wgo.js\" target=\"_blank\">WGo</a>.';\r\n        modalContent.appendChild(wgoInfo);\r\n\r\n        callback(overlay);\r\n      },\r\n    }),\r\n  };\r\n}\r\n","import { FieldBoardObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomFieldBoardObject extends FieldBoardObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n\r\n  constructor(handler: SVGDrawHandler, x = 0, y = 0) {\r\n    super('custom', x, y);\r\n    this.handler = handler;\r\n  }\r\n}\r\n","import { LabelBoardObject } from '../BoardBase';\r\nimport { SVGDrawHandler, SVGCustomObject } from './types';\r\n\r\nexport default class SVGCustomLabelBoardObject extends LabelBoardObject implements SVGCustomObject {\r\n  handler: SVGDrawHandler;\r\n}\r\n","import { SVGBoard } from '../../SVGBoard';\r\nimport {\r\n  FieldBoardObject,\r\n  LabelBoardObject,\r\n  MarkupBoardObject,\r\n  BoardObject,\r\n  LineBoardObject,\r\n  BoardViewport,\r\n} from '../../BoardBase';\r\nimport { Color, Point, Label, Vector } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport { SVGBoardObject, SVGDrawHandler, SVGBoardTheme } from '../../SVGBoard/types';\r\nimport SVGCustomFieldBoardObject from '../../SVGBoard/SVGCustomFieldBoardObject';\r\nimport SVGCustomLabelBoardObject from '../../SVGBoard/SVGCustomLabelBoardObject';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport { Circle, Label as SVGLabel } from '../../SVGBoard/svgDrawHandlers';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport { PropIdent } from '../../SGFParser/sgfTypes';\r\n\r\nconst colorsMap: { [key: string]: Color } = {\r\n  B: Color.BLACK,\r\n  W: Color.WHITE,\r\n};\r\n\r\nexport interface SVGBoardComponentConfig {\r\n  coordinates: boolean;\r\n  currentMoveBlackMark: SVGDrawHandler;\r\n  currentMoveWhiteMark: SVGDrawHandler;\r\n  variationDrawHandler: SVGDrawHandler;\r\n  highlightCurrentMove: boolean;\r\n  showVariations: boolean;\r\n  showCurrentVariations: boolean;\r\n  theme?: PartialRecursive<SVGBoardTheme>;\r\n}\r\n\r\nexport const defaultSVGBoardComponentConfig: SVGBoardComponentConfig = {\r\n  coordinates: true,\r\n  currentMoveBlackMark: new Circle({ color: 'rgba(255,255,255,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  currentMoveWhiteMark: new Circle({ color: 'rgba(0,0,0,0.8)', fillColor:'rgba(0,0,0,0)' }),\r\n  variationDrawHandler: new SVGLabel({ color: '#33f' }),\r\n  highlightCurrentMove: true,\r\n  showVariations: true,\r\n  showCurrentVariations: false,\r\n};\r\n\r\nexport default class SVGBoardComponent implements PlayerDOMComponent {\r\n  // Underlying SVG board object\r\n  board: SVGBoard;\r\n  config: SVGBoardComponentConfig;\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n\r\n  // Current board objects for stones - should match the position object of the game\r\n  stoneBoardsObjects: FieldBoardObject[];\r\n\r\n  // Temporary board object, will be removed after each node update\r\n  temporaryBoardObjects: SVGBoardObject[];\r\n\r\n  // Board viewport stack, for efficient reverting of board viewport\r\n  viewportStack: BoardViewport[];\r\n\r\n  boardMouseX: number;\r\n  boardMouseY: number;\r\n\r\n  constructor(config: PartialRecursive<SVGBoardComponentConfig> = {}) {\r\n    this.config = makeConfig(defaultSVGBoardComponentConfig, config);\r\n    this.viewportStack = [];\r\n\r\n    this.applyNodeChanges = this.applyNodeChanges.bind(this);\r\n    this.clearNodeChanges = this.clearNodeChanges.bind(this);\r\n    this.applyMarkupProperty = this.applyMarkupProperty.bind(this);\r\n    this.applyLabelMarkupProperty = this.applyLabelMarkupProperty.bind(this);\r\n    this.applyLineMarkupProperty = this.applyLineMarkupProperty.bind(this);\r\n    this.applyViewportProperty = this.applyViewportProperty.bind(this);\r\n    this.clearViewportProperty = this.clearViewportProperty.bind(this);\r\n    this.applyMoveProperty = this.applyMoveProperty.bind(this);\r\n    this.addTemporaryBoardObject = this.addTemporaryBoardObject.bind(this);\r\n    this.removeTemporaryBoardObject = this.removeTemporaryBoardObject.bind(this);\r\n    this.updateTemporaryBoardObject = this.updateTemporaryBoardObject.bind(this);\r\n    this.setCoordinates = this.setCoordinates.bind(this);\r\n\r\n    this.createDOM();\r\n  }\r\n\r\n  createDOM() {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__board';\r\n\r\n    this.stoneBoardsObjects = [];\r\n    this.temporaryBoardObjects = [];\r\n\r\n    this.board = new SVGBoard(this.element, {\r\n      coordinates: this.config.coordinates,\r\n      theme: this.config.theme,\r\n    });\r\n\r\n    this.board.on('click', (event, point) => {\r\n      this.handleBoardClick(point);\r\n    });\r\n\r\n    this.board.on('mousemove', (event, point) => {\r\n      if (!point) {\r\n        if (this.boardMouseX != null) {\r\n          this.boardMouseX = null;\r\n          this.boardMouseY = null;\r\n          this.handleBoardMouseOut();\r\n        }\r\n        return;\r\n      }\r\n      if (point.x !== this.boardMouseX || point.y !== this.boardMouseY) {\r\n        this.boardMouseX = point.x;\r\n        this.boardMouseY = point.y;\r\n        this.handleBoardMouseMove(point);\r\n      }\r\n    });\r\n\r\n    this.board.on('mouseout', (event, point) => {\r\n      if (!point && this.boardMouseX != null) {\r\n        this.boardMouseX = null;\r\n        this.boardMouseY = null;\r\n        this.handleBoardMouseOut();\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // add general node listeners - for setting stones on board based on position\r\n    this.player.on('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.on('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    // temporary board markup listeners - add\r\n    this.player.on('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.DD', this.applyMarkupProperty);\r\n    this.player.on('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.on('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.on('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    // viewport SGF property listeners\r\n    this.player.on('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.on('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    // add current move marker\r\n    this.player.on('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.on('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.on('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.on('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.on('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.on('board.setCoordinates', this.setCoordinates);\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges', this.applyNodeChanges);\r\n    this.player.off('clearNodeChanges', this.clearNodeChanges);\r\n\r\n    this.player.off('applyNodeChanges.CR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.TR', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SQ', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.SL', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.MA', this.applyMarkupProperty);\r\n    this.player.off('applyNodeChanges.DD', this.applyMarkupProperty);\r\n\r\n    this.player.off('applyNodeChanges.LB', this.applyLabelMarkupProperty);\r\n    this.player.off('applyNodeChanges.LN', this.applyLineMarkupProperty);\r\n    this.player.off('applyNodeChanges.AR', this.applyLineMarkupProperty);\r\n\r\n    this.player.off('applyGameChanges.VW', this.applyViewportProperty);\r\n    this.player.off('clearGameChanges.VW', this.clearViewportProperty);\r\n\r\n    this.player.off('applyNodeChanges.B', this.applyMoveProperty);\r\n    this.player.off('applyNodeChanges.W', this.applyMoveProperty);\r\n\r\n    this.player.off('board.addTemporaryObject', this.addTemporaryBoardObject);\r\n    this.player.off('board.removeTemporaryObject', this.removeTemporaryBoardObject);\r\n    this.player.off('board.updateTemporaryObject', this.updateTemporaryBoardObject);\r\n    this.player.off('board.setCoordinates', this.setCoordinates);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  protected updateStones() {\r\n    // Remove missing stones in current position\r\n    this.stoneBoardsObjects = this.stoneBoardsObjects.filter((boardObject) => {\r\n      if (this.player.game.getStone(boardObject.x, boardObject.y) !== colorsMap[boardObject.type as string]) {\r\n        this.board.removeObject(boardObject);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    // Add new stones from current position\r\n    const position = this.player.game.position;\r\n\r\n    for (let x = 0; x < position.size; x++) {\r\n      for (let y = 0; y < position.size; y++) {\r\n        const c = position.get(x, y);\r\n        if (c && !this.stoneBoardsObjects.some(\r\n          boardObject => boardObject.x === x && boardObject.y === y && c === colorsMap[boardObject.type as string],\r\n        )) {\r\n          const boardObject = new FieldBoardObject(c === Color.B ? 'B' : 'W', x, y);\r\n          this.board.addObject(boardObject);\r\n          this.stoneBoardsObjects.push(boardObject);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected addVariationMarkup() {\r\n    const moves = this.getVariations();\r\n\r\n    if (moves.length > 1) {\r\n      moves.forEach((move, i) => {\r\n        if (move) {\r\n          const obj = new SVGCustomLabelBoardObject(String.fromCodePoint(65 + i), move.x, move.y);\r\n          obj.handler = this.config.variationDrawHandler;\r\n          this.addTemporaryBoardObject(obj);\r\n        }\r\n      });\r\n      if (this.boardMouseX != null) {\r\n        this.handleVariationCursor(this.boardMouseX, this.boardMouseY, moves);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected clearTemporaryBoardObjects() {\r\n    if (this.temporaryBoardObjects.length) {\r\n      this.board.removeObject(this.temporaryBoardObjects);\r\n      this.temporaryBoardObjects = [];\r\n    }\r\n  }\r\n\r\n  protected handleBoardClick(point: Point) {\r\n    this.player.emit('board.click', point);\r\n\r\n    const moves = this.getVariations();\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === point.x && move.y === point.y);\r\n\r\n      if (ind >= 0) {\r\n        if (this.shouldShowCurrentVariations()) {\r\n          this.player.previous();\r\n          this.player.next(ind);\r\n        } else {\r\n          this.player.next(ind);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected handleBoardMouseMove(point: Point) {\r\n    this.player.emit('board.mouseMove', point);\r\n    this.handleVariationCursor(point.x, point.y, this.getVariations());\r\n  }\r\n\r\n  protected handleBoardMouseOut() {\r\n    this.player.emit('board.mouseOut');\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private handleVariationCursor(x: number, y: number, moves: Point[]) {\r\n    if (moves.length > 1) {\r\n      const ind = moves.findIndex(move => move && move.x === x && move.y === y);\r\n\r\n      if (ind >= 0) {\r\n        this.element.style.cursor = 'pointer';\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private removeVariationCursor() {\r\n    if (this.element.style.cursor) {\r\n      this.element.style.cursor = '';\r\n    }\r\n  }\r\n\r\n  private applyNodeChanges() {\r\n    this.updateStones();\r\n    this.addVariationMarkup();\r\n  }\r\n\r\n  private clearNodeChanges() {\r\n    this.clearTemporaryBoardObjects();\r\n    this.removeVariationCursor();\r\n  }\r\n\r\n  private applyMarkupProperty(event: LifeCycleEvent<Point[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new MarkupBoardObject(\r\n        event.propIdent,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLabelMarkupProperty(event: LifeCycleEvent<Label[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new LabelBoardObject(\r\n        value.text,\r\n        value.x,\r\n        value.y,\r\n        this.player.game.getStone(value.x, value.y),\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyLineMarkupProperty(event: LifeCycleEvent<Vector[]>) {\r\n    event.value.forEach((value) => {\r\n      // add markup\r\n      const boardMarkup = new LineBoardObject(event.propIdent, value[0], value[1]);\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    });\r\n  }\r\n\r\n  private applyViewportProperty(event: LifeCycleEvent<Vector>) {\r\n    const currentViewport = this.board.getViewport();\r\n    this.viewportStack.push(currentViewport);\r\n\r\n    if (event.value) {\r\n      const minX = Math.min(event.value[0].x, event.value[1].x);\r\n      const minY = Math.min(event.value[0].y, event.value[1].y);\r\n      const maxX = Math.max(event.value[0].x, event.value[1].x);\r\n      const maxY = Math.max(event.value[0].y, event.value[1].y);\r\n\r\n      this.board.setViewport({\r\n        left: minX,\r\n        top: minY,\r\n        right: this.board.getSize() - maxX - 1,\r\n        bottom: this.board.getSize() - maxY - 1,\r\n      });\r\n    } else {\r\n      this.board.setViewport({\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  private clearViewportProperty() {\r\n    const previousViewport = this.viewportStack.pop();\r\n    if (previousViewport) {\r\n      this.board.setViewport(previousViewport);\r\n    }\r\n  }\r\n\r\n  private applyMoveProperty(event: LifeCycleEvent<Point>) {\r\n    if (this.config.highlightCurrentMove) {\r\n      if (!event.value) {\r\n        // no markup when pass\r\n        return;\r\n      }\r\n      if (isThereMarkup(event.value, this.player.currentNode.properties)) {\r\n        // don't show current move markup, when there is markup in kifu node\r\n        return;\r\n      }\r\n\r\n      if (this.getVariations().length > 1 && this.shouldShowCurrentVariations()) {\r\n        // don't show current move markup, if there is multiple variations and \"show current variations\" style set\r\n        return;\r\n      }\r\n\r\n      // add current move mark\r\n      const boardMarkup = new SVGCustomFieldBoardObject(\r\n        event.propIdent === 'B' ? this.config.currentMoveBlackMark : this.config.currentMoveWhiteMark,\r\n        event.value.x,\r\n        event.value.y,\r\n      );\r\n      boardMarkup.zIndex = 10;\r\n      this.addTemporaryBoardObject(boardMarkup);\r\n    }\r\n  }\r\n\r\n  addTemporaryBoardObject(obj: BoardObject) {\r\n    this.temporaryBoardObjects.push(obj);\r\n    this.board.addObject(obj);\r\n  }\r\n\r\n  removeTemporaryBoardObject(obj: FieldBoardObject) {\r\n    this.temporaryBoardObjects = this.temporaryBoardObjects.filter(o => o !== obj);\r\n    this.board.removeObject(obj);\r\n  }\r\n\r\n  updateTemporaryBoardObject(obj: FieldBoardObject) {\r\n    this.board.updateObject(obj);\r\n  }\r\n\r\n  setCoordinates(b: boolean) {\r\n    this.config.coordinates = b;\r\n    this.board.setCoordinates(b);\r\n  }\r\n\r\n  getVariations(): Point[] {\r\n    if (this.shouldShowVariations()) {\r\n      if (this.shouldShowCurrentVariations()) {\r\n        if (this.player.currentNode.parent) {\r\n          return this.player.currentNode.parent.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n        }\r\n      } else {\r\n        return this.player.currentNode.children.map(node => node.getProperty('B') || node.getProperty('W'));\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  shouldShowVariations() {\r\n    // look in kifu, whether to show variation markup\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !(st & 2);\r\n    }\r\n\r\n    // otherwise use configuration value\r\n    return this.config.showVariations;\r\n  }\r\n\r\n  shouldShowCurrentVariations() {\r\n    // in edit mode not possible\r\n    // if (this.editMode) {\r\n    //   return false;\r\n    // }\r\n\r\n    // look at variation style in kifu\r\n    const st = this.player.rootNode.getProperty(PropIdent.VARIATIONS_STYLE);\r\n    if (st != null) {\r\n      return !!(st & 1);\r\n    }\r\n\r\n    // or use variation style from configuration\r\n    return this.config.showCurrentVariations;\r\n  }\r\n}\r\n\r\nfunction samePoint(p1: Point, p2: any) {\r\n  return p2 && p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\nfunction isThereMarkup(field: Point, properties: { [key: string]: any }) {\r\n  const propIdents = Object.keys(properties);\r\n\r\n  for (let i = 0; i < propIdents.length; i++) {\r\n    if (propIdents[i] === 'B' || propIdents[i] === 'W') {\r\n      continue;\r\n    }\r\n\r\n    const value = properties[propIdents[i]];\r\n    if (Array.isArray(value)) {\r\n      for (let j = 0; j < value.length; j++) {\r\n        if (samePoint(field, value[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    } else if (samePoint(field, value)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","import PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\ninterface ResponsiveComponentParams {\r\n  minWidth?: number;\r\n  maxWidth?: number;\r\n  minHeight?: number;\r\n  maxHeight?: number;\r\n  orientation?: 'portrait' | 'landscape';\r\n}\r\n\r\nexport default class ResponsiveComponent implements PlayerDOMComponent {\r\n  element: Node;\r\n  player: PlayerDOM;\r\n  visible: boolean;\r\n\r\n  constructor(private params: ResponsiveComponentParams, private component: PlayerDOMComponent) {\r\n    this.resize = this.resize.bind(this);\r\n    this.visible = true;\r\n    this.element = this.component.element;\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n    this.player.on('resize', this.resize);\r\n    this.component.create(this.player);\r\n\r\n    this.resize();\r\n  }\r\n\r\n  resize() {\r\n    const shouldRenderComponent = this.shouldRenderComponent();\r\n\r\n    if (this.visible && !shouldRenderComponent) {\r\n      // replace component element by placeholder\r\n      const placeholder = this.createPlaceholder();\r\n      this.element.parentElement.replaceChild(placeholder, this.element);\r\n      this.element = placeholder;\r\n      this.visible = false;\r\n    } else if (!this.visible && shouldRenderComponent) {\r\n      // replaces placeholder by component element\r\n      const componentElement = this.component.element;\r\n      this.element.parentElement.replaceChild(componentElement, this.element);\r\n      this.element = componentElement;\r\n      this.visible = true;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('resize', this.resize);\r\n    this.player = null;\r\n\r\n    if (typeof this.component.destroy === 'function') {\r\n      this.component.destroy();\r\n    }\r\n  }\r\n\r\n  private shouldRenderComponent() {\r\n    const width = this.element.parentElement.offsetWidth;\r\n    const height = this.element.parentElement.offsetHeight;\r\n\r\n    if (this.params.minWidth != null && this.params.minWidth > width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.minHeight != null && this.params.minHeight > height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxWidth != null && this.params.maxWidth < width) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.maxHeight != null && this.params.maxHeight < height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.params.orientation === 'portrait' && width < height) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createPlaceholder() {\r\n    // tslint:disable-next-line:max-line-length\r\n    return document.createComment(` WGo component placeholder for ${this.component.constructor ? this.component.constructor.name : 'unknown'} ${JSON.stringify(this.params)} `);\r\n  }\r\n}\r\n","import { MarkupBoardObject } from '../../BoardBase';\r\nimport makeConfig, { PartialRecursive } from '../../utils/makeConfig';\r\nimport PlayerDOM from '../PlayerDOM';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\n\r\nexport interface CommentBoxConfig {\r\n  formatMoves: boolean;\r\n  formatNicks: boolean;\r\n}\r\n\r\nexport const commentBoxDefaultConfig = {\r\n  formatMoves: true,\r\n  formatNicks: true,\r\n};\r\n\r\nexport default class CommentsBox implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  commentsElement: HTMLElement;\r\n  player: PlayerDOM;\r\n  config: CommentBoxConfig;\r\n\r\n  constructor(config: PartialRecursive<CommentBoxConfig> = {}) {\r\n    this.config = makeConfig(commentBoxDefaultConfig, config);\r\n    this.setComments = this.setComments.bind(this);\r\n    this.clearComments = this.clearComments.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__box--content';\r\n\r\n    const title = document.createElement('div');\r\n    title.innerHTML = 'Comments';\r\n    title.className = 'wgo-player__box__title';\r\n    this.element.appendChild(title);\r\n\r\n    this.commentsElement = document.createElement('div');\r\n    this.commentsElement.className = 'wgo-player__box__content';\r\n    this.element.appendChild(this.commentsElement);\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    this.player.on('applyNodeChanges.C', this.setComments);\r\n    this.player.on('clearNodeChanges.C', this.clearComments);\r\n\r\n    if (this.player.currentNode) {\r\n      const comment = this.player.currentNode.getProperty('C');\r\n      if (comment) {\r\n        this.setComments({ value: comment });\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off('applyNodeChanges.C', this.setComments);\r\n    this.player.off('clearNodeChanges.C', this.clearComments);\r\n    this.player = null;\r\n  }\r\n\r\n  setComments(event: { value: string }) {\r\n    this.commentsElement.innerHTML = this.formatComment(event.value);\r\n\r\n    if (this.config.formatMoves) {\r\n      [].forEach.call(this.commentsElement.querySelectorAll('.wgo-player__move-link'), (link: HTMLElement) => {\r\n        const point = coordinatesToPoint(link.textContent, this.player.game.size);\r\n        const boardObject = new MarkupBoardObject('MA', point.x, point.y, this.player.game.getStone(point.x, point.y));\r\n        boardObject.zIndex = 20;\r\n\r\n        link.addEventListener('mouseenter', () => {\r\n          this.player.emit('board.addTemporaryObject', boardObject);\r\n        });\r\n\r\n        link.addEventListener('mouseleave', () => {\r\n          this.player.emit('board.removeTemporaryObject', boardObject);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  clearComments() {\r\n    this.commentsElement.textContent = '';\r\n  }\r\n\r\n  formatComment(text: string) {\r\n    // remove HTML tags from text\r\n    let formattedText = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n\r\n    // divide text into paragraphs\r\n    formattedText = `<p>${formattedText.replace(/\\n/g, '</p><p>')}</p>`;\r\n\r\n    if (this.config.formatNicks) {\r\n      formattedText = formattedText.replace(/(<p>)([^:]{3,}:)\\s/g, '<p><span class=\"wgo-player__nick\">$2</span> ');\r\n    }\r\n\r\n    if (this.config.formatMoves) {\r\n      // tslint:disable-next-line:max-line-length\r\n      formattedText = formattedText.replace(/\\b[a-zA-Z]1?\\d\\b/g, '<a href=\"javascript:void(0)\" class=\"wgo-player__move-link\">$&</a>');\r\n    }\r\n\r\n    return formattedText;\r\n  }\r\n}\r\n\r\nfunction coordinatesToPoint(coordinates: string, boardSize: number) {\r\n  const x = coordinates.toLowerCase().charCodeAt(0) - 97; // char code of \"a\"\r\n  const y = parseInt(coordinates.substr(1), 10) - 1;\r\n  return { x, y: boardSize - 1 - y };\r\n}\r\n","import { Color } from '../../types';\r\nimport { LifeCycleEvent } from '../../PlayerBase/types';\r\nimport PlayerDOMComponent from './PlayerDOMComponent';\r\nimport { PlayerDOM } from '../..';\r\n\r\nexport default class PlayerTag implements PlayerDOMComponent {\r\n  element: HTMLElement;\r\n  player: PlayerDOM;\r\n  color: Color;\r\n  colorChar: 'B' | 'W';\r\n  colorName: 'black' | 'white';\r\n  playerNameElement: HTMLElement;\r\n  playerRankElement: HTMLElement;\r\n  playerTeamElement: HTMLElement;\r\n  playerCapsElement: HTMLElement;\r\n\r\n  constructor(color: Color.B | Color.W) {\r\n    this.color = color;\r\n    this.colorChar = color === Color.B ? 'B' : 'W';\r\n    this.colorName = color === Color.B ? 'black' : 'white';\r\n\r\n    this.setName = this.setName.bind(this);\r\n    this.setRank = this.setRank.bind(this);\r\n    this.setTeam = this.setTeam.bind(this);\r\n    this.setCaps = this.setCaps.bind(this);\r\n\r\n    // create HTML\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-player__box wgo-player__player-tag';\r\n\r\n    const playerElement = document.createElement('div');\r\n    playerElement.className = 'wgo-player__player-tag__name';\r\n    this.element.appendChild(playerElement);\r\n\r\n    this.playerNameElement = document.createElement('span');\r\n    playerElement.appendChild(this.playerNameElement);\r\n\r\n    this.playerRankElement = document.createElement('small');\r\n    this.playerRankElement.className = 'wgo-player__player-tag__name__rank';\r\n    playerElement.appendChild(this.playerRankElement);\r\n\r\n    this.playerCapsElement = document.createElement('div');\r\n    this.playerCapsElement.className = `wgo-player__player-tag__color wgo-player__player-tag__color--${this.colorName}`;\r\n    this.playerCapsElement.textContent = '0';\r\n    this.element.appendChild(this.playerCapsElement);\r\n\r\n    // todo team\r\n    this.playerTeamElement = document.createElement('div');\r\n  }\r\n\r\n  create(player: PlayerDOM) {\r\n    this.player = player;\r\n\r\n    // attach Kifu listeners\r\n    this.player.on(`beforeInit.P${this.colorChar}`, this.setName); // property PB or PW\r\n    this.player.on(`beforeInit.${this.colorChar}R`, this.setRank); // property BR or WR\r\n    this.player.on(`beforeInit.${this.colorChar}T`, this.setTeam); // property BT or WT\r\n    this.player.on('applyNodeChanges', this.setCaps);\r\n\r\n    // set current (probably initial) values\r\n    this.initialSet();\r\n  }\r\n\r\n  destroy() {\r\n    this.player.off(`beforeInit.P${this.colorChar}`, this.setName);\r\n    this.player.off(`beforeInit.${this.colorChar}R`, this.setRank);\r\n    this.player.off(`beforeInit.${this.colorChar}T`, this.setTeam);\r\n    this.player.off('applyNodeChanges', this.setCaps);\r\n\r\n    this.player = null;\r\n  }\r\n\r\n  setName(event: LifeCycleEvent<string>) {\r\n    this.playerNameElement.textContent = event.value || this.colorName;\r\n  }\r\n\r\n  setRank(event: LifeCycleEvent<string>) {\r\n    this.playerRankElement.textContent = event.value;\r\n  }\r\n\r\n  setTeam(event: LifeCycleEvent<string>) {\r\n    this.playerTeamElement.textContent = event.value;\r\n  }\r\n\r\n  setCaps() {\r\n    this.playerCapsElement.textContent = this.player.game.position.capCount[this.colorName].toString();\r\n  }\r\n\r\n  private initialSet() {\r\n    if (this.player.rootNode) {\r\n      this.playerNameElement.textContent = this.player.rootNode.getProperty(`P${this.colorChar}`) || this.colorName;\r\n      this.playerRankElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}R`) || '';\r\n      this.playerTeamElement.textContent = this.player.rootNode.getProperty(`${this.colorChar}T`) || '';\r\n    }\r\n    if (this.player.game) {\r\n      this.setCaps();\r\n    }\r\n  }\r\n}\r\n","import makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { Color } from '../types';\r\nimport PlayerDOM, { PlayerDOMConfig, playerDOMDefaultConfig } from '../PlayerDOM/PlayerDOM';\r\nimport SVGBoardComponent, {\r\n  defaultSVGBoardComponentConfig,\r\n  SVGBoardComponentConfig,\r\n} from '../PlayerDOM/components/SVGBoardComponent';\r\nimport CommentsBox, { CommentBoxConfig, commentBoxDefaultConfig } from '../PlayerDOM/components/CommentsBox';\r\nimport GameInfoBox, { GameInfoBoxConfig, gameInfoBoxDefaultConfig } from '../PlayerDOM/components/GameInfoBox';\r\nimport { EditMode } from '../PlayerBase/plugins';\r\nimport { Container, ControlPanel, PlayerTag, ResponsiveComponent } from '../PlayerDOM/components';\r\nimport KifuNode from '../kifu/KifuNode';\r\nimport PlayerDOMComponent from '../PlayerDOM/components/PlayerDOMComponent';\r\n\r\ninterface SimplePlayerConfig extends PlayerDOMConfig {\r\n  board: SVGBoardComponentConfig;\r\n  comments: CommentBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  gameInfo: GameInfoBoxConfig & {\r\n    enabled: boolean;\r\n  };\r\n  sgfFile: string | null;\r\n  sgf: string | null;\r\n}\r\n\r\nconst defaultConfig: SimplePlayerConfig = {\r\n  ...playerDOMDefaultConfig,\r\n  board: defaultSVGBoardComponentConfig,\r\n  comments: {\r\n    enabled: true,\r\n    ...commentBoxDefaultConfig,\r\n  },\r\n  gameInfo: {\r\n    enabled: true,\r\n    ...gameInfoBoxDefaultConfig,\r\n  },\r\n  sgfFile: null,\r\n  sgf: null,\r\n};\r\n\r\nexport default class SimplePlayer extends PlayerDOM {\r\n  element: HTMLElement;\r\n  config: SimplePlayerConfig;\r\n\r\n  constructor(elem: HTMLElement, config: PartialRecursive<SimplePlayerConfig> = {}) {\r\n    super();\r\n\r\n    // TODO - already partially done in PlayerDOM\r\n    this.config = makeConfig(defaultConfig, config);\r\n\r\n    this.element = elem;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const editMode = new EditMode();\r\n    this.use(editMode);\r\n\r\n    const svgBoardComponent = new SVGBoardComponent(this.config.board);\r\n\r\n    const controlPanelConfig = {\r\n      menuItems: [\r\n        ControlPanel.menuItems.editMode(editMode),\r\n        ControlPanel.menuItems.displayCoordinates(svgBoardComponent),\r\n        ControlPanel.menuItems.download(this),\r\n        ControlPanel.menuItems.gameInfo(this, elem => this.element.firstChild.appendChild(elem)),\r\n      ],\r\n    };\r\n\r\n    const rightColumn: PlayerDOMComponent[] = [];\r\n    const bottom: PlayerDOMComponent[] = [];\r\n\r\n    if (this.config.gameInfo.enabled) {\r\n      rightColumn.push(new GameInfoBox(this.config.gameInfo));\r\n    }\r\n\r\n    if (this.config.comments.enabled) {\r\n      rightColumn.push(new CommentsBox(this.config.comments));\r\n      bottom.push(new ResponsiveComponent({ maxWidth: 649 }, new CommentsBox(this.config.comments)));\r\n    }\r\n\r\n    const component = new Container('column', [\r\n      new ResponsiveComponent({ maxWidth: 749 }, new Container('row', [\r\n        new PlayerTag(Color.B),\r\n        new PlayerTag(Color.W),\r\n      ])),\r\n      new Container('row', [\r\n        svgBoardComponent,\r\n        new ResponsiveComponent({ minWidth: 650 }, new Container('column', [\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.B)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new PlayerTag(Color.W)),\r\n          new ResponsiveComponent({ minWidth: 250 }, new ControlPanel(controlPanelConfig)),\r\n          ...rightColumn,\r\n        ])),\r\n      ]),\r\n      new ResponsiveComponent({ maxWidth: 749 }, new ControlPanel(controlPanelConfig)),\r\n      ...bottom,\r\n    ]);\r\n\r\n    this.render(component, this.element);\r\n\r\n    if (this.config.sgf) {\r\n      this.loadKifu(KifuNode.fromSGF(this.config.sgf));\r\n    } else if (this.config.sgfFile) {\r\n      // TODO add some loading overlay and error state\r\n      fetch(this.config.sgfFile).then(\r\n        response => response.text(),\r\n      ).then(\r\n        value => this.loadKifu(KifuNode.fromSGF(value)),\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["Color","message","parser","__proto__","prototype","name","lineNo","charNo","sgfString","split","Array","join","Error","CODE_A","charCodeAt","CODE_Z","CODE_WHITE_CHAR","isCharUCLetter","char","charCode","sgf","position","this","currentChar","nextChar","processChar","SGFSyntaxError","parsePropertyValue","optional","value","parsePropertyIdent","ident","parsePropertyValues","values","push","parseProperty","parseNode","property","properties","parseSequence","sequence","parseGameTree","children","parseCollection","gameTrees","NONE","read","str","write","NUMBER","parseFloat","toString","TEXT","COLOR","WHITE","BLACK","POINT","x","y","String","fromCharCode","LABEL","text","substr","VECTOR","propertyValueTypes","_default","transformer","multiple","notEmpty","B","W","KO","MN","AB","AW","AE","PL","C","N","DM","GB","GW","HO","UC","V","BM","TE","DO","IT","CR","MA","SL","SQ","TR","LB","AR","LN","DD","TB","TW","AP","CA","FF","GM","ST","SZ","AN","BR","BT","CP","DT","EV","GN","GC","ON","OT","PB","PC","PW","RE","RO","RU","SO","US","WR","WT","TM","HA","KM","BL","WL","OB","OW","PM","VW","Repeating","processJSGF","gameTree","rootNode","setSGFProperties","lastNode","i","length","node","KifuNode","appendChild","escapeCharacters","escapeSGFValue","reduce","prev","current","replace","RegExp","parent","output","propIdent","hasOwnProperty","getSGFProperty","map","innerSGF","clean","transformedSgf","fromSGF","getPath","path","depth","forks","unshift","indexOf","removeChild","contains","some","child","insertBefore","newNode","referenceNode","splice","replaceChild","newChild","oldChild","getProperty","setProperty","undefined","removeProperty","forEachProperty","callback","Object","keys","forEach","propValue","setSGFProperty","propValues","propertyValueType","val","toSGF","cloneNode","appendToParent","JSON","parse","stringify","fromJS","kifuNode","gameNo","SGFParser","JAPANESE_RULES","repeating","allowRewrite","allowSuicide","komi","CHINESE_RULES","ING_RULES","NO_RULES","ALL","Japanese","GOE","NZ","AGA","Chinese","createGrid","size","grid","capCount","black","white","turn","clear","isOnPosition","get","set","c","TypeError","EMPTY","clone","Position","slice","compare","diff","Math","floor","applyMove","prevColor","capturesAbove","captureIfNoLiberties","capturesRight","capturesBelow","capturesLeft","hasLiberties","capture","validatePosition","alreadyTested","TL","ML","MM","MR","BS","WS","HF","color","toTwoDimensionalArray","arr","rules","positionStack","pos","play","nextPosition","tryToPlay","pushPosition","hasPositionRepeated","pass","isValid","isOnBoard","addStone","removeStone","setStone","getStone","popPosition","pop","type","zIndex","opacity","scaleX","scaleY","rotate","setPosition","setScale","factor","BoardObject","variation","E","FieldBoardObject","MarkupBoardObject","start","end","_events","on","evName","off","filter","fn","emit","args","makeConfig","defaults","config","mergedConfig","defaultKeys","key","defVal","constructor","isArray","defaultBoardBaseTheme","stoneSize","marginSize","font","backgroundColor","backgroundImage","markupBlackColor","markupWhiteColor","markupNoneColor","markupLineWidth","shadowColor","shadowTransparentColor","shadowBlur","shadowOffsetX","shadowOffsetY","linesWidth","linesColor","starColor","starSize","coordinates","bold","labelsX","labelsY","starPoints","defaultBoardBaseConfig","width","height","viewport","top","right","bottom","left","theme","element","objects","resize","redraw","addObject","boardObject","hasObject","updateObject","removeObject","objectPos","removeObjectsAt","obj","removeAllObjects","setWidth","setHeight","setDimensions","getViewport","setViewport","getSize","setSize","getCoordinates","setCoordinates","EventEmitter","SVG_NS","SVG_OBJECTS","SVG_GRID_MASK","SVG_SHADOWS","params","createElement","createSVGElements","group","document","createElementNS","startCircle","line","endTriangle","updateElement","elem","setAttribute","lineWidth","updateSVGElements","markupGridMask","x1","y1","x2","y2","sqrt","getLineX","t","getLineY","triangleLen","tx","ty","getBaseLineX","getBaseLineY","circleLen","transform","scale","ctx","fillColor","SVGFieldDrawHandler","circle","mask","SVGMarkupDrawHandler","rect","generateId","prefix","random","addDef","createShadow","stoneRadius","shadowFilterElement","startRadius","max","stopRadius","innerHTML","shadow","id","filterElement","stoneGroup","stone","glow1","glow2","SVGStoneDrawHandler","filterElement1","filter1","filter2","filterElement2","maxWidth","fontSize","removeAttribute","textContent","getComputedTextLength","paths","fallback","randSeed","ceil","loadedPaths","fallbackElement","SVGElement","image","addEventListener","square","triangle","fromX","fromY","toX","toY","star","starPoint","letter","createCoordinates","style","userSelect","PropIdent","defaultSVGTheme","drawHandlers","drawHandlers.Circle","drawHandlers.Square","drawHandlers.Label","drawHandlers.Triangle","drawHandlers.XMark","drawHandlers.Dot","drawHandlers.Line","drawHandlers.Arrow","drawHandlers.Dim","ModernStoneWhite","ModernStoneBlack","svgBoardDefaultConfig","contexts","boardElement","display","verticalAlign","touchArea","borderTop","borderRight","borderLeft","borderBottom","svgElement","defsElement","drawGrid","drawCoordinates","drawObjects","gridElement","coordinatesElement","objectsElementMap","Map","createObjectElements","elements","handler","getObjectHandler","def","delete","coordinatesTop","coordinatesLeft","coordinatesBottom","coordinatesRight","registerBoardListener","evt","layerX","getRelativeCoordinates","layerY","absoluteX","absoluteY","fieldWidth","offsetWidth","fieldHeight","offsetHeight","round","BoardBase","beforeInitSZ","event","target","beforeInitRU","goRules","applyGameChangesHA","currentNode","SET_TURN","game","applyGameChangesMove","applyGameChangesPL","applyGameChangesSetup","loadKifu","plugins","basePropertyListeners.beforeInitSZ","basePropertyListeners.beforeInitRU","basePropertyListeners.applyGameChangesHA","basePropertyListeners.applyGameChangesMove","basePropertyListeners.applyGameChangesPL","basePropertyListeners.applyGameChangesSetup","executeRoot","newGame","rulesName","find","emitNodeLifeCycleEvent","Game","executeNode","executeNext","executePrevious","getPropertyHandler","propertyHandlers","getRootProperty","getNextNodes","next","previous","first","last","goTo","pathOrMoveNumber","j","getCurrentPath","previousFork","WHITE_MOVE","BLACK_MOVE","use","plugin","apply","defaultEditModeConfig","enabled","showVariations","gameStateStack","handleChange","enable","disable","player","setEnabled","point","childNode","move","saveGameState","VARIATIONS_STYLE","lastX","lastY","blackStone","whiteStone","addedStone","_boardMouseMoveEvent","p","_boardMouseOutEvent","_boardClickEvent","_nodeChange","restoreGameState","lastState","playerDOMDefaultConfig","enableMouseWheel","enableKeys","fastReplay","components","fastReplayEnabled","handleResize","handleMouseWheel","e","deltaY","preventDefault","handleKeydown","hasFocus","fastReplayTimeout","window","setTimeout","handleKeyup","clearTimeout","render","component","container","wrapper","createWrapper","create","destroy","firstChild","removeEventListener","className","tabIndex","activeElement","PlayerBase","direction","gameInfoBoxDefaultConfig","gameInfoProperties","hideResult","printInfo","bind","title","tableWrapper","infoTable","addInfo","hide","row","dataset","label","valueElement","link","href","removeInfo","querySelector","RESULT","defaultConfig","menuItems","update","createDOM","buttonGroup","parseInt","moveNumber","menuWrapper","menuButton","menu","createMenuItems","disabled","menuItem","menuItemElement","defaultChecked","classList","add","res","handleClick","checkable","remove","blur","download","GAME_NAME","encodeURIComponent","body","click","displayCoordinates","boardComponent","editMode","gameInfo","overlay","overlayClose","parentElement","modal","modalContent","GameInfoBox","wgoInfo","LabelBoardObject","colorsMap","defaultSVGBoardComponentConfig","currentMoveBlackMark","Circle","currentMoveWhiteMark","variationDrawHandler","SVGLabel","highlightCurrentMove","showCurrentVariations","viewportStack","applyNodeChanges","clearNodeChanges","applyMarkupProperty","applyLabelMarkupProperty","applyLineMarkupProperty","applyViewportProperty","clearViewportProperty","applyMoveProperty","addTemporaryBoardObject","removeTemporaryBoardObject","updateTemporaryBoardObject","stoneBoardsObjects","temporaryBoardObjects","board","SVGBoard","handleBoardClick","boardMouseX","boardMouseY","handleBoardMouseMove","handleBoardMouseOut","updateStones","addVariationMarkup","moves","getVariations","SVGCustomLabelBoardObject","fromCodePoint","handleVariationCursor","clearTemporaryBoardObjects","ind","findIndex","shouldShowCurrentVariations","removeVariationCursor","cursor","boardMarkup","LineBoardObject","currentViewport","minX","min","minY","maxX","maxY","previousViewport","isThereMarkup","SVGCustomFieldBoardObject","o","b","shouldShowVariations","st","samePoint","p1","p2","field","propIdents","visible","shouldRenderComponent","placeholder","createPlaceholder","componentElement","minWidth","minHeight","maxHeight","orientation","createComment","commentBoxDefaultConfig","formatMoves","formatNicks","setComments","clearComments","commentsElement","comment","formatComment","call","querySelectorAll","coordinatesToPoint","formattedText","boardSize","toLowerCase","colorChar","colorName","setName","setRank","setTeam","setCaps","playerElement","playerNameElement","playerRankElement","playerCapsElement","playerTeamElement","initialSet","comments","sgfFile","init","EditMode","svgBoardComponent","SVGBoardComponent","controlPanelConfig","ControlPanel","rightColumn","CommentsBox","ResponsiveComponent","Container","PlayerTag","fetch","then","response","PlayerDOM"],"sourceRoot":""}